{
    "swagger": "2.0",
    "info": {},
    "basePath": "/mtis-web-billing/rest",
    "tags": [
        {
            "name": "main-dataaccounting"
        },
        {
            "name": "currency-receipts"
        },
        {
            "name": "invoice-for-payments"
        },
        {
            "name": "payment-demands"
        },
        {
            "name": "accountingreturn-history"
        },
        {
            "name": "ruble-receipts"
        },
        {
            "name": "administration"
        },
        {
            "name": "administrationsearch-activities-system"
        },
        {
            "name": "administrationusers"
        },
        {
            "name": "administrationvoluntary-blocks"
        },
        {
            "name": "app-info"
        },
        {
            "name": "main-databank-account"
        },
        {
            "name": "bank-account"
        },
        {
            "name": "accountingpayment-orders"
        },
        {
            "name": "brokercommissions"
        },
        {
            "name": "main-databroker"
        },
        {
            "name": "brokerpayment-distr"
        },
        {
            "name": "broker"
        },
        {
            "name": "brokeraddress"
        },
        {
            "name": "brokervat-rate"
        },
        {
            "name": "brokerwait-recalculation-history"
        },
        {
            "name": "brokerdbf-files"
        },
        {
            "name": "brokererrors"
        },
        {
            "name": "brokerhistory-recalculation"
        },
        {
            "name": "appeal-call-center"
        },
        {
            "name": "omega"
        },
        {
            "name": "order-management"
        },
        {
            "name": "cashboxcash-operation"
        },
        {
            "name": "cashboxcash-transactions-report"
        },
        {
            "name": "main-datacashbox"
        },
        {
            "name": "main-databonus"
        },
        {
            "name": "bonus"
        },
        {
            "name": "bonusacc-settings"
        },
        {
            "name": "main-datadiscount"
        },
        {
            "name": "discountmatrix"
        },
        {
            "name": "discount"
        },
        {
            "name": "main-datatsc-discount"
        },
        {
            "name": "tsc-discount"
        },
        {
            "name": "contractsdiscounts"
        },
        {
            "name": "contractsgoods"
        },
        {
            "name": "main-datacontracts"
        },
        {
            "name": "contractsoptions"
        },
        {
            "name": "contracts"
        },
        {
            "name": "contractstariff-plans"
        },
        {
            "name": "main-datatechnical-parameters"
        },
        {
            "name": "technical-parameters"
        },
        {
            "name": "main-datacounterparty"
        },
        {
            "name": "main-datacountry"
        },
        {
            "name": "main-data"
        },
        {
            "name": "ctodepartment-configurator"
        },
        {
            "name": "ctoevents-history"
        },
        {
            "name": "transfer-in-transit"
        },
        {
            "name": "main-datafunds-transfer"
        },
        {
            "name": "funds-transfer"
        },
        {
            "name": "global-invoicing"
        },
        {
            "name": "goods"
        },
        {
            "name": "goodsmanagement"
        },
        {
            "name": "group-changesbonus-contracts"
        },
        {
            "name": "group-changesbonus-contractsoptions"
        },
        {
            "name": "group-changestp-discount-limit-contracts"
        },
        {
            "name": "group-changestp-discount-limit-contractsoptions"
        },
        {
            "name": "group-changes"
        },
        {
            "name": "group-changesoptionsdiscounts"
        },
        {
            "name": "main-datainventory"
        },
        {
            "name": "inventoryhouse-configurator"
        },
        {
            "name": "inventoryroom-configurator"
        },
        {
            "name": "inventorystation-configurator"
        },
        {
            "name": "main-datainvoices"
        },
        {
            "name": "invoices"
        },
        {
            "name": "invoice-register"
        },
        {
            "name": "jaspergen"
        },
        {
            "name": "main-dataactivation-type"
        },
        {
            "name": "main-dataactivity-types"
        },
        {
            "name": "main-dataactiv-kind-subgroup"
        },
        {
            "name": "main-datadistricts"
        },
        {
            "name": "main-datahouse-statuses"
        },
        {
            "name": "main-dataroom-types"
        },
        {
            "name": "main-datastation-types"
        },
        {
            "name": "main-datastreet-types"
        },
        {
            "name": "main-datastreets"
        },
        {
            "name": "main-dataappeals-categories"
        },
        {
            "name": "main-dataappeals-channels"
        },
        {
            "name": "main-datacallcenter-way"
        },
        {
            "name": "main-dataarrears-reasons"
        },
        {
            "name": "main-databank"
        },
        {
            "name": "main-databank-return"
        },
        {
            "name": "main-datacheck-marks"
        },
        {
            "name": "main-datacommon-config"
        },
        {
            "name": "main-datacommutators"
        },
        {
            "name": "conax"
        },
        {
            "name": "main-dataapp-settings"
        },
        {
            "name": "main-databusiness-constants"
        },
        {
            "name": "main-datacontract-break"
        },
        {
            "name": "main-datacorrecting-reasons"
        },
        {
            "name": "main-datacurrency"
        },
        {
            "name": "main-datacurrency-rate"
        },
        {
            "name": "main-datadepartments"
        },
        {
            "name": "main-datadepot"
        },
        {
            "name": "main-datadhcps"
        },
        {
            "name": "main-datadocument-type-forming"
        },
        {
            "name": "main-dataemployees"
        },
        {
            "name": "main-dataerip"
        },
        {
            "name": "eriperip-payments"
        },
        {
            "name": "eripmessages-202-204"
        },
        {
            "name": "erip-test"
        },
        {
            "name": "main-datafilter-types"
        },
        {
            "name": "main-datafrp-group"
        },
        {
            "name": "main-datagoodsactions"
        },
        {
            "name": "main-datagoodsgroups"
        },
        {
            "name": "main-datagoodsmanufacturers"
        },
        {
            "name": "main-datagoodsmodels"
        },
        {
            "name": "main-datagoodsstatuses"
        },
        {
            "name": "main-dataipzone"
        },
        {
            "name": "main-datareasons-for-lock"
        },
        {
            "name": "main-datameasure"
        },
        {
            "name": "main-datanas"
        },
        {
            "name": "main-dataone-field-dict"
        },
        {
            "name": "main-dataonetimeoperations"
        },
        {
            "name": "main-dataoperator-prop"
        },
        {
            "name": "main-dataorder-reasons"
        },
        {
            "name": "main-datacustom-operation"
        },
        {
            "name": "main-datapt"
        },
        {
            "name": "main-datacancel-reasons"
        },
        {
            "name": "main-datareasons-for-appeals"
        },
        {
            "name": "main-datasign-basis"
        },
        {
            "name": "main-datasubscr-group"
        },
        {
            "name": "main-datasubscriber-categories"
        },
        {
            "name": "main-datasubscr-subgroup"
        },
        {
            "name": "main-datasupplies"
        },
        {
            "name": "main-dataswitchaddress"
        },
        {
            "name": "main-dataswitch"
        },
        {
            "name": "main-datadefect-tvcharacteristic"
        },
        {
            "name": "main-datadefect-tvclass"
        },
        {
            "name": "main-datadefect-tvwork-type"
        },
        {
            "name": "main-datatv-channels"
        },
        {
            "name": "main-datafailure-tv"
        },
        {
            "name": "main-dataanalog-tv-statuses"
        },
        {
            "name": "main-datavat"
        },
        {
            "name": "main-datawork-kind"
        },
        {
            "name": "modelpdf"
        },
        {
            "name": "main-datamailing-notifications"
        },
        {
            "name": "mailing-notifications"
        },
        {
            "name": "mailing-sent-notifications"
        },
        {
            "name": "maintenance-and-repair-order"
        },
        {
            "name": "orders"
        },
        {
            "name": "main-dataorders"
        },
        {
            "name": "ordersconfig"
        },
        {
            "name": "orderspayconfirm"
        },
        {
            "name": "key-valuesorderstype"
        },
        {
            "name": "link-configurator"
        },
        {
            "name": "order-type-configurator"
        },
        {
            "name": "main-datapromised-payment"
        },
        {
            "name": "promised-payment"
        },
        {
            "name": "promised-paymentavailable-amount"
        },
        {
            "name": "automatic-payment-requirements"
        },
        {
            "name": "payment-requirements"
        },
        {
            "name": "history-personal-account-operations"
        },
        {
            "name": "main-datapersonal-account"
        },
        {
            "name": "personal-account"
        },
        {
            "name": "main-dataprepayment-invoices"
        },
        {
            "name": "prepayment-invoices"
        },
        {
            "name": "recalculations"
        },
        {
            "name": "main-datadebtor"
        },
        {
            "name": "debtor"
        },
        {
            "name": "generate-room-card-report"
        },
        {
            "name": "main-datarounding-config"
        },
        {
            "name": "rounding-config"
        },
        {
            "name": "subscribers"
        },
        {
            "name": "main-datasubscribers"
        },
        {
            "name": "tariff-planadditional-service-settings"
        },
        {
            "name": "tariff-plancost-matrix"
        },
        {
            "name": "tariff-planinteraction-matrix"
        },
        {
            "name": "main-datatariff-plan"
        },
        {
            "name": "tariff-plan"
        },
        {
            "name": "tariff-planterr-binding"
        },
        {
            "name": "traffic-pptp"
        },
        {
            "name": "authentication"
        },
        {
            "name": "credential"
        },
        {
            "name": "user"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/main-data/accounting/refund-types": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Retrieves refund types",
                "description": "",
                "operationId": "getRefundTypesKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/users": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Retrieves users",
                "description": "",
                "operationId": "getUsers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/receipt-types": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Retrieves receipt types",
                "description": "",
                "operationId": "getReceiptTypesKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/tariff-plans": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides tariff plans key-values",
                "description": "",
                "operationId": "getTariffPlansKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/discounts": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides discounts for analog tv key-values",
                "description": "",
                "operationId": "getDiscountsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/transfer-costs": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides transfer costs key-values",
                "description": "",
                "operationId": "getTransferCosts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/display-vat-types": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides display vat types key-values",
                "description": "",
                "operationId": "getDisplayVatTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/acceptances": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides acceptances key-values",
                "description": "",
                "operationId": "getAcceptances",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/create-methods": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides create methods key-values",
                "description": "",
                "operationId": "getPaymentDemandsCreateMethods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/payment-demand-statuses": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides payment demand statuses key-values",
                "description": "",
                "operationId": "getPaymentDemandsStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/accounting/payment-statuses": {
            "get": {
                "tags": [
                    "main-dataaccounting"
                ],
                "summary": "Provides payment statuses key-values",
                "description": "",
                "operationId": "getPaymentStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/currency-receipts/report": {
            "post": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCurrencyReceiptSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/currency-receipts/bank-info": {
            "get": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Provides the bank info by currencyId",
                "description": "",
                "operationId": "getRecipientBankInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "currencyId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank info found successfully"
                    },
                    "400": {
                        "description": "Can't found bank info"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/currency-receipts/sender-bank-info": {
            "get": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Provides the sender bank info by currencyId",
                "description": "",
                "operationId": "getSenderBankInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sender bank info found successfully"
                    },
                    "400": {
                        "description": "Can't found sender bank info"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/currency-receipts/cancel": {
            "post": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Cancel current operation",
                "description": "",
                "operationId": "cancelCurrencyReceipt",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CurrencyReceiptCancel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was canceled successfully"
                    },
                    "400": {
                        "description": "Can't find any info"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/currency-receipts/save": {
            "post": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Create new currency receipt",
                "description": "",
                "operationId": "saveCurrencyReceipt",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CurrencyReceipt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt saved successfully"
                    },
                    "400": {
                        "description": "Can not saved receipt"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/currency-receipts": {
            "post": {
                "tags": [
                    "currency-receipts"
                ],
                "summary": "Provides the list of receipt",
                "description": "",
                "operationId": "getCurrencyReceipts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CurrencyReceiptSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found receipts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of receipts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/invoice-for-payments/report": {
            "post": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelInvoiceForPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments/annul": {
            "post": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Annul the list of invoice for payment",
                "description": "",
                "operationId": "annulInvoiceForPayments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceForPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments/register-payments": {
            "post": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Register the list of payments",
                "description": "",
                "operationId": "registerPaymentList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedPaymentsRegisterData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments/register-payment": {
            "post": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Register the payment",
                "description": "",
                "operationId": "registerPayment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentRegisterData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments": {
            "post": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Provides the list of invoice for payment",
                "description": "",
                "operationId": "getInvoiceForPayments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceForPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments/{id}/details": {
            "get": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Provides the list of invoice for payment details",
                "description": "",
                "operationId": "getInvoiceForPaymentById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of needed invoice for payment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-for-payments/{id}/history": {
            "get": {
                "tags": [
                    "invoice-for-payments"
                ],
                "summary": "Provides the list of invoice for payment history",
                "description": "",
                "operationId": "getInvoiceForPaymentHistoryById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of needed invoice for payment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands/report": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getReportExcel_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPaymentDemandSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands/history/{id}": {
            "delete": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Remove payment invoice by id",
                "description": "",
                "operationId": "deleteSupply",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed payment invoice",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment invoice deleted successfully"
                    },
                    "400": {
                        "description": "Can not delete payment invoice"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/payment-demands/pd-code": {
            "get": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of pd codes",
                "description": "",
                "operationId": "getPdCodesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands/act": {
            "get": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of legislative acts",
                "description": "",
                "operationId": "getLegislativeActsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of payment demand",
                "description": "",
                "operationId": "getPaymentDemand",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentDemandSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found payment demands"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of payment demands"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/payment-demands/seasonality/key-value": {
            "get": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of seasonality",
                "description": "",
                "operationId": "getSeasonalityKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands/save": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Saving a payment demand",
                "description": "",
                "operationId": "savePaymentDemand",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentDemand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment demand saved successfully"
                    },
                    "400": {
                        "description": "Can not saved payment demand"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/payment-demands/document": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Generate a payment order text file.",
                "description": "",
                "operationId": "generateTextFile",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataPaymentDemandSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-demands/history": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of payment invoice history",
                "description": "",
                "operationId": "getPaymentDemandInvoices",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentDemandInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found payment invoice histories"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of payment invoice histories"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/payment-demands/history/save": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Saving a payment invoice",
                "description": "",
                "operationId": "savePaymentDemandInvoice",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentDemandInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment invoice saved successfully"
                    },
                    "400": {
                        "description": "Can not saved payment invoice"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/payment-demands/by-bill-act": {
            "post": {
                "tags": [
                    "payment-demands"
                ],
                "summary": "Provides the list of payment demand",
                "description": "LazarenkaM",
                "operationId": "getByBillActPaymentList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BillActPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/return-history": {
            "post": {
                "tags": [
                    "accountingreturn-history"
                ],
                "summary": "Retrieves return history as paginated list",
                "description": "",
                "operationId": "find",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReturnHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/return-history/perform-operation": {
            "post": {
                "tags": [
                    "accountingreturn-history"
                ],
                "summary": "Performs cancellation or sets date of operation by its id",
                "description": "",
                "operationId": "performOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReturnHistoryOperationData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/return-history/report": {
            "post": {
                "tags": [
                    "accountingreturn-history"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelReturnHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/return-history/document": {
            "post": {
                "tags": [
                    "accountingreturn-history"
                ],
                "summary": "Generate a payment order text file.",
                "description": "",
                "operationId": "generateTextFile_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataReturnHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ruble-receipts/report": {
            "post": {
                "tags": [
                    "ruble-receipts"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelRubleReceiptSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ruble-receipts/import-bank-statement": {
            "post": {
                "tags": [
                    "ruble-receipts"
                ],
                "summary": "Import bank statement",
                "description": "",
                "operationId": "importBankStatement",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import bank statement"
                    },
                    "400": {
                        "description": "Can't import bank statement"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/ruble-receipts/save": {
            "post": {
                "tags": [
                    "ruble-receipts"
                ],
                "summary": "Saving a ruble receipt",
                "description": "",
                "operationId": "saveRubleReceipt",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RubleReceiptSplitData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt saved successfully"
                    },
                    "400": {
                        "description": "Can not saved receipt"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/ruble-receipts": {
            "post": {
                "tags": [
                    "ruble-receipts"
                ],
                "summary": "Provides the list of ruble receipt",
                "description": "",
                "operationId": "getRubleReceiptList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RubleReceiptSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found receipts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of receipts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/ruble-receipts/{id}": {
            "get": {
                "tags": [
                    "ruble-receipts"
                ],
                "summary": "Provides the full information about ruble receipt by id",
                "description": "",
                "operationId": "getRubleReceiptById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed ruble receipt",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found receipt"
                    },
                    "400": {
                        "description": "Can't retrieve the found receipt"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups": {
            "post": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides a list of user groups corresponds to search criteria",
                "description": "",
                "operationId": "getGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search request processed successfully. List of groups found by search criteria returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't process search request"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups/{id}/users": {
            "post": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides a list of users included in the selected group",
                "description": "",
                "operationId": "getGroupLinkList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users found successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't process search request"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups/save": {
            "post": {
                "tags": [
                    "administration"
                ],
                "summary": "Save user group",
                "description": "Update or create user group",
                "operationId": "saveGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User group data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User group saved successfully"
                    },
                    "400": {
                        "description": "Can't save user group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups/{id}": {
            "get": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides the full information about group roles by id",
                "description": "",
                "operationId": "getGroupRolesById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found group"
                    },
                    "400": {
                        "description": "Can't retrieve the found group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "administration"
                ],
                "summary": "Remove user group",
                "description": "User group can be deleted only if it doesn't contain any user",
                "operationId": "deleteGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User group deleted successfully"
                    },
                    "400": {
                        "description": "Can't delete user group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups/key-value": {
            "get": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides group key-values",
                "description": "",
                "operationId": "getGroupKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found group"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/groups/link": {
            "post": {
                "tags": [
                    "administration"
                ],
                "summary": "Add users to group or remove users from group",
                "description": "",
                "operationId": "linkUsersToGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users added/removed successfully"
                    },
                    "400": {
                        "description": "Can't add/remove user"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/templates/{id}": {
            "get": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides the full information about pattern by id",
                "description": "",
                "operationId": "getPatternById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed pattern",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found pattern"
                    },
                    "400": {
                        "description": "Can't retrieve the found pattern"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/templates/key-value": {
            "get": {
                "tags": [
                    "administration"
                ],
                "summary": "Provides pattern key-values",
                "description": "",
                "operationId": "getPatternKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found pattern"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of pattern"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/search-activities-system/report": {
            "post": {
                "tags": [
                    "administrationsearch-activities-system"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "report",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSearchActivitySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/administration/search-activities-system": {
            "post": {
                "tags": [
                    "administrationsearch-activities-system"
                ],
                "summary": "Provides a list of SearchActivities data which corresponds to search criteria",
                "description": "",
                "operationId": "listSorm",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchActivitySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search request processed successfully. List of users found by search criteria returned"
                    },
                    "400": {
                        "description": "Can't process search request"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/users/report": {
            "post": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_5",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelUserSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/administration/users/{id}": {
            "delete": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Remove user",
                "description": "",
                "operationId": "deleteUser",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "400": {
                        "description": "Can't delete user"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/users": {
            "post": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Provides a list of users corresponds to search criteria",
                "description": "",
                "operationId": "getUsers_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search request processed successfully. List of users found by search criteria returned"
                    },
                    "400": {
                        "description": "Can't process search request"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/users/chgpwd": {
            "post": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Change user password",
                "description": "",
                "operationId": "changePassword",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Password change data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User password updated successfully"
                    },
                    "400": {
                        "description": "Can't change user password"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/users/user-type-key-value": {
            "get": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Getting user type key value",
                "description": "",
                "operationId": "getUserTypeKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/administration/users/save": {
            "post": {
                "tags": [
                    "administrationusers"
                ],
                "summary": "Save user",
                "description": "Update or create user",
                "operationId": "saveUser",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User saved successfully"
                    },
                    "400": {
                        "description": "Can't save user to DB"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/voluntary-blocks/save": {
            "post": {
                "tags": [
                    "administrationvoluntary-blocks"
                ],
                "summary": "Create new voluntary block",
                "description": "",
                "operationId": "save",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Voluntary block data transfer object",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VoluntaryBlock"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voluntary block saved successfully"
                    },
                    "400": {
                        "description": "Can not saved voluntary block"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/voluntary-blocks": {
            "get": {
                "tags": [
                    "administrationvoluntary-blocks"
                ],
                "summary": "Provides the full information about voluntary block",
                "description": "",
                "operationId": "getVoluntaryBlock",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found voluntary block"
                    },
                    "400": {
                        "description": "Can't retrieve the found voluntary block"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/administration/voluntary-blocks/lock-days/key-value": {
            "get": {
                "tags": [
                    "administrationvoluntary-blocks"
                ],
                "summary": "Provides the block period key-values by subscriberTypeId",
                "description": "",
                "operationId": "getBlockPeriodKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    }
                }
            }
        },
        "/app-info/impl-version": {
            "get": {
                "tags": [
                    "app-info"
                ],
                "summary": "Provides the implementation version information of application build",
                "description": "",
                "operationId": "getImplementationVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Implementation version information successfully retrieved"
                    },
                    "400": {
                        "description": "Can't retrieve implementation version"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank-account/types": {
            "get": {
                "tags": [
                    "main-databank-account"
                ],
                "summary": "Getting bank account types",
                "description": "",
                "operationId": "getBankAccountTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank-account/save": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Saving a bank accounts",
                "description": "",
                "operationId": "save_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Bank accounts entity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank accounts saved successfully"
                    },
                    "400": {
                        "description": "Can not saved bank accounts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/bank-account/set-status": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Set status of a bank account",
                "description": "",
                "operationId": "setStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of a bank account has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of a bank account"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/bank-account/report": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_6",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBankAccountSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank-account/history": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Get changes's history of the bank accounts",
                "description": "",
                "operationId": "getHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank-account": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Provides the bank account information by broker or subscriber id",
                "description": "",
                "operationId": "getBankAccount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankAccountSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank-account/key-value": {
            "post": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Get bank account key-value list",
                "description": "",
                "operationId": "getBankAccountKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankAccountKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank-account/{id}": {
            "get": {
                "tags": [
                    "bank-account"
                ],
                "summary": "Provides the full information about bank account by id",
                "description": "",
                "operationId": "getBankAccountById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank account id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A bank accounts by id has got successfully"
                    },
                    "400": {
                        "description": "Can not get a bank accounts by id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/accounting/payment-orders/report": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_7",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPaymentOrderSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Provides the list of payment orders",
                "description": "",
                "operationId": "getPaymentOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentOrderSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/check-info": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Provides check info data",
                "description": "",
                "operationId": "checkPaymentOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataPaymentOrderSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/save": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Create new payment order",
                "description": "",
                "operationId": "createPaymentOrder",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Payment order data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentOrder"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/key-value": {
            "get": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Provides bank with account to return key values",
                "description": "",
                "operationId": "getbankWirhAccToReturnKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/bank-account/key-value": {
            "get": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Provides bank with account key values",
                "description": "",
                "operationId": "getAppealChannelKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/bank-accounts-info": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Provides bank accounts info",
                "description": "",
                "operationId": "getBankAccountsInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankAccountInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/accounting/payment-orders/document": {
            "post": {
                "tags": [
                    "accountingpayment-orders"
                ],
                "summary": "Generate a payment order text file",
                "description": "",
                "operationId": "generateTextFile_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataPaymentOrderSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/commissions/save": {
            "post": {
                "tags": [
                    "brokercommissions"
                ],
                "summary": "Save broker commission",
                "description": "",
                "operationId": "save_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Broker commission",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrokerCommission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker commission saved successfully"
                    },
                    "400": {
                        "description": "Can not saved broker commission"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/commissions/report": {
            "post": {
                "tags": [
                    "brokercommissions"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_8",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerCommissionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/commissions": {
            "post": {
                "tags": [
                    "brokercommissions"
                ],
                "summary": "Getting all brokers commissions",
                "description": "",
                "operationId": "getAll",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerCommissionSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker commission have got successfully"
                    },
                    "400": {
                        "description": "Can not get broker commission value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/second-lvl-brokers/{id}": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides the list of available parent brokers by broker id.",
                "description": "",
                "operationId": "getAvailableParents",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/commission-documents": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a commission document key (document id) values (document name)",
                "description": "",
                "operationId": "getCommissionDocuments",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A commission document key (document id) values (document name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a commission document key (document id) values (document name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/payment-methods": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a payment method key (method id) values (method name)",
                "description": "",
                "operationId": "getPaymentMethods",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A payment method key (method id) values (method name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a payment method key (method id) values (method name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/mail-delivery-types": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a postal delivery method key (method id) values (method name)",
                "description": "",
                "operationId": "getMailDeliveryTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A postal delivery method key (method id) values (method name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a postal delivery method key (method id) values (method name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/broker-names-by-levels": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a broker name key (name id) values (name name)",
                "description": "",
                "operationId": "getBrokerNamesByLevels",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Broker level id",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "isArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker name key (name id) values (name name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker name key (name id) values (name name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/payment-distr/payment-method/key-value": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of payment methods",
                "description": "",
                "operationId": "getPaymentMethodKeyValues",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A payment method key (method id) values (method name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a payment method key (method id) values (method name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/payment-distr/oper-status/key-value": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of operation statuses",
                "description": "",
                "operationId": "getOperationStatusesKeyValues",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A operation status key (status id) values (status name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a operation status key (status id) values (status name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/payment-distr/distr-info/key-value": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of distribution information",
                "description": "",
                "operationId": "getDistributionInformationKeyValues",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A distribution information key (information id) values (information name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a distribution information key (information id) values (information name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/payment-distr/distr-type/key-value": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of distribution type",
                "description": "",
                "operationId": "getDistributionTypeKeyValues",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A distribution type key (type id) values (type name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a distribution type key (type id) values (type name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/by-commiss-type": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides the list of broker by commiss type.",
                "description": "",
                "operationId": "getBrokerByCommissType",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/for-search-contract": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides the list of brokers for search contract",
                "description": "",
                "operationId": "getBrokersForSearchContract",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/addr/key-value": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Retrieves the list of all available brokers for tariff plans territorial binding",
                "description": "",
                "operationId": "getAddrBroker",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/addr/key-value/by-currency": {
            "post": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Retrives the list of all available brikers for tariff plans",
                "description": "",
                "operationId": "getAddressBroker",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokersKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/broker-levels": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a broker level key (level id) values (level name)",
                "description": "",
                "operationId": "getBrokerLevels",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A broker level key (level id) values (level name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker level key (level id) values (level name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/commissions": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a commission key (commission id) values (commission name)",
                "description": "",
                "operationId": "getCommissions",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A commission key (commission id) values (commission name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a commission key (commission id) values (commission name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/commission-bases": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a commission base key (commission id) values (commission name)",
                "description": "",
                "operationId": "getCommissionBases",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A commission base key (commission id) values (commission name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a commission base key (commission id) values (commission name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/commission-transfer-methods": {
            "get": {
                "tags": [
                    "main-databroker"
                ],
                "summary": "Provides a collection of a commission transfer method key (method id) values (method name)",
                "description": "",
                "operationId": "getCommissionTransferMethods",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A commission transfer method key (method id) values (method name) have got successfully"
                    },
                    "400": {
                        "description": "Can not get a commission transfer method key (method id) values (method name)"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/oper-history/report": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_9",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerPaymentOperationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/payment-distr/oper-history": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Getting all broker operations",
                "description": "",
                "operationId": "getOperationHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPaymentOperationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all operations"
                    },
                    "400": {
                        "description": "Can't retrieve the collection of operations"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/subscribers": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Getting all broker subscribers",
                "description": "",
                "operationId": "getBrokerSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPaymentDistributionSubscribersSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all subscribers"
                    },
                    "400": {
                        "description": "Can't retrieve the collection of subscribers"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/undistributed-sum": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Getting broker total undistributed sum",
                "description": "",
                "operationId": "getTotalUndistributedSum",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerOperationIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all payments distribution"
                    },
                    "400": {
                        "description": "Can't retrieve the collection of payments distribution"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/set-manual-distrib": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "set manual distrib",
                "description": "",
                "operationId": "setManualDistrib",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPaymentManualDistrib"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "set manual distrib"
                    },
                    "400": {
                        "description": "Can't set manual distrib"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/get-distrib-pay-info": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "get distribution pay info",
                "description": "",
                "operationId": "getDistribPayInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerDistributionPayInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get distribution pay info"
                    },
                    "400": {
                        "description": "Can't get distribution pay info"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/broker-status": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Check broker status",
                "description": "",
                "operationId": "checkBrokerStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KeyId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker is valid for distribution"
                    },
                    "400": {
                        "description": "Can't distribute broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/manual-check": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Check manual broker distribution",
                "description": "",
                "operationId": "distributionManualCheck",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerDistributionManualCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker is valid for distribution"
                    },
                    "400": {
                        "description": "Can't distribute broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/broker-status-manual": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Check broker status manual",
                "description": "",
                "operationId": "checkBrokerStatusManual",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerDistributionManualCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker is valid for distribution"
                    },
                    "400": {
                        "description": "Can't distribute broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/payment-distr/operations-status": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Provides ids for broker distribution",
                "description": "",
                "operationId": "getPaymentDistributionBroker",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerPaymentOperationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/payment-distr/subscribers/report": {
            "post": {
                "tags": [
                    "brokerpayment-distr"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBrokerSubscribersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerPaymentDistributionSubscribersSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker": {
            "get": {
                "tags": [
                    "broker"
                ],
                "summary": "Getting all brokers",
                "description": "",
                "operationId": "findAll",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received all brokers"
                    },
                    "400": {
                        "description": "Can't retrieve the set of brokers"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/save": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Saving a broker",
                "description": "",
                "operationId": "save_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The broker",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Broker"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker saved successfully"
                    },
                    "400": {
                        "description": "Can not saved broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/report": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_10",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/{id}": {
            "get": {
                "tags": [
                    "broker"
                ],
                "summary": "Getting particular broker by id",
                "description": "",
                "operationId": "findById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed broker",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received broker"
                    },
                    "400": {
                        "description": "Can't retrieve the broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/find-history": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get broker card changes",
                "description": "",
                "operationId": "getHistory_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Broker card changes successfully"
                    },
                    "400": {
                        "description": "Can not get Broker card changes"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/modal-window/search": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker list by a search parameters",
                "description": "",
                "operationId": "getBrokerListForModalWindow",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker list by a search parameters has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker list by a search parameters"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/tree/report": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getSearchBrokersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/modal-window": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker list by a search parameters",
                "description": "",
                "operationId": "findBrokerPreviewListByParentId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker list by a search parameters has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker list by a search parameters"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/tree": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker list by a parent id",
                "description": "",
                "operationId": "findBrokerPreviewListByParentId_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPreviewSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker list by a parent id has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker list by a parent id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/search/common-form": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker tree table by a search parameters",
                "description": "",
                "operationId": "findBroker",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerCommonFormSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker tree table by a search parameters has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker tree table by a search parameters"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/search": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker tree table by a search parameters",
                "description": "",
                "operationId": "findBrokerPreviewTreeByParentId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker tree table by a search parameters has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker tree table by a search parameters"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/broker-search": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Provides a broker tree table by a search parameters",
                "description": "",
                "operationId": "searchBrokers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerPreviewFullSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A broker tree table by a search parameters has got successfully"
                    },
                    "400": {
                        "description": "Can not get a broker tree table by a search parameters"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/second-lvl-broker-change": {
            "post": {
                "tags": [
                    "broker"
                ],
                "operationId": "setOrdersPayNonCashConfirmation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerSecondLvlChangeData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/closed": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "change broker status from on closing  to closed",
                "description": "",
                "operationId": "changeBrokerStatusToClosed",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerContractStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "change broker status has got successfully"
                    },
                    "400": {
                        "description": "Can not change broker status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/canceled-status": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "change broker status from prepating to sign to cancelled",
                "description": "",
                "operationId": "changeBrokerStatusToCanceled",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerContractStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "change broker status has got successfully"
                    },
                    "400": {
                        "description": "Can not change broker status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/sign": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "change broker status from  prepating to sign",
                "description": "",
                "operationId": "changeBrokerStatusToSign",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerContractStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "change broker status has got successfully"
                    },
                    "400": {
                        "description": "Can not change broker status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/direct-payment-transfer": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "direct payment transfer",
                "description": "",
                "operationId": "directPaymentTransfer",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferSubscrToDirectPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct payment transfer successfully"
                    },
                    "400": {
                        "description": "Can not make direct payment transfer"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/transfer-history": {
            "get": {
                "tags": [
                    "broker"
                ],
                "operationId": "getBrokerTransferContractChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/change-broker/get-address-tree": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get broker change address tree",
                "description": "",
                "operationId": "getBrokerChangeAddressTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferSubscrToDirectPaymentAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/change-broker": {
            "get": {
                "tags": [
                    "broker"
                ],
                "operationId": "getBrokerChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Change broker",
                "description": "",
                "operationId": "brokerChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerChangeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Change broker successfully"
                    },
                    "400": {
                        "description": "Can not make change broker"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/get-address-tree": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get address tree",
                "description": "",
                "operationId": "getAddressTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferSubscrToDirectPaymentAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get address tree successfully"
                    },
                    "400": {
                        "description": "Can not get address tree changes"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/change-broker/get-address-tree/report": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBrokerChangeAddressReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTransferSubscrToDirectPaymentAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/onclosure": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "change broker status from sign to on closing",
                "description": "",
                "operationId": "changeBrokerStatusToCloser",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerContractStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "change broker status has got successfully"
                    },
                    "400": {
                        "description": "Can not change broker status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/archive": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "change broker 1 and 2 lvl status active to archive",
                "description": "",
                "operationId": "archiveBroker",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "change broker status has got successfully"
                    },
                    "400": {
                        "description": "Can not change broker status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/get-address-tree/report": {
            "post": {
                "tags": [
                    "broker"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getAddressReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTransferSubscrToDirectPaymentAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address/room-configurator/link": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "linkRoom",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerAddressLink"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address/house-configurator/link": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "linkHouse",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerLink"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address/unlink-by-street": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "unlinkAddressByStreet",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address/key-value": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "getKeyvalue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerKeyValueSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "findStreetAndHouse",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerServiceAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/address/report": {
            "post": {
                "tags": [
                    "brokeraddress"
                ],
                "operationId": "findStreetAndHouseReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerServiceAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/vat-rate/link": {
            "post": {
                "tags": [
                    "brokervat-rate"
                ],
                "summary": "Link a VAT rate",
                "description": "",
                "operationId": "link",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Broker VAT Rate entity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrokerVatRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VAT rate linked successfully"
                    },
                    "400": {
                        "description": "Can not linked VAT rate"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/vat-rate/report": {
            "post": {
                "tags": [
                    "brokervat-rate"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_11",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerVatRateSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/vat-rate/history": {
            "post": {
                "tags": [
                    "brokervat-rate"
                ],
                "operationId": "getHistory_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerVatRateSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/vat-rate/{id}": {
            "get": {
                "tags": [
                    "brokervat-rate"
                ],
                "summary": "Find particular VAT rate",
                "description": "",
                "operationId": "findByBrokerId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An broker id of needed VAT rate",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all VAT rate of particular broker"
                    },
                    "400": {
                        "description": "Can't retrieve the collection of VAT rate"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/report": {
            "post": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_12",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerWaitRecalculationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/broker-name/key-value": {
            "get": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "operationId": "getBrokerNamesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "dbfParticipate",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/set-operation": {
            "post": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "operationId": "setOperationRW",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/operation-type/key-value": {
            "get": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "summary": "Get contracts break key-values",
                "description": "",
                "operationId": "getBrokerFilesOperationTypeKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history": {
            "post": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "operationId": "getWaitRecalculationHistoryList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerWaitRecalculationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/set-status": {
            "post": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "operationId": "setWaitRecalculationStatusRW",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerWaitRecalculationHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/broker/wait-recalculation-history/statuses": {
            "get": {
                "tags": [
                    "brokerwait-recalculation-history"
                ],
                "operationId": "getStatusKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/get-paid-errors": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "summary": "Retrieve paid error ids or exception",
                "description": "",
                "operationId": "getPaidErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerDbfReconcilingSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paid error ids have been retrieved successfully"
                    },
                    "400": {
                        "description": "Can not retrieve paid error ids"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/dbf-files/set-paid-errors": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "summary": "Set paid errors",
                "description": "",
                "operationId": "setPaidErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerDbfPaidErrors"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paid errors have been saved successfully"
                    },
                    "400": {
                        "description": "Can not save paid errors"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/dbf-files/report": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_13",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDbfSelectedObjectData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/set-info": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "setInfoProcedure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DbfFileParsingData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/set": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "setProcedure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DbfFileInfoData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/analysis": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "analysis",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DbfAnaliseData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "getDbfErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DbfSelectedObjectData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/upload": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "summary": "Upload excel dbf file",
                "description": "",
                "operationId": "uploadDbfExcelFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MultipartFormDataInput"
                        }
                    },
                    {
                        "name": "brokerId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/set-status": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "setDbfReconcilingStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerDbfReconcilingSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/error-types": {
            "get": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "getTypeErrorKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/error-statuses": {
            "get": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "getStatusErrorKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/error-status": {
            "get": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "getErrorStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/dbf-files/broker-names": {
            "post": {
                "tags": [
                    "brokerdbf-files"
                ],
                "operationId": "getBrokerNamesForDbf",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerForDbfSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/mapping/subscriber-binding": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "setSubscribersBinding",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerAndMtisBinding"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/source/{id}": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "setSubscribersBinding_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/dbf-errors": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getDbfError",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/accruals/broker": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getAccrualsBrokerErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/accruals/mtis": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getAccrualsMtisErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/recalculation/broker": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getRecalculationBrokerErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/recalculation/mtis": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getRecalculationMtisErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/accruals/mtis/address": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getAccrualsMtisAddress",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/recalculation/mtis/address": {
            "get": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "getRecalculationMtisAddress",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "errorId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/dbf-errors/save": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "operationId": "setDbfError",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataBrokerMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/mapping/mtis": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "summary": "Provides the list dbf reconciling",
                "description": "",
                "operationId": "getMappingMtisErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MtisMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found dbf reconciling"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of dbf reconciling"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/errors/mapping/mtis/report": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getMappingMtisErrorsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMtisMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/errors/mapping/broker": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "summary": "Provides the list dbf reconciling",
                "description": "",
                "operationId": "getMappingBrokerErrors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found dbf reconciling"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of dbf reconciling"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/errors/mapping/broker/report": {
            "post": {
                "tags": [
                    "brokererrors"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getMappingBrokerErrorsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerMappingErrorsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/broker/history-recalculation": {
            "post": {
                "tags": [
                    "brokerhistory-recalculation"
                ],
                "summary": "Getting all history recalculations",
                "description": "",
                "operationId": "findAll_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrokerRecalculationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History recalculations have got successfully"
                    },
                    "400": {
                        "description": "Can not get History recalculations value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/history-recalculation/save": {
            "post": {
                "tags": [
                    "brokerhistory-recalculation"
                ],
                "summary": "Save history recalculation",
                "description": "",
                "operationId": "save_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "history recalculation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrokerRemuneration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "history recalculation saved successfully"
                    },
                    "400": {
                        "description": "Can not saved history recalculation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/broker/history-recalculation/report": {
            "post": {
                "tags": [
                    "brokerhistory-recalculation"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_14",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBrokerRecalculationHistory"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/appeal-call-center/{id}": {
            "get": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get appeal to call center by id",
                "description": "",
                "operationId": "getHandlingById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get appeal to call center"
                    },
                    "400": {
                        "description": "Can't get appeal to call center"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Remove appeal to call center by id",
                "description": "",
                "operationId": "findById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated goods by id"
                    },
                    "400": {
                        "description": "Can't update goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/{id}/recording": {
            "get": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get appeal's recording by appeal id",
                "description": "",
                "operationId": "getRecording",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get appeal's recording by appeal id - file content as stream"
                    },
                    "404": {
                        "description": "File Recording not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/save": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Save appeal to call center",
                "description": "",
                "operationId": "saveHandling",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealCallCenterUpdateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved appeal to call center"
                    },
                    "400": {
                        "description": "Can't save appeal to call center"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center": {
            "get": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get appeal to call center by id",
                "description": "",
                "operationId": "getHandlingByIdFullData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get appeal to call center"
                    },
                    "400": {
                        "description": "Can't get appeal to call center"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/search/by-subscr-id": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get appeal to call center list by subscriber id",
                "description": "",
                "operationId": "getHandlingListBySubscrId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealCallCenterSearchFullData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get appeal to call center list"
                    },
                    "400": {
                        "description": "Can't get appeal to call center list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/search": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get appeal to call center list",
                "description": "",
                "operationId": "searchHandling",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealCallCenterSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all appeal to call center"
                    },
                    "400": {
                        "description": "Can't retrieve the set of appeal to call center"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/report": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getTscOrdersRegistryReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelAppealCallCenterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/appeal-call-center/link-to-order": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Created appeal and linked orders list",
                "description": "",
                "operationId": "saveAppealAndLinkOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderAppealLinkData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created appeal and linked orders list successfully"
                    },
                    "400": {
                        "description": "Can not create appeal and linked orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/exists-appeal-link-to-order": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "linked orders list to exists appeal",
                "description": "",
                "operationId": "linkOrdersToExistsAppeal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderAppealLinkData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "linked orders list successfully"
                    },
                    "400": {
                        "description": "Can not linked orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/files-settings": {
            "get": {
                "tags": [
                    "appeal-call-center"
                ],
                "operationId": "getFilesSettings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/appeal-call-center/handling-list/report": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getHandlingListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPersonalAccountHandlingSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully export in Excel"
                    },
                    "400": {
                        "description": "Can not export in Excel"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/appeal-call-center/register-file": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "operationId": "registerFiles",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MultipartFormDataInput"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/appeal-call-center/file-by-id": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "operationId": "getFileById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/appeal-call-center/delete-file": {
            "post": {
                "tags": [
                    "appeal-call-center"
                ],
                "operationId": "deleteFiles",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/omega/recording": {
            "post": {
                "tags": [
                    "omega"
                ],
                "summary": "Sends a signal to Omega (phase: start recording)",
                "description": "",
                "operationId": "recording",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/omega/downloading/{appealId}": {
            "post": {
                "tags": [
                    "omega"
                ],
                "summary": "Sends a signal to Omega (phase: downloading)",
                "description": "",
                "operationId": "downloading",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "appealId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-management": {
            "post": {
                "tags": [
                    "order-management"
                ],
                "summary": "Search for order",
                "description": "",
                "operationId": "search",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderManagementSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-management/report": {
            "post": {
                "tags": [
                    "order-management"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderManagementSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-management/cancel": {
            "post": {
                "tags": [
                    "order-management"
                ],
                "summary": "Used to cancel or any other status change of order",
                "description": "",
                "operationId": "cancelOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderManagementStatusData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cashbox/cash-operation/search": {
            "post": {
                "tags": [
                    "cashboxcash-operation"
                ],
                "summary": "Search the list of existing cash intakes",
                "description": "",
                "operationId": "searchCashOperations",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CashOperationSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Existing cash intakes have been successfully found"
                    },
                    "400": {
                        "description": "Can not find existing cash intakes"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/cashbox/cash-operation/save": {
            "post": {
                "tags": [
                    "cashboxcash-operation"
                ],
                "summary": "Create a new cash operation with cheque",
                "description": "",
                "operationId": "createCashOperationWithCheque",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CashOperationTransferObject"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cashbox/cash-operation/balance": {
            "post": {
                "tags": [
                    "cashboxcash-operation"
                ],
                "summary": "Get balance",
                "description": "",
                "operationId": "getBalance",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CashboxBalanceSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance have been successfully found"
                    },
                    "400": {
                        "description": "Can not find balance"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/cashbox/cash-operation/cheque-cancel": {
            "post": {
                "tags": [
                    "cashboxcash-operation"
                ],
                "summary": "Set new cheque cancel",
                "description": "",
                "operationId": "setChequeCancel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ChequeCancel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully set new cheque cancel params"
                    },
                    "400": {
                        "description": "Can not create new cheque cancel params"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/cashbox/cash-operation/amount": {
            "get": {
                "tags": [
                    "cashboxcash-operation"
                ],
                "summary": "calculates the amount that must be received/taken from the subscriber taking into account settings in the Rounding Configurator.",
                "description": "",
                "operationId": "getAmountPerUnit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "operationKind",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cashbox/cash-transactions-report/report": {
            "post": {
                "tags": [
                    "cashboxcash-transactions-report"
                ],
                "summary": "Get an excel report about cash box operations",
                "description": "",
                "operationId": "getReportExcel_15",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CashTransactionsReportExportModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel report about cash box operations have been successfully configurated"
                    },
                    "400": {
                        "description": "Can not configurate excel report about cash box operations"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/cashbox/cash-transactions-report/search": {
            "post": {
                "tags": [
                    "cashboxcash-transactions-report"
                ],
                "summary": "Provides the list of existing cash transactions",
                "description": "",
                "operationId": "searchCashTransactionsReports",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CashTransactionsReportSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of existing cash transactions have been successfully invoked"
                    },
                    "400": {
                        "description": "Can not get list of existing cash transactions"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/cashbox/oper-kind": {
            "get": {
                "tags": [
                    "main-datacashbox"
                ],
                "summary": "Provides the list of operation kinds.",
                "description": "",
                "operationId": "getOperKind",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/cashbox/pay-code": {
            "get": {
                "tags": [
                    "main-datacashbox"
                ],
                "summary": "Provides the list of payment codes by payment type id.",
                "description": "",
                "operationId": "getPayCodes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/cashbox/create-d1c": {
            "post": {
                "tags": [
                    "main-datacashbox"
                ],
                "summary": "Create new file d1c and return d2c file",
                "description": "",
                "operationId": "createNewD1cFileAndReceiveD2cFile",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/D1cFileRestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File was created successfully"
                    },
                    "400": {
                        "description": "File can not be created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bonus/basic-tp": {
            "get": {
                "tags": [
                    "main-databonus"
                ],
                "summary": "Provides the list of bonus basic tariff plans.",
                "description": "",
                "operationId": "getBasicTP",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bonus/activ-types": {
            "get": {
                "tags": [
                    "main-databonus"
                ],
                "summary": "Provides the list of bonus basic tariff plans.",
                "description": "",
                "operationId": "getBonusActivTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bonus/not-deleted": {
            "get": {
                "tags": [
                    "main-databonus"
                ],
                "summary": "Provides the list of not deleted bonus.",
                "description": "",
                "operationId": "getNotDeletedBonuses",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bonus/types": {
            "get": {
                "tags": [
                    "main-databonus"
                ],
                "summary": "Provides the list of bonus types.",
                "description": "",
                "operationId": "getTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bonus/statuses": {
            "get": {
                "tags": [
                    "main-databonus"
                ],
                "summary": "Provides the list of bonus statuses.",
                "description": "",
                "operationId": "getStatuses",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_16",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/service-report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus parameters history list by id.",
                "description": "",
                "operationId": "getBonusServiceAmountReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusSearchDataForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/replenish-report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus parameters history list by id.",
                "description": "",
                "operationId": "getBonusAccReplenishmentReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusAccReplenishmentSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/tp-report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus parameters history list by id.",
                "description": "",
                "operationId": "getBonusChangeTpReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusSearchDataForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/param-history/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getParamHistoryReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/check-tp": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Checking the incompatibility of tariff plans.",
                "description": "",
                "operationId": "checkTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AddingTpCheckForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/{id}": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus by id.",
                "description": "",
                "operationId": "getBonus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/adding-tp": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting a tariff plans tree.",
                "description": "",
                "operationId": "getAddingTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "bonusVerId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/version/{id}": {
            "delete": {
                "tags": [
                    "bonus"
                ],
                "summary": "Deleting a particular bonus version.",
                "description": "",
                "operationId": "dropBonusVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/save": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Saving or editing a bonus or a bonus version.",
                "description": "",
                "operationId": "saveBonusVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Bonus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/set-status": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Change bonuses status to deleted.",
                "description": "",
                "operationId": "setBonusesStatusDeleted",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object for changing status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataBonusSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/version": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus versions by id.",
                "description": "",
                "operationId": "getBonusVersions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/version/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getVersionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/status-history/{id}": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus status history list by id.",
                "description": "",
                "operationId": "getBonusStatusHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/service-report/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBonusServiceAmountReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusSearchDataForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/replenish-report/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBonusAccReplenishmentReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusAccReplenishmentSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Provides the list of existing bonuses.",
                "description": "",
                "operationId": "searchBonusUnits",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/tp-report/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBonusChangeTpReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusSearchDataForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/param-history": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus parameters history list by id.",
                "description": "",
                "operationId": "getBonusParamHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/available-tps": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Getting a list of tariff plans paid by bonus.",
                "description": "",
                "operationId": "getAvailableTariffPlans",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AvailableTpSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/points/save": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Saving bonus points transfers.",
                "description": "",
                "operationId": "saveBonusPointsTransfer",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BonusPointsTransfer"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/tariff-plans": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Getting a list of tariff plans paid by bonus.",
                "description": "",
                "operationId": "getTariffPlansPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/tariff-plans/report": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Get an excel report for tp",
                "description": "Misha Lazarenka",
                "operationId": "getTariffPlansPaidByBonusReportExcel",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/tariff-plans/save": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Saving a tariff plan paid by bonus.",
                "description": "",
                "operationId": "addTariffPlanPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanPaidByBonusData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/tariff-plans/{id}": {
            "delete": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Remove a tariff plan paid by bonus by id.",
                "description": "",
                "operationId": "dropTariffPlanPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/work-kind": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Getting a list of work kinds paid by bonus.",
                "description": "",
                "operationId": "getWorkKindPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/work-kind/report": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Get an excel report for work kind",
                "description": "Misha Lazarenka",
                "operationId": "getWorkKindPaidByBonusReportExcel",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/points": {
            "get": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Getting bonus points transfers.",
                "description": "",
                "operationId": "getBonusPointsTransfers",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/work-kind/{id}": {
            "delete": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Remove a work kind paid by bonus by id.",
                "description": "",
                "operationId": "dropWorkKindPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/acc-settings/work-kind/save": {
            "post": {
                "tags": [
                    "bonusacc-settings"
                ],
                "summary": "Saving a work kind paid by bonus.",
                "description": "",
                "operationId": "addWorkKindPaidByBonus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanPaidByBonusData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/set-status": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Set status of a bonus group",
                "description": "",
                "operationId": "setStatus_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of a bonus group has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of a bonus group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/bonus/group/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_17",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/accounts": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Provides the list of subscribers linked to the bonus group or a list of subscribers suitable for search parameters.",
                "description": "",
                "operationId": "searchAccounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusAccountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/accounts/report": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getAccountsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBonusAccountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/{id}": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting particular bonus group by id.",
                "description": "",
                "operationId": "getBonusGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Provides the list of existing bonus groups.",
                "description": "",
                "operationId": "searchBonusGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/save": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Save a bonus group.",
                "description": "",
                "operationId": "saveBonusGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusGroup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/link": {
            "post": {
                "tags": [
                    "bonus"
                ],
                "summary": "Link/unlink a bonus group subscribers.",
                "description": "",
                "operationId": "saveBonusGroup_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkBonusGroupForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/contracts-by-bonus-id/key-value": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Getting all contracts by bonus account id; REQUIRED : parent id",
                "description": "",
                "operationId": "getContractsByBonusId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bonus/group/bonus-group-status/key-value": {
            "get": {
                "tags": [
                    "bonus"
                ],
                "summary": "Provides the list of bonus groups statuses",
                "description": "",
                "operationId": "getBonusGroupStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/base-unit": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Retrieves the list of all possible values of base units",
                "description": "",
                "operationId": "getBaseUnits",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "tariffTypeId",
                        "in": "query",
                        "description": "An ID of parent tariffication typ",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/activ-type": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Retrieves the list of all possible values of activ types",
                "description": "",
                "operationId": "getActivTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "tariffTypeId",
                        "in": "query",
                        "description": "An ID of parent tariffication type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/type": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Retrieves the list of all possible values of base units",
                "description": "",
                "operationId": "getDiscountType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "tariffTypeId",
                        "in": "query",
                        "description": "An ID of parent tariffication type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "baseUnitId",
                        "in": "query",
                        "description": "An ID of parent base unit",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/kinds": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount kinds",
                "description": "",
                "operationId": "getDiscountKinds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/measures": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount measures",
                "description": "",
                "operationId": "getDiscountMeasures",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/use-periods": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount use periods",
                "description": "",
                "operationId": "getDiscountUsePeriods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/statuses": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount statuses",
                "description": "",
                "operationId": "getDiscountStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/names": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount names by type",
                "description": "",
                "operationId": "getDiscountNamesByType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "discountTypeId",
                        "in": "query",
                        "description": "An ID of parent discount type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/types": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Provides the list of discount types",
                "description": "",
                "operationId": "getDiscountTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/discount/tariffication-type": {
            "get": {
                "tags": [
                    "main-datadiscount"
                ],
                "summary": "Retrieves the list of all possible values of tariff types",
                "description": "",
                "operationId": "getTarifficationTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/matrix/report": {
            "post": {
                "tags": [
                    "discountmatrix"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_18",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/matrix/save": {
            "post": {
                "tags": [
                    "discountmatrix"
                ],
                "summary": "Creating or editing a discount matrix",
                "description": "",
                "operationId": "saveDiscountMatrix",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountUnionMatrix"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount matrix created successfully"
                    },
                    "400": {
                        "description": "The discount matrix was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/matrix": {
            "get": {
                "tags": [
                    "discountmatrix"
                ],
                "summary": "Getting a list of discount matrix interactions",
                "description": "",
                "operationId": "getDiscountMatrix",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "discount matrix version id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount matrix received"
                    },
                    "400": {
                        "description": "Discount matrix not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/matrix/versions": {
            "post": {
                "tags": [
                    "discountmatrix"
                ],
                "summary": "Getting a list of discount matrix versions",
                "description": "",
                "operationId": "getDiscountMatrixVersionsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount matrix created successfully"
                    },
                    "400": {
                        "description": "The discount matrix was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/matrix/version-type": {
            "get": {
                "tags": [
                    "discountmatrix"
                ],
                "summary": "Getting a discount matrix version type id",
                "description": "",
                "operationId": "getDiscountMatrixVersionType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "discount matrix version id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received"
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/report": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_19",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/{id}": {
            "get": {
                "tags": [
                    "discount"
                ],
                "summary": "getting common discount information",
                "description": "",
                "operationId": "getDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id discount version",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/versions/report": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getVersionsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDiscountVersionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/house/get-link": {
            "get": {
                "tags": [
                    "discount"
                ],
                "summary": "List of houses tied to discount on id street.",
                "description": "",
                "operationId": "getLinkHousesAtDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "discountVerId",
                        "in": "query",
                        "description": "id version discount",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Houses found"
                    },
                    "400": {
                        "description": "Houses not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/house/get-link/report": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Get an excel house report.",
                "description": "",
                "operationId": "getLinkedHousesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedHouseExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/house/report": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Get an excel house report.",
                "description": "",
                "operationId": "getHouseReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHouseTreeSearchDate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/history/report": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getHistoryReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/save": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "creating a new discount",
                "description": "",
                "operationId": "saveOrCreateVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Discount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discounts created successfully"
                    },
                    "400": {
                        "description": "The discount was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/activities": {
            "get": {
                "tags": [
                    "discount"
                ],
                "summary": "get a list of activities for choosing tariff plans",
                "description": "",
                "operationId": "getListForTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "activTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/set-status": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "change the status of a discount to an archive or a remote one",
                "description": "",
                "operationId": "setDiscountArchivStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object for changing status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status changed"
                    },
                    "400": {
                        "description": "Status is not changed"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/activities/tariff-plan": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "get a list of tariff plans for the selected type of activity",
                "description": "",
                "operationId": "getNodeTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountTPSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/tp-tree": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "get a list of tariff plans for the selected type of activity",
                "description": "",
                "operationId": "getTPTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountTPTreeSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/versions/{id}": {
            "delete": {
                "tags": [
                    "discount"
                ],
                "summary": "delete an inactive version of the discount",
                "description": "",
                "operationId": "deleteVersionDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "discount version id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/history": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Getting particular discount parameters history list by id.",
                "description": "",
                "operationId": "getDiscountParamHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/street-and-houses/list": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "Street search by filter.",
                "description": "",
                "operationId": "getStreetAndHouseByFilter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HouseTreeSearchDate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streets found"
                    },
                    "400": {
                        "description": "Streets not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/discount/version_exist": {
            "get": {
                "tags": [
                    "discount"
                ],
                "summary": "checking the existence of a discount for the appointed date",
                "description": "",
                "operationId": "isExistVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "idDiscount",
                        "in": "query",
                        "description": "id discount",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "the date of the version with",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount/versions": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "get discount version",
                "description": "",
                "operationId": "getVersionsDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountVersionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discount": {
            "post": {
                "tags": [
                    "discount"
                ],
                "summary": "get a list of discountSearchData by filter",
                "description": "",
                "operationId": "getDiscountsByFilter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object to search for",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discounts received"
                    },
                    "400": {
                        "description": "Discounts not found"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/tsc-discount/type-encumbrance": {
            "get": {
                "tags": [
                    "main-datatsc-discount"
                ],
                "summary": "Provides the id of TSC discount encumbrance type for TP list.",
                "description": "",
                "operationId": "getTypes_1",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tsc-discount/type-common": {
            "get": {
                "tags": [
                    "main-datatsc-discount"
                ],
                "summary": "Provides the id of TSC discount common type for TP list.",
                "description": "",
                "operationId": "getStatuses_1",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/report": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_20",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTscDiscountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/work-kind": {
            "get": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Getting work kinds with their currencies.",
                "description": "",
                "operationId": "getWorkKindList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Provides the list of existing TSC discounts.",
                "description": "",
                "operationId": "searchTscDiscountUnits",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscDiscountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/version/{id}": {
            "delete": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Deleting particular TSC discount version.",
                "description": "",
                "operationId": "getTscDiscountVersionOnDate",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "discount version id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/set-status": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Change TSC discount status.",
                "description": "",
                "operationId": "setTscDiscountStatusArchived",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object for changing status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTscDiscountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/save": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Saving or editing a TSC discount or a TSC discount version.",
                "description": "",
                "operationId": "saveTscDiscountVersion",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscDiscount"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/{id}": {
            "get": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Getting particular TSC discount by id.",
                "description": "",
                "operationId": "getTscDiscount",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/history": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Getting particular TSC discount parameters history list by id.",
                "description": "",
                "operationId": "getTscDiscountParamHistory",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/history/report": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getParamHistoryReportExcel_1",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/version": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Getting particular TSC discount versions by id.",
                "description": "",
                "operationId": "getTscDiscountVersions",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscDiscountVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/version/report": {
            "post": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getVersionsReportExcel_1",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTscDiscountVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tsc-discount/tp-tree": {
            "get": {
                "tags": [
                    "tsc-discount"
                ],
                "summary": "Getting a tariff plans tree.",
                "description": "",
                "operationId": "getAddingTp_1",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "discountVerId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "typeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "activTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/connect": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Connect discounts to contract",
                "description": "",
                "operationId": "connectContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractConnectDiscountOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/oper-update-list": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of contract update oper discounts",
                "description": "ZhukD, PKG_CONTRACT_DISCOUNT.GET_BY_OPERID_LIST",
                "operationId": "getContractUpdateOperDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountOperUpdateSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/check": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Check contract discounts for inconsistencies",
                "description": "",
                "operationId": "checkContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountConnectCheckData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/selected": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Getting contract discount by tpId and discountId",
                "description": "",
                "operationId": "getContractDiscountByTpAndDiscountId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountByTpAndDiscountId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received contract discount"
                    },
                    "400": {
                        "description": "Can't retrieve the found contract discount"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/discounts/deactivation-list": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of contract discounts for deactivation",
                "description": "",
                "operationId": "getDeactivationContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountDeactivationSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found contract discounts for deactivation"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of contract discounts for deactivation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/discounts/auto-list": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of contract auto discounts",
                "description": "",
                "operationId": "getAutoContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountAutoSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found contract auto discounts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of contract auto discounts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/discounts/update-list": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of contract update discounts",
                "description": "",
                "operationId": "getUpdateContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountUpdateData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/dates": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Get actual discounts dates",
                "description": "",
                "operationId": "getContractDiscountsDates",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountDatesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of contract discounts",
                "description": "",
                "operationId": "getContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found contract discounts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of contract discounts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/discounts/names-by-tp": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Provides the list of discount names by tp",
                "description": "",
                "operationId": "getDiscountNamesByTpContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDiscountDictSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/deactivate": {
            "post": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Deactivate the list of contract discount",
                "description": "",
                "operationId": "deactivateContractDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDisconnectDiscountOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/{id}": {
            "delete": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Remove contract discount by discount ver id",
                "description": "",
                "operationId": "dropContractDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/discounts/check-can-be-deleted/{id}": {
            "get": {
                "tags": [
                    "contractsdiscounts"
                ],
                "summary": "Check can discount be deleted",
                "description": "",
                "operationId": "checkCanBeDeletedTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/goods/change-order-goods": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Change contract goods",
                "description": "",
                "operationId": "cancelContractGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractGoodsOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract goods  changed successfully"
                    },
                    "400": {
                        "description": "Can not change contract goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods/save": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Create new contract goods or edit exists",
                "description": "",
                "operationId": "saveContractGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Contract goods data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContractGoodsSave"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract goods saved successfully"
                    },
                    "400": {
                        "description": "Can not saved contract goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Provides the list of contract goods",
                "description": "",
                "operationId": "getContractGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractGoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found contract goods"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of contract goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods/search": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Search issued goods by parameters",
                "description": "",
                "operationId": "searchIssuedGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractIssuedGoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goods returned"
                    },
                    "400": {
                        "description": "Goods don`t returned"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods/issue": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Issue goods by contract id",
                "description": "",
                "operationId": "issueGoodsByContractId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractOperationGoodsIssue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goods issued"
                    },
                    "400": {
                        "description": "Goods don`t issued"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods/return": {
            "post": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Return contract goods",
                "description": "",
                "operationId": "returnContractGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractOperationGoodsReturn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract goods returned"
                    },
                    "400": {
                        "description": "Contract goods don`t returned"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/goods/{id}": {
            "delete": {
                "tags": [
                    "contractsgoods"
                ],
                "summary": "Remove contract goods",
                "description": "",
                "operationId": "deleteContractGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of contract",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "orderId",
                        "in": "query",
                        "description": "An id of order",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract goods deleted successfully"
                    },
                    "400": {
                        "description": "Can not delete contract goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/contracts/signers": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual signers in system",
                "description": "",
                "operationId": "getSigners",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "alwaysShowId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/doc-types": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual doc types in system",
                "description": "",
                "operationId": "getDocTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/atv-filters": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a atv filters",
                "description": "",
                "operationId": "getAtvFilter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/status-ban-editing": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the list of contract status ids for ban of contract information editing / broker information editing",
                "description": "",
                "operationId": "getStatusBanEditing",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/discounts-tariff-plans": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the contract tsp info for discounts by contractId",
                "description": "",
                "operationId": "getContractTpsForDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/employee-prs": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of employees and list of employee id by userId",
                "description": "",
                "operationId": "getEmployeePrsByUser",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/main-tp-ids": {
            "post": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the list of main tpIds for additional tp",
                "description": "",
                "operationId": "getMainTpIds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainTpIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bill-delivery-types": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a bill delivery types",
                "description": "",
                "operationId": "getBillDeliveryType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/doc-formats": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual doc formats in system",
                "description": "",
                "operationId": "getDocFormats",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/yes-no": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of yes-no options in system",
                "description": "",
                "operationId": "getYesNo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/payment-rules": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual payment rules in system",
                "description": "",
                "operationId": "getPaymentRules",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/agents-fullname": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual agents in system",
                "description": "",
                "operationId": "getAgents",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/employee-agents": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual employee agents in system",
                "description": "",
                "operationId": "getEmployeeAgents",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "alwaysShowId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/penalty-types": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a penalty types",
                "description": "",
                "operationId": "getPenaltyTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/financing-sources": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual financing sources in system",
                "description": "",
                "operationId": "getSubscrFundSource",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/brokers/key-value": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual mediator types in system",
                "description": "",
                "operationId": "getMediators",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/account-at-broker": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of accounts at broker base in system",
                "description": "",
                "operationId": "getAccountAtMediatorBase",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "brokerId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/sign-act-types": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a sign act types",
                "description": "",
                "operationId": "getSignActType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/by-personal-account": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides key value contract by the personal account id",
                "description": "",
                "operationId": "getContractByPersonalAccountId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The id of the personal account",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/activity-types-wo-address": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Retrieves a list of activity types without address",
                "description": "",
                "operationId": "getActivityTypeWithoutAddress",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/contract-statuses": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a contract status key (status id) values (status name)",
                "description": "",
                "operationId": "getContractStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/by-personal-accounts": {
            "post": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides key value contract by the personal accounts ids",
                "description": "",
                "operationId": "getContractByPersonalAccountIds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/by-subscriber": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "operationId": "getContractBySubscriberId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/billing-date-tariff-plans": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of tariff types for changing billing date by contractId",
                "description": "",
                "operationId": "getBillingDateTariffTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bonus-groups": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of bonus groups",
                "description": "",
                "operationId": "getBonusGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bonuses": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of bonuses by typeId",
                "description": "",
                "operationId": "getBonusesByType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/refund-type-contracts": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of refund type contracts",
                "description": "",
                "operationId": "getRefundTypeContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/contr-tp-by-compl-contr-tp": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the list of contract tp by complContrTpId",
                "description": "",
                "operationId": "getContrTpByComplContrTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bill-doc-types": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a bill document types",
                "description": "",
                "operationId": "getBillDocTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bill-doc-statuses": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a bill document statuses",
                "description": "",
                "operationId": "getBillDocStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/tp-for-lock": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of contract tp for lock by contractId",
                "description": "",
                "operationId": "getContractTpForLock",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/voluntary-locked-tp": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of voluntary locked contract tp by contractId",
                "description": "",
                "operationId": "getVoluntaryLockedContractTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/admin-locked-tp": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of admin locked contract tp by contractId",
                "description": "",
                "operationId": "getAdminLockedContractTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/serviced-tp": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of contract tp by contractId",
                "description": "",
                "operationId": "getContractTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/change-names": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of change names",
                "description": "",
                "operationId": "getChangeNames",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/tariff-plans": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of contract tp by contractId or contractOperId",
                "description": "",
                "operationId": "getContractTps",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "contractOperId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/contr-tp-for-goods": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value list of contract tp for goods by contractId or contractOperId",
                "description": "",
                "operationId": "getContractTpsForGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "contractOperId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/sign-of-ownership": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Getting the key-value contracts sign of ownership",
                "description": "",
                "operationId": "getContractsSignOfOwnership",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bill-email-statuses": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a bill document statuses",
                "description": "",
                "operationId": "getBillEmailStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/bill-formation-docs": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides a collection of a bill formation documents",
                "description": "",
                "operationId": "getBillFormationDocs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contracts/doc-statuses": {
            "get": {
                "tags": [
                    "main-datacontracts"
                ],
                "summary": "Provides the list of actual subscriber types in system",
                "description": "",
                "operationId": "getDocStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes/cancel": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Cancel contract changes",
                "description": "",
                "operationId": "setStatus_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractStatusModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/activations/report": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get an excel report for contract activations.",
                "description": "",
                "operationId": "getReportExcel_21",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/billing-date/change": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Changes the billing date for contracts tariff plans",
                "description": "",
                "operationId": "changeBillingDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractChangeBillingDateOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/blocking/save": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Saves the information about blocked contract.",
                "description": "",
                "operationId": "saveBlockedContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContractBlocking"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/requisites/change": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Change requisites of a contract",
                "description": "",
                "operationId": "changeRequisites",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractChangeRequisitesOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/check-before-oper": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "operationId": "checkBeforeOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckBeforeOperationData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/contract-oper-id": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get contract oper id by operation type",
                "description": "",
                "operationId": "getContractOperIdByType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractOperIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/blocking/set-status": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Set blocked contract status",
                "description": "",
                "operationId": "setBlockedContractStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractUnlocking"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/{id}/activations": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Retrieves the list for \"activations\" tab in contract activations",
                "description": "",
                "operationId": "getContractActivations",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/activations/save": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Activate list of contract tariff plan.",
                "description": "",
                "operationId": "saveContractActivations",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractActivateOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes/linked-docs": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Retrieves the list of contract changes linked docs",
                "description": "",
                "operationId": "getContractChangesLinkedDocuments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractOperLinkedDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes/linked-docs/report": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get an excel report for contract changes linked docs",
                "description": "",
                "operationId": "getContractChangesLinkedDocsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractOperLinkedDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/lock-info": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get information about contract-tp-lock",
                "description": "",
                "operationId": "getContractTpLockInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTpLockInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/requisites": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get requisites of a contract",
                "description": "",
                "operationId": "getContractRequisites",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractRequisitesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/oper-info/{id}": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get oper info by id",
                "description": "",
                "operationId": "getContractOperInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/update-tp-lock": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Update tp lock information",
                "description": "",
                "operationId": "updateTpLock",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTpUpdateLock"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/addr-info/{id}": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get last serviced addr by id",
                "description": "",
                "operationId": "getContractLastServicedAddr",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/reissue-info/{id}": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get reissue info by oper id",
                "description": "",
                "operationId": "getReissueInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/lockable-tp": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get the key-value list of lockable tp by contract id",
                "description": "",
                "operationId": "getLockableTpByContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "alwaysShowId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/lock-data/{id}": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get information about contract-tp-unlock",
                "description": "",
                "operationId": "getContractTpUnlockInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id needed blocking",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/cancel": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Cancel a contract change",
                "description": "",
                "operationId": "cancelContractChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractOperationCancel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes/linked-docs/cancel": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Cancel contract changes",
                "description": "",
                "operationId": "cancelLinkedDoc",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Retrieves the list of history of contract changes",
                "description": "",
                "operationId": "getCurrentContractChanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/changes/report": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Get an excel report for contract changes",
                "description": "",
                "operationId": "getContractChangesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractIdSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/reissue": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Reissue contract",
                "description": "",
                "operationId": "reissueContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractReissue"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/closing": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Close contract operation",
                "description": "",
                "operationId": "saveClosedContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCloseOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/final-closing": {
            "post": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Final close contract operation",
                "description": "",
                "operationId": "saveFinalClosedContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCloseOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/options/billing-date-change/{id}": {
            "get": {
                "tags": [
                    "contractsoptions"
                ],
                "summary": "Getting billing date change by contract operation id",
                "description": "",
                "operationId": "getBillingDateChangeById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received billing date change by contract operation id"
                    },
                    "400": {
                        "description": "Can't retrieve billing date change"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/contracts/search": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Retrieves contracts list by parameters",
                "description": "",
                "operationId": "searchContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/activ-type": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Get activity type",
                "description": "",
                "operationId": "getActivityType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractActivityTypeSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/check": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Check contract discounts for inconsistencies",
                "description": "",
                "operationId": "checkContractDiscounts_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/create": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Creates a new contract",
                "description": "",
                "operationId": "createContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/save/full": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Save a full contract",
                "description": "",
                "operationId": "saveFullContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/create/connect": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Creates the new contract with minimal parameters",
                "description": "",
                "operationId": "createMinimalContractAndConnectToTP",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CallCenterContract"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/search/short-list": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides the list of the contracts",
                "description": "",
                "operationId": "getContractList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractPrepaymentInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/activ-types/{id}": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Get activity types by contract id",
                "description": "",
                "operationId": "getActivityTypesByContractId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/operation-by-tariff/{id}": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Get contract operation id by contract tp",
                "description": "",
                "operationId": "getOperationIdByTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/{id}/shipping-list": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides with a information about current shipping list by SHIPPING LIST id",
                "description": "",
                "operationId": "getCurrentShippingList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/shipping-list": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides with a information about current contract's shipping lists by id",
                "description": "",
                "operationId": "saveShippingList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractShippingList"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/generate--contract-num": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Service for generate contract number",
                "description": "",
                "operationId": "generateContractNumber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/report": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getContractReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides with a common information about contract by its id",
                "description": "",
                "operationId": "getContractCommonAndDetailsSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/save": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Saves the common information about contract",
                "description": "",
                "operationId": "saveContractCommonAndDetailsSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCommon"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/{id}/pack-shipping-list": {
            "get": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides with a list with current contract's shipping lists by CONTRACT id",
                "description": "",
                "operationId": "getShippingList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/contract-total": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Provides with an information about contract's total",
                "description": "",
                "operationId": "getContractTotalSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTotalSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/contract-total/report": {
            "post": {
                "tags": [
                    "contracts"
                ],
                "summary": "Retrieves a formed excel report",
                "description": "",
                "operationId": "getContractTotalReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractTotalSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/change-tp-filter": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Change tariff plan filter",
                "description": "",
                "operationId": "changeTpFilter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractChangeTpFilterOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/report": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReport_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/change-cost": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Cost of change tariff plan",
                "description": "",
                "operationId": "getChangeTPCost",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ChangeTpCostSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/short-data": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Searches tariff plan by parameters and returns brief information",
                "description": "",
                "operationId": "getContractTariffPlanShortData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/max-connection-number": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Retrieves maximal connection numbers in collection of connected tariff plans",
                "description": "",
                "operationId": "getMaxConnectionNumbers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/billing-info": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Retrieves the tariff plan billing info",
                "description": "",
                "operationId": "getTariffPlanBinningInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTpBillingInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-date": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Check date for TP",
                "description": "",
                "operationId": "checkTariffPlanDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCheckTpDate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/list-for-oper": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get list TP for oper",
                "description": "",
                "operationId": "getContractTPForOperList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTpForOperSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-encumbrance-oper/{id}": {
            "get": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get list of operations for cancel",
                "description": "",
                "operationId": "checkEncumbranceOper",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-encumbrance-bill/{id}": {
            "get": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Check availability of accounts for payment of encumbrance",
                "description": "",
                "operationId": "checkEncumbranceBill",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/annul-encumbrance-bill/{id}": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Annul encumbrance bills",
                "description": "",
                "operationId": "annulEncumbranceBill",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-encumbrance-data": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get an active encumbrance list",
                "description": "",
                "operationId": "checkEncumbranceData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCheckEncumbranceData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-encumbrance-data-before-changing-tp": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get an active encumbrance list before changing tariff plan",
                "description": "",
                "operationId": "checkEncumbranceDataBeforeChangingTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractCheckEncumbranceDataBeforeChanging"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/calc-encumbrance/change-tp": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "",
                "description": "Misha Lazarenka",
                "operationId": "getCalcEncumbranceChangeTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CalcEncumbranceInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/calc-encumbrance/disconnect-tp": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "",
                "description": "Misha Lazarenka",
                "operationId": "getCalcEncumbranceDisconnectTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CalcEncumbranceInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/filters": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Get list of tariff plan filters for change",
                "description": "",
                "operationId": "getTpFiltersForChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractTpFilterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Provides with a information about connected tariff plans by contract id",
                "description": "",
                "operationId": "getContractTPSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Drops connected TP",
                "description": "",
                "operationId": "dropContractTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KeyId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/callcenter-connect": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Connect chosen tariff plan to contract in call center",
                "description": "",
                "operationId": "connectTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractConnectTpOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/disconnect": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Disconnect chosen tariff plan to contract",
                "description": "",
                "operationId": "disconnectContractTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractDisconnectTpOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/reconnect": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Change tariff plan",
                "description": "",
                "operationId": "reconnectContractTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractChangeTpOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/group-changes/short-data": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Searches tariff plan by parameters and returns brief information for group change",
                "description": "Kiryl Karneyenka",
                "operationId": "getTpForGroupChange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesTpSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/check-can-be-deleted": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Check can tariff plan be deleted",
                "description": "",
                "operationId": "checkCanBeDeletedTariffPlan_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KeyId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/id-generation": {
            "get": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Retrieves new generated id for tp connection",
                "description": "",
                "operationId": "generateConnectedTariffPlanId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/contracts/tariff-plans/connect": {
            "post": {
                "tags": [
                    "contractstariff-plans"
                ],
                "summary": "Connect chosen tariff plan to contract",
                "description": "",
                "operationId": "connectContractTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractConnectTpOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/technical-parameters/goods": {
            "post": {
                "tags": [
                    "main-datatechnical-parameters"
                ],
                "summary": "Provides the key-value list of goods",
                "description": "",
                "operationId": "getGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsKeyValueSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/technical-parameters/net-subgroup": {
            "get": {
                "tags": [
                    "main-datatechnical-parameters"
                ],
                "summary": "Provides the list of actual subscriber types in system",
                "description": "",
                "operationId": "getDocStatuses_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/get-ip": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Generates ip",
                "description": "",
                "operationId": "generateIp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/save": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Saving the technical parameters",
                "description": "",
                "operationId": "saveTechnicalParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TechnicalParameters"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/contract-goods/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the contract goods by contractTpId",
                "description": "",
                "operationId": "getContractGoods_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/vlan-parameters/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the vlan parameters",
                "description": "",
                "operationId": "getVlanParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/vlan-parameters/ports": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the vlan parameters",
                "description": "",
                "operationId": "getVlanPorts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "switchId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "portsAmount",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/get-login/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the vlan parameters by contract id",
                "description": "",
                "operationId": "generateLogin",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A contract id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/get-vlan-by-ip-pool/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the vlan ig by ip pool id",
                "description": "",
                "operationId": "getVlanIdByIpPoolId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/reserve-port": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Reserving a port",
                "description": "",
                "operationId": "setPortReserved",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReservePortForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/tv/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the TV technical parameters by contractTpId",
                "description": "",
                "operationId": "getTvTechnicalParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/tv/save": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Saving the TV technical parameters",
                "description": "",
                "operationId": "saveTvTechnicalParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TvTechnicalParameters"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/nas-load-level-test": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Nas load level key value",
                "description": "",
                "operationId": "getNasLoadLevelTest",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/nas-load-level": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Nas load level key value",
                "description": "",
                "operationId": "getNasLoadLevel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/mac-hist": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the mac history list",
                "description": "",
                "operationId": "getMacHistoryList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MacHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/goods-info/{contractGoodsId}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the goods info by contract goods id",
                "description": "",
                "operationId": "getGoodsInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractGoodsId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/transfer-param": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Transfer param from old tp to new tp",
                "description": "",
                "operationId": "transferParam",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferParamData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/check-config-ip": {
            "post": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Check config IP",
                "description": "",
                "operationId": "checkConfigIp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckConfigIPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/technical-parameters/{id}": {
            "get": {
                "tags": [
                    "technical-parameters"
                ],
                "summary": "Getting the technical parameters",
                "description": "",
                "operationId": "getTechnicalParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/counterparty": {
            "get": {
                "tags": [
                    "main-datacounterparty"
                ],
                "summary": "Getting counterparty types",
                "description": "",
                "operationId": "types",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/country/set-status": {
            "post": {
                "tags": [
                    "main-datacountry"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_3",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/country/report": {
            "post": {
                "tags": [
                    "main-datacountry"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_22",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCountryCodeSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/country/uniqueness": {
            "post": {
                "tags": [
                    "main-datacountry"
                ],
                "operationId": "checkUniqueness",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CountryCodeSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country code checked successfully"
                    },
                    "400": {
                        "description": "Can not checked country code"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/country": {
            "post": {
                "tags": [
                    "main-datacountry"
                ],
                "summary": "Provides the country code list",
                "description": "",
                "operationId": "getCountryCodes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CountryCodeSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting country code list have got successfully"
                    },
                    "400": {
                        "description": "Can not get country code list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/country/save": {
            "post": {
                "tags": [
                    "main-datacountry"
                ],
                "operationId": "updateCountryCode",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CountryCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country code update successfully"
                    },
                    "400": {
                        "description": "Can not update country code"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/cto/part-id": {
            "post": {
                "tags": [
                    "main-data"
                ],
                "summary": "Get part id by order ids",
                "description": "HaisM PKG_ORDERS_UTILS.GET_PART_ID_BY_ORDERS_ID",
                "operationId": "getPartIdByOrderIds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CtoPartTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Part id has been get successfully"
                    },
                    "400": {
                        "description": "Can not get part id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/handling-way": {
            "get": {
                "tags": [
                    "main-data"
                ],
                "summary": "All handling ways key-values",
                "description": "",
                "operationId": "getHandlingWaysKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/unused-departments": {
            "get": {
                "tags": [
                    "main-data"
                ],
                "summary": "All unused departments key-values",
                "description": "",
                "operationId": "getUnusedDepartments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/history": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves history",
                "description": "",
                "operationId": "getHistory_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/history/versions": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves versions list",
                "description": "",
                "operationId": "getVersionList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "delete an inactive department version",
                "description": "",
                "operationId": "deleteVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "versionId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/report": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves an formed excel report",
                "description": "",
                "operationId": "getReport_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDepartmentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Sets department by new values",
                "description": "",
                "operationId": "setDepartment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Drops department with all its versions",
                "description": "",
                "operationId": "dropDepartment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentDropStatement"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/echelon-list": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves department echelons list by department version id",
                "description": "",
                "operationId": "getDepartmentEchelonsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSectionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/appeal-types": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves all appeal types",
                "description": "",
                "operationId": "getAllAppealTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentAppealsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/job-types": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves all job types",
                "description": "",
                "operationId": "getAllJobTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentJobTypesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/versions": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves department by version id",
                "description": "",
                "operationId": "getDepartmentById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentIdentification"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/set-status": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Sets department status",
                "description": "",
                "operationId": "setDepartmentStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StatusObject"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/appeal-types/report": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getAllAppealTypesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDepartmentAppealsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/job-types/report": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getAllJobTypesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDepartmentJobTypesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/history/report": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves an formed excel report of history of department",
                "description": "",
                "operationId": "getHistoryReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/orders": {
            "get": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Provides the list of orders",
                "description": "",
                "operationId": "getOrdersDepartmentsKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/search": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Finds and retrieves departments (actual versions)",
                "description": "",
                "operationId": "findDepartment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/department-employees": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "All employees in the department",
                "description": "",
                "operationId": "getDepartmentEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentIdentifier"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/linked-job-types": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves linked job types",
                "description": "",
                "operationId": "getLinkedJobTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSectionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/linked-appeal-types": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves linked appeal types",
                "description": "",
                "operationId": "getLinkedAppealTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSectionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/department-configurator/linked-house-types": {
            "post": {
                "tags": [
                    "ctodepartment-configurator"
                ],
                "summary": "Retrieves linked house types in tree format",
                "description": "",
                "operationId": "getLinkedHouseTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSectionSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/events-history/report": {
            "post": {
                "tags": [
                    "ctoevents-history"
                ],
                "summary": "Retrieves an formed excel report",
                "description": "",
                "operationId": "getReport_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelEventHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cto/events-history/search": {
            "post": {
                "tags": [
                    "ctoevents-history"
                ],
                "summary": "Finds and retrieves history of events",
                "description": "",
                "operationId": "findHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/transfer-in-transit/report": {
            "post": {
                "tags": [
                    "transfer-in-transit"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getTransferInTransitReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTransferInTransitSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/transfer-in-transit/save": {
            "post": {
                "tags": [
                    "transfer-in-transit"
                ],
                "summary": "Edit a transfer in transit.",
                "description": "",
                "operationId": "saveTransferInTransit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferInTransit"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/transfer-in-transit": {
            "post": {
                "tags": [
                    "transfer-in-transit"
                ],
                "summary": "Provides the list of existing transfers in transit.",
                "description": "",
                "operationId": "searchTransfersInTransit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransferInTransitSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/funds-transfer/transfer-person-type": {
            "get": {
                "tags": [
                    "main-datafunds-transfer"
                ],
                "summary": "Provides the list of transfer person types.",
                "description": "",
                "operationId": "getTransferPersonTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/funds-transfer/history": {
            "post": {
                "tags": [
                    "funds-transfer"
                ],
                "summary": "Provides the list of funds transfer history.",
                "description": "",
                "operationId": "searchFundsTransferHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FundsTransferHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/funds-transfer/history/report": {
            "post": {
                "tags": [
                    "funds-transfer"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getFundsTransferAccountsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelFundsTransferHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/funds-transfer/save": {
            "post": {
                "tags": [
                    "funds-transfer"
                ],
                "summary": "Create a funds transfer.",
                "description": "",
                "operationId": "saveFundsTransfer",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FundsTransfer"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/global-invoicing/report": {
            "post": {
                "tags": [
                    "global-invoicing"
                ],
                "operationId": "getReportExcel_23",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGlobalInvoicingSearchModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/global-invoicing/start": {
            "get": {
                "tags": [
                    "global-invoicing"
                ],
                "operationId": "startInvoicing",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/global-invoicing": {
            "get": {
                "tags": [
                    "global-invoicing"
                ],
                "operationId": "getCommonInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "global-invoicing"
                ],
                "operationId": "searchGlobalInvoicing",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GlobalInvoicingSearchModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/global-invoicing/change": {
            "post": {
                "tags": [
                    "global-invoicing"
                ],
                "operationId": "setCommonInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GlobalInvoicingChangeModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/import/generate-inventory-number": {
            "get": {
                "tags": [
                    "goods"
                ],
                "summary": "Generate inventory number",
                "description": "",
                "operationId": "generateInventoryNumber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Generated inventory number"
                    },
                    "400": {
                        "description": "Can't generate inventory number"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/import/check-unique-inv-nums": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Check unique inventory numbers",
                "description": "",
                "operationId": "checkUniqueInventoryNumber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckUniqueInvNumberData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked"
                    },
                    "400": {
                        "description": "Can't check"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/import": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Import goods",
                "description": "",
                "operationId": "importGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ImportedGoods"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import goods"
                    },
                    "400": {
                        "description": "Can't Import goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/report": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_24",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management": {
            "get": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Getting goods by id",
                "description": "",
                "operationId": "findById_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "goodsId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "operationId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received goods by id"
                    },
                    "400": {
                        "description": "Can't retrieve goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/search": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Getting goods",
                "description": "",
                "operationId": "findGoodsFilteredByUserId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received goods"
                    },
                    "400": {
                        "description": "Can't retrieve the set of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/save": {
            "put": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Update goods by id",
                "description": "",
                "operationId": "updateGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Goods"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated goods by id"
                    },
                    "400": {
                        "description": "Can't update goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/history": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get goods operation history",
                "description": "",
                "operationId": "findHistoryOfGoodsOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsOperationHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received goods history"
                    },
                    "400": {
                        "description": "Can't received goods history"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/history/report": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getHistoryOfGoodsOperationReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsOperationHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management/depreciation": {
            "get": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get depreciation list",
                "description": "",
                "operationId": "getGoodsDepreciationList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "goodsId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received list of depreciated goods"
                    },
                    "400": {
                        "description": "Can't received list of depreciated goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/set-status-available": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Change goods status to enabled.",
                "description": "",
                "operationId": "setGoodsStatusAvailable",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Object for changing status",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management/cancel-last-operation": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Cancel last operation",
                "description": "",
                "operationId": "cancelLastOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CancelLastOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled last operation"
                    },
                    "400": {
                        "description": "Can't cancel last operation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/quantity-goods-by-oper/{id}": {
            "get": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Cancel last operation",
                "description": "",
                "operationId": "getQuantityOfGoodsByOper",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled last operation"
                    },
                    "400": {
                        "description": "Can't cancel last operation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/manufacturer/key-value": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get key-value manufacturer",
                "description": "",
                "operationId": "getGoodsManufacturerKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsManufacturerKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management/search-all": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Getting all goods",
                "description": "",
                "operationId": "getGoodsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all goods"
                    },
                    "400": {
                        "description": "Can't retrieve the set of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/management/inventory-number/key-value/{id}": {
            "get": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get key-value inventory number of goods",
                "description": "",
                "operationId": "getInventoryNumKeyValByGoodsId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management/inventory-number/key-value": {
            "post": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get key-value inventory number by params",
                "description": "",
                "operationId": "getInventoryNumKeyValByFilter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsInventoryNumberSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/management/get-employee-prs": {
            "get": {
                "tags": [
                    "goodsmanagement"
                ],
                "summary": "Get employee",
                "description": "",
                "operationId": "getEmployeePrs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get employee"
                    },
                    "400": {
                        "description": "Can't get employee"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement-doc/search": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Getting all docs for movement goods",
                "description": "",
                "operationId": "findAll_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsMovementDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received all docs"
                    },
                    "400": {
                        "description": "Can't retrieve the set of docs"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement-doc/report": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_25",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsMovementDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/movement-doc/goods-ids-by-oper-id/{id}": {
            "get": {
                "tags": [
                    "goods"
                ],
                "summary": "Getting get goods ids by oper id",
                "description": "",
                "operationId": "getGoodsIdsByOperId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received ids values"
                    },
                    "400": {
                        "description": "Can't retrieve ids values"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement-doc/doc-type/key-value": {
            "get": {
                "tags": [
                    "goods"
                ],
                "summary": "Getting key-value of document type",
                "description": "",
                "operationId": "getDocumentTypeKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received key values"
                    },
                    "400": {
                        "description": "Can't retrieve key values"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement-doc/operation-types/key-value": {
            "get": {
                "tags": [
                    "goods"
                ],
                "summary": "Operation types for dropdown",
                "description": "",
                "operationId": "operationTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/movement-doc/cancel/{id}": {
            "delete": {
                "tags": [
                    "goods"
                ],
                "summary": "Cancel document",
                "description": "",
                "operationId": "cancelDocument",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled document"
                    },
                    "400": {
                        "description": "Can't cancel document"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement/write-off": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Write-off",
                "description": "",
                "operationId": "writeOffOfGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Write-off of goods"
                    },
                    "400": {
                        "description": "Can't Write-off of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Movement",
                "description": "",
                "operationId": "movingGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moving goods"
                    },
                    "400": {
                        "description": "Can't moving goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/goods/movement/report": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getMovementGoodsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMovementGoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/goods/movement/search": {
            "post": {
                "tags": [
                    "goods"
                ],
                "summary": "Get list of goods for moving",
                "description": "",
                "operationId": "getMovementGoods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MovementGoodsSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received list of moving goods"
                    },
                    "400": {
                        "description": "Can't received list of moving goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/changes/cancel": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Cancel group changes",
                "description": "",
                "operationId": "setStatus_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/report": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_26",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGroupChangesBonusContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/name-of-changes": {
            "get": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Provides the list of group acc changes",
                "description": "",
                "operationId": "getNameChangesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/groups-key-value": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Provides the list of subscriber limited groups.",
                "description": "",
                "operationId": "getSubscriberGroupKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesBonusContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/link": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Linking and unlinking subscribers",
                "description": "",
                "operationId": "linkSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkSubscriberDataGroupChangesBonusContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/changes": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Provides the list of group bonus changes",
                "description": "",
                "operationId": "getGroupBonusChanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/changes/info": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Provides the list of group bonus changes info",
                "description": "",
                "operationId": "getGroupBonusChangesInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesContractInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Provides the list of bonus contracts",
                "description": "",
                "operationId": "getGroupChangesBonusContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesBonusContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found bonus contracts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of bonus contracts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/changes/report": {
            "post": {
                "tags": [
                    "group-changesbonus-contracts"
                ],
                "summary": "Get an excel report for group bonus changes",
                "description": "",
                "operationId": "getGroupBonusChangesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGroupChangesContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/set": {
            "post": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Set bonus group operation",
                "description": "Zhuk Dzmitry",
                "operationId": "setBonusGroupOper",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesComplexOptionGroupChangesBonusContractSearchDataGroupChangesBonusOptionData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/acc-bonuses-info": {
            "post": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Get acc bonuses info",
                "description": "Zhuk Dzmitry",
                "operationId": "getAccBonusesInfoList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccBonusesInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/disable-bonuses": {
            "post": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Get disable bonuses list",
                "description": "Zhuk Dzmitry",
                "operationId": "getDisableBonusesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DisableBonusesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/link-bonuses-info": {
            "post": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Get link bonuses info",
                "description": "Zhuk Dzmitry",
                "operationId": "getLinkedBonusesInfoList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkBonusesInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/min-oper-date": {
            "post": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Get link bonuses info",
                "description": "Zhuk Dzmitry",
                "operationId": "getMinOperDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MinOperDateSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/bonus-contracts/options/info/{id}": {
            "get": {
                "tags": [
                    "group-changesbonus-contractsoptions"
                ],
                "summary": "Get bonus operation info for edit",
                "description": "Zhuk Dzmitry",
                "operationId": "getBonusOperInfoEdit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/report": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_27",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/groups-key-value": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Provides the list of subscriber limited groups.",
                "description": "",
                "operationId": "getSubscriberGroupKeyVal_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/link": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Linking and unlinking subscribers",
                "description": "",
                "operationId": "linkSubscribers_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkSubscriberDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/tariff-plans": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Provides the list of tariff plans for changing",
                "description": "",
                "operationId": "getTariffPlansForChanging",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Provides the list of tp, discount, limit, contracts",
                "description": "",
                "operationId": "getGroupChangesComplexContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found tp, discount, limit, contracts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of tp, discount, limit, contracts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/discounts": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Provides the list of discounts for changing",
                "description": "",
                "operationId": "getDiscountsForChanging",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/limits": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contracts"
                ],
                "summary": "Provides the list of limits for changing",
                "description": "",
                "operationId": "getLimitsForChanging",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/blocking/save": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Saves the information about blocked contracts tariff plan.",
                "description": "",
                "operationId": "saveBlockedContractsTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesComplexOptionGroupChangesComplexContractSearchDataGroupChangesAdminLock"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/blocking/set-status-end": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Set end status for locked tariff plans",
                "description": "Aliaksei Puplikau",
                "operationId": "unlockMultipleTariffPlans",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesComplexOptionGroupChangesComplexContractSearchDataGroupChangesAdminUnlock"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/blocking/complex-lock-information/{id}": {
            "get": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Get information about locked tariff plans",
                "description": "Alena Ulchyts",
                "operationId": "getLockMultipleContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/change-tp": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Changes tp",
                "description": "Dzmitry Zhuk",
                "operationId": "changeGroupTariffPlans",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesTpOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/blocking/update-lock-multiple-contracts": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Updating locked multiple contracts",
                "description": "Alena Ulchyts",
                "operationId": "updateLockMultipleContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateLockMultipleData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/change-credit-limit": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Changes credit limit",
                "description": "Dzmitry Zhuk",
                "operationId": "changeCreditLimit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesComplexOptionGroupChangesComplexContractSearchDataChangeLimitOptionData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/credit-limit-oper-info/{id}": {
            "get": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Get credit limit oper info by groupOperId",
                "description": "Dzmitry Zhuk",
                "operationId": "getCreditLimitOperInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/tariff-plans": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Provides the list of tariff plans for changing",
                "description": "",
                "operationId": "getTariffPlansForChanging_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesTpSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/tariff-plans/edit": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Provides the list of tariff plans for edit changing",
                "description": "",
                "operationId": "getTariffPlansForChangingEdit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesTpEditSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/tp-discount-limit-contracts/options/check-before": {
            "post": {
                "tags": [
                    "group-changestp-discount-limit-contractsoptions"
                ],
                "summary": "Check before group operation",
                "description": "Dzmitry Zhuk",
                "operationId": "checksBeforeGroupOper",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckBeforeGroupChangesTpFilter"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/cancel": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Cancel group changes",
                "description": "",
                "operationId": "setStatus_5",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/report": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_28",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGroupChangesContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Provides the list of contracts changes",
                "description": "",
                "operationId": "getGroupChangesContractList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found contracts"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of contracts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/group-changes/info": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Provides the list of contract changes info",
                "description": "",
                "operationId": "getGroupChangesContractList_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupChangesContractInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/linked-docs": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Retrieves the list of contract changes linked docs",
                "description": "",
                "operationId": "getContractChangesLinkedDocuments_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/linked-docs/report": {
            "post": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Get an excel report for contract changes linked docs",
                "description": "",
                "operationId": "getContractChangesLinkedDocsReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/name-of-changes": {
            "get": {
                "tags": [
                    "group-changes"
                ],
                "summary": "Provides the list of group contract changes",
                "description": "",
                "operationId": "getNameChangesKeyVal_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/tp-info": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Get manual discount tp info",
                "description": "",
                "operationId": "getManualDiscountTpInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ManualDiscountTpInfoSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/tp-info-edit": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Get manual discount tp info for edit connect group discounts operation",
                "description": "",
                "operationId": "getManualDiscountTpInfoEdit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ManualDiscountTpInfoEditSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/key-value": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Get manual discount data",
                "description": "Zhuk Dzmitry",
                "operationId": "getManualDiscountList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/connect": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Connect manual discounts",
                "description": "Zhuk Dzmitry",
                "operationId": "connectManualDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ManualDiscountConnectSaveForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/disconnect-list": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Get manual discount data for disconnect",
                "description": "Zhuk Dzmitry",
                "operationId": "getManualDiscountDisconnectList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group-changes/options/discounts/disconnect": {
            "post": {
                "tags": [
                    "group-changesoptionsdiscounts"
                ],
                "summary": "Disconnect manual discounts",
                "description": "Zhuk Dzmitry",
                "operationId": "disconnectManualDiscounts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ManualDiscountDisconnectSaveData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/inventory/house-configurator/key-value": {
            "get": {
                "tags": [
                    "main-datainventory"
                ],
                "summary": "House key-values by street id",
                "description": "",
                "operationId": "getHouseKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/inventory/station-configurator/key-value": {
            "get": {
                "tags": [
                    "main-datainventory"
                ],
                "summary": "All stations key-values",
                "description": "",
                "operationId": "getStationsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/inventory/room-configurator/key-value": {
            "get": {
                "tags": [
                    "main-datainventory"
                ],
                "summary": "All room key-values by house id",
                "description": "",
                "operationId": "getRoomKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/set-status": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Set house status.",
                "description": "",
                "operationId": "setStatus_6",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/tariff-plans": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the list of available tariff plans for house",
                "description": "",
                "operationId": "getAvailableTariffPlans_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HouseTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/services/{id}": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the list of available services for house by it's id",
                "description": "",
                "operationId": "getAvailableServices",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/{id}": {
            "get": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the full information about house by id",
                "description": "",
                "operationId": "getHouse",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/save": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Create/edit house",
                "description": "",
                "operationId": "saveHouse",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/House"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the list of available streets by name and house number",
                "description": "",
                "operationId": "searchStreets",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StreetHouseSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/located-houses": {
            "post": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the list of available houses",
                "description": "",
                "operationId": "getLocatedHouses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HouseData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/house-configurator/house-broker-link/{id}": {
            "get": {
                "tags": [
                    "inventoryhouse-configurator"
                ],
                "summary": "Provides the list of available houses",
                "description": "",
                "operationId": "getHouseForBrokerLink",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator/set-status": {
            "post": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Set status for batch of rooms",
                "description": "",
                "operationId": "setStatus_7",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoomsStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator/batch": {
            "post": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Batch creation of rooms",
                "description": "",
                "operationId": "createRooms",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoomsBatch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator/{id}": {
            "get": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Provides the full information about room by id",
                "description": "",
                "operationId": "getRoomById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator": {
            "get": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Provides the list of available rooms",
                "description": "",
                "operationId": "getRoomsByHouseId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "houseId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator/room-broker-link": {
            "post": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Provides the list of available houses",
                "description": "",
                "operationId": "getRoomForBrokerLink",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoomForBrokerLinkSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/room-configurator/save": {
            "post": {
                "tags": [
                    "inventoryroom-configurator"
                ],
                "summary": "Create/edit new room",
                "description": "",
                "operationId": "saveRoom",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Room"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/set-status": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Set station status",
                "description": "",
                "operationId": "setStatus_8",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/report": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_29",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelStationSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/history": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Retrieves history",
                "description": "HaisM PKG_STATIONS.GET_STATION_HISTORY",
                "operationId": "getHistory_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/{id}/linked-houses": {
            "get": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "List of linked houses by station's and street's id",
                "description": "",
                "operationId": "getLinkedHouses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/{id}/linked-streets": {
            "get": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Linked street list by station id",
                "description": "",
                "operationId": "getLinkedStreets",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/activity-subtypes": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "List of activity subtypes",
                "description": "",
                "operationId": "getActivitySubtypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StationActivitySubtypeSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/tv": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Retrieves list of station TVs",
                "description": "HaisM PKG_STATIONS.GET_STATION_TV_LIST",
                "operationId": "getStationTvList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StationTvSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/{id}/linked-activ-types": {
            "get": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "List of linked activity types",
                "description": "",
                "operationId": "getLinkedActivityTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/check-activity": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Check station activity",
                "description": "HaisM PKG_STATIONS.GET_ACTIV_SUB_TYPE_CHECK",
                "operationId": "checkStationActivity",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StationActivity"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Stations search",
                "description": "",
                "operationId": "findStations",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StationSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/{id}": {
            "get": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Full information about station by id",
                "description": "",
                "operationId": "getStationById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/save": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Update/Create station",
                "description": "",
                "operationId": "saveStation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/next-station-code": {
            "get": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Generates and retrieves next station code",
                "description": "",
                "operationId": "getNextStationCode",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/activity-subtypes/report": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Get an excel report.",
                "description": "HaisM",
                "operationId": "getActivitySubtypesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelStationActivitySubtypeSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file has been successfully got"
                    },
                    "400": {
                        "description": "Can not get excel file"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/inventory/station-configurator/tree": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Get the address tree",
                "description": "",
                "operationId": "getStationTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AddressTreeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/tree/report": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getStationTreeReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelAddressTreeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/station-configurator/tv/report": {
            "post": {
                "tags": [
                    "inventorystation-configurator"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getStationTvReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelStationTvSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/statuses": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available invoice statuses",
                "description": "",
                "operationId": "getInvoiceStatuses",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/invoices-source/key-value": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "operationId": "getKeyVal",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/types": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available invoice types",
                "description": "",
                "operationId": "getInvoiceTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/types-of-activities": {
            "post": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available invoice types",
                "description": "",
                "operationId": "getInvoiceTypesActivities",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceTypesKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/document-types": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available document types",
                "description": "",
                "operationId": "getDocumentTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/document-type-codes": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available document types",
                "description": "",
                "operationId": "getDocumentTypeCodes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/document-type-name-codes": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available document type names",
                "description": "",
                "operationId": "getDocumentTypeNameCodes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/additional-data": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available additional data",
                "description": "",
                "operationId": "getAdditionalData",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/prepayment-types": {
            "post": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of prepayment invoice types",
                "description": "",
                "operationId": "getPrepayBillTypes",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceTypesKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/provider-statuses": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available provider statuses",
                "description": "",
                "operationId": "getProviderStatuses",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/invoices/recipient-statuses": {
            "get": {
                "tags": [
                    "main-datainvoices"
                ],
                "summary": "Provides the list of available recipient statuses",
                "description": "",
                "operationId": "getRecipientStatuses",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/report": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_30",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/reform-digital-invoice": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Provides the list of available invoices",
                "description": "",
                "operationId": "reformDigitalInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/invoices-sum": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Send invoices to avest module",
                "description": "",
                "operationId": "getInvoicesSum",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/save": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Update information for the invoice",
                "description": "",
                "operationId": "updateInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceStructuredInfo"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/create-common": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "summary": "Create common invoice",
                "description": "",
                "operationId": "createCommonInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/create-modified": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Creating modified invoice based on source invoice",
                "description": "",
                "operationId": "createModifiedInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceSourceId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/create-additional": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Creating additional invoice based on source invoice",
                "description": "",
                "operationId": "createAdditionalInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceSourceId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/delete": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Delete invoices by ids",
                "description": "",
                "operationId": "deleteInvoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Provides the list of available invoices",
                "description": "",
                "operationId": "searchForInvoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "summary": "Provides the full information about invoice by id",
                "description": "",
                "operationId": "getInvoiceById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/upload-invoices": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Send invoices to avest module",
                "description": "",
                "operationId": "uploadInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/update-statuses": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Synchronize statuses of unloaded invoices with vat portal",
                "description": "",
                "operationId": "updateInvoiceStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/{invoice-id}/roster/{id}": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "summary": "Provides the full information about roster item by id",
                "description": "",
                "operationId": "getRosterItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "invoice-id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "invoices"
                ],
                "summary": "Remove roster item by id",
                "description": "",
                "operationId": "deleteRosterItem",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/roster/save": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Create new roster item for invoice",
                "description": "",
                "operationId": "createRosterItem",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRosterItem"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/roster": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "Provides the roster for invoice",
                "description": "",
                "operationId": "searchForRoster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRosterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/roster/report": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "getRosterReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelInvoiceRosterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/jasper-file": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Get jasper document",
                "description": "",
                "operationId": "getFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperFileSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/set-status": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Set status",
                "description": "",
                "operationId": "setStatus_9",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRegisterSetStatusData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/report": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_31",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelInvoiceRegisterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Search for billings by specified criteria",
                "description": "",
                "operationId": "getList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRegisterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/send-emails": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Send emails",
                "description": "",
                "operationId": "sendEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceEmailSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/recalculate": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Set recalculation",
                "description": "",
                "operationId": "setRecalculation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceRegisterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/recalculate/by-contracts": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Set recalculation by contract",
                "description": "",
                "operationId": "setRecalculationByContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RecalculationDocByContractModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/get-zip-files": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Get documents in zip",
                "description": "",
                "operationId": "getDocumentsInZip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InvoiceEmailSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice-register/print-document": {
            "post": {
                "tags": [
                    "invoice-register"
                ],
                "summary": "Get File to print",
                "description": "",
                "operationId": "printDocuments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataInvoiceRegisterSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/report-list/marketing": {
            "get": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a list of reports in report-template folder for current user. Depend on Groups of current user.",
                "description": "",
                "operationId": "getReportListMarketing",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/generate-document": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Generates jasper report document. ",
                "description": "",
                "operationId": "generateDocument",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/generate-preview": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Generates jasper report document preview. No Print saved.",
                "description": "",
                "operationId": "generatePreview",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/get-child-values": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Executes SQL to load child values (List<KeyValType>) for child combo box.",
                "description": "",
                "operationId": "getChildValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/open-document": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Opens existing jasper-pribnt document. ",
                "description": "",
                "operationId": "openDocument",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/list-of-ui-parameters": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a parameter for UI form for input data.",
                "description": "",
                "operationId": "getDocumentTemplateUiParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/report-list/sales": {
            "get": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a list of reports in report-template folder for current user. Depend on Groups of current user.",
                "description": "",
                "operationId": "getReportListSales",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/report-list/callcenter": {
            "get": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a list of reports in report-template folder for current user. Depend on Groups of current user.",
                "description": "",
                "operationId": "getReportListCallCenter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/report-list/accounting": {
            "get": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a list of reports in report-template folder for current user. Depend on Groups of current user.",
                "description": "",
                "operationId": "getReportListAccounting",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/report-list/cto": {
            "get": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Provides with a list of reports in report-template folder for current user. Depend on Groups of current user.",
                "description": "",
                "operationId": "getReportListCto",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/init-report-template-cache": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Init cache for report templates from file system.",
                "description": "",
                "operationId": "initReportTemplateCache",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/jaspergen/preprocess-report-template-cache": {
            "post": {
                "tags": [
                    "jaspergen"
                ],
                "summary": "Preprocess reports with special scripts.",
                "description": "",
                "operationId": "preprocessTemplateCacheReports",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activation-type/key-val": {
            "get": {
                "tags": [
                    "main-dataactivation-type"
                ],
                "summary": "get a list of activities discount or bonuses",
                "description": "",
                "operationId": "getActivationType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activity-types/key-value": {
            "get": {
                "tags": [
                    "main-dataactivity-types"
                ],
                "summary": "Retrieves the list of all available activity types",
                "description": "",
                "operationId": "getActivityTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activity-types/addr/key-value": {
            "get": {
                "tags": [
                    "main-dataactivity-types"
                ],
                "summary": "Retrieves the list of all available activity types for tariff plans territorial binding",
                "description": "",
                "operationId": "getAddrActivityTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activity-types/activ-type-complex-tp": {
            "get": {
                "tags": [
                    "main-dataactivity-types"
                ],
                "summary": "Retrieves the list of activity types at complex tariff plan",
                "description": "",
                "operationId": "getComplexTpActivityTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activity-types/addr/key-value/tree": {
            "post": {
                "tags": [
                    "main-dataactivity-types"
                ],
                "summary": "Retrieves the list of available activity types by house id",
                "description": "",
                "operationId": "getActivityTypesByHouse",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityTypeSearchParam"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/set-status": {
            "post": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "set activity kind subgroup status.",
                "description": "",
                "operationId": "setStatus_10",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/report": {
            "post": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_32",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelActivityKindSubgroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup": {
            "post": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Provides the list of activity kind subgroups.",
                "description": "",
                "operationId": "searchActivityKindSubgroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityKindSubgroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/{id}": {
            "get": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Provides the full information about a activity kind subgroup by id.",
                "description": "",
                "operationId": "getActivityKindSubgroupById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/save": {
            "post": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Create a activity kind subgroup by name or edit by id.",
                "description": "",
                "operationId": "setActivityKindSubgroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityKindSubgroup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/activ-type-station": {
            "get": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Provides the list of reduced activity kind subgroups for stations configurator.",
                "description": "",
                "operationId": "getActivityTypeStationsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/key-value/with-parent": {
            "get": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "List of available activity types",
                "description": "",
                "operationId": "getAvailableActivityTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/key-value/with-parent-list": {
            "get": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "List of available activity types",
                "description": "",
                "operationId": "getAvailableActivityTypesWithParentList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/activ-kind-subgroup/key-value": {
            "get": {
                "tags": [
                    "main-dataactiv-kind-subgroup"
                ],
                "summary": "Retrieves the list of activity subtypes of selected activity type defined by its ID",
                "description": "",
                "operationId": "getActivitySubTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/districts/set-status": {
            "post": {
                "tags": [
                    "main-datadistricts"
                ],
                "summary": "Set district status",
                "description": "",
                "operationId": "setStatus_11",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/districts/report": {
            "post": {
                "tags": [
                    "main-datadistricts"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_33",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/districts/key-value": {
            "get": {
                "tags": [
                    "main-datadistricts"
                ],
                "summary": "Provides district keyvalues",
                "description": "",
                "operationId": "getKV",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/districts": {
            "post": {
                "tags": [
                    "main-datadistricts"
                ],
                "summary": "Provides the list of available districts",
                "description": "",
                "operationId": "findDistricts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/districts/save": {
            "post": {
                "tags": [
                    "main-datadistricts"
                ],
                "summary": "Create new district",
                "description": "",
                "operationId": "saveDistrict",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses/set-status": {
            "post": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Set house status",
                "description": "",
                "operationId": "setStatus_12",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses/report": {
            "post": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_34",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses/key-value": {
            "get": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Provides houses status key-values",
                "description": "",
                "operationId": "getKV_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses": {
            "post": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Provides the list of available house statuses",
                "description": "",
                "operationId": "findStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses/{id}": {
            "get": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Provides chosen house status by id",
                "description": "",
                "operationId": "getStatusById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/house-statuses/save": {
            "post": {
                "tags": [
                    "main-datahouse-statuses"
                ],
                "summary": "Create new house status",
                "description": "",
                "operationId": "saveStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/room-types/set-status": {
            "post": {
                "tags": [
                    "main-dataroom-types"
                ],
                "summary": "Set room type status",
                "description": "",
                "operationId": "setStatus_13",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/room-types/report": {
            "post": {
                "tags": [
                    "main-dataroom-types"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_35",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/room-types": {
            "post": {
                "tags": [
                    "main-dataroom-types"
                ],
                "summary": "Provides the list of available room types",
                "description": "",
                "operationId": "findTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/room-types/save": {
            "post": {
                "tags": [
                    "main-dataroom-types"
                ],
                "summary": "Create new room type",
                "description": "",
                "operationId": "saveType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/room-types/key-value": {
            "get": {
                "tags": [
                    "main-dataroom-types"
                ],
                "summary": "Provides room type keyvalues",
                "description": "",
                "operationId": "getKV_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/station-types/set-status": {
            "post": {
                "tags": [
                    "main-datastation-types"
                ],
                "summary": "Set station type status.",
                "description": "",
                "operationId": "setStatus_14",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/station-types/report": {
            "post": {
                "tags": [
                    "main-datastation-types"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_36",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/station-types": {
            "post": {
                "tags": [
                    "main-datastation-types"
                ],
                "summary": "Provides the list of available station types",
                "description": "",
                "operationId": "findType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/station-types/save": {
            "post": {
                "tags": [
                    "main-datastation-types"
                ],
                "summary": "Create new station type",
                "description": "",
                "operationId": "saveType_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/station-types/key-value": {
            "get": {
                "tags": [
                    "main-datastation-types"
                ],
                "summary": "Provides station type keyvalues",
                "description": "",
                "operationId": "getKV_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/street-types/set-status": {
            "post": {
                "tags": [
                    "main-datastreet-types"
                ],
                "summary": "Set street type status",
                "description": "",
                "operationId": "setStatus_15",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/street-types/report": {
            "post": {
                "tags": [
                    "main-datastreet-types"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_37",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/street-types": {
            "post": {
                "tags": [
                    "main-datastreet-types"
                ],
                "summary": "Provides the list of available street types",
                "description": "",
                "operationId": "findTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/street-types/key-value": {
            "get": {
                "tags": [
                    "main-datastreet-types"
                ],
                "summary": "Provides street type key values",
                "description": "",
                "operationId": "getKeyValue_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/street-types/save": {
            "post": {
                "tags": [
                    "main-datastreet-types"
                ],
                "summary": "Create new street type",
                "description": "",
                "operationId": "saveType_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StreetType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets/set-status": {
            "post": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Set street status",
                "description": "",
                "operationId": "setStatus_16",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets/report": {
            "post": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_38",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelStreetSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets/key-value": {
            "get": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Provides street key-values",
                "description": "",
                "operationId": "getKV_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets": {
            "post": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Provides the list of available streets",
                "description": "",
                "operationId": "findStreets",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StreetSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets/{id}": {
            "get": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Get street by id",
                "description": "",
                "operationId": "getStreetById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/streets/save": {
            "post": {
                "tags": [
                    "main-datastreets"
                ],
                "summary": "Create new street",
                "description": "",
                "operationId": "saveStreet",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Street"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories/report": {
            "post": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_39",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories/set-status": {
            "post": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Set an appeal category status.",
                "description": "",
                "operationId": "setAppealsStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories/save": {
            "post": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Create appeals categories or edit by id.",
                "description": "",
                "operationId": "setAppealCategory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealCategory"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories/key-value": {
            "get": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Provides station type key values",
                "description": "",
                "operationId": "getAppealCategoryKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories": {
            "post": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Provides information about appeals categories by name.",
                "description": "",
                "operationId": "searchAppealsCategories",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealCategorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-categories/{id}": {
            "get": {
                "tags": [
                    "main-dataappeals-categories"
                ],
                "summary": "Provides the full information about appeals categories by id.",
                "description": "",
                "operationId": "getAppealCategoryById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels": {
            "post": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Provides information about appeals channels by name.",
                "description": "",
                "operationId": "searchAppealsChannels",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealChannelSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels/{id}": {
            "get": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Provides the full information about appeals channels by id.",
                "description": "",
                "operationId": "getAppealChannelById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels/save": {
            "post": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Create appeals channels or edit by id.",
                "description": "",
                "operationId": "updateAppealsChannels",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppealChannel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels/key-value": {
            "get": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Provides station type key values",
                "description": "",
                "operationId": "getAppealChannelKeyValue_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels/set-status": {
            "post": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Set an appeal channel status.",
                "description": "",
                "operationId": "setAppealsStatus_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/appeals-channels/report": {
            "post": {
                "tags": [
                    "main-dataappeals-channels"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getFrpGroupReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/callcenter-way/key-value": {
            "get": {
                "tags": [
                    "main-datacallcenter-way"
                ],
                "summary": "Provides a collection of a appeal way",
                "description": "",
                "operationId": "getAppealWayList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A appeal ways have got successfully"
                    },
                    "400": {
                        "description": "Can not get a appeal way list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/arrears-reasons": {
            "get": {
                "tags": [
                    "main-dataarrears-reasons"
                ],
                "summary": "Provides the list of arrear reasons",
                "description": "",
                "operationId": "get",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-dataarrears-reasons"
                ],
                "summary": "Provides information about arrears reason by name, date diapason and status",
                "description": "",
                "operationId": "search_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/arrears-reasons/save": {
            "post": {
                "tags": [
                    "main-dataarrears-reasons"
                ],
                "summary": "Creates a new/edits arrears reason",
                "description": "",
                "operationId": "save_5",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/arrears-reasons/set-status": {
            "post": {
                "tags": [
                    "main-dataarrears-reasons"
                ],
                "summary": "Set arrear reason status",
                "description": "",
                "operationId": "setStatus_17",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/arrears-reasons/report": {
            "post": {
                "tags": [
                    "main-dataarrears-reasons"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_40",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank/set-status": {
            "post": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Set status of a bank",
                "description": "",
                "operationId": "setStatus_18",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of a bank has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of a bank"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank/report": {
            "post": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_41",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBankSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank": {
            "post": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Find banks",
                "description": "Find banks",
                "operationId": "getBanks",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found banks"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of banks"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank/save": {
            "post": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Create new bank",
                "description": "",
                "operationId": "saveBank",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Banks data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank saved successfully"
                    },
                    "400": {
                        "description": "Can not saved bank"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank/key-value": {
            "get": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Provides bank keyvalues",
                "description": "",
                "operationId": "getBankKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found banks"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of banks"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank/{id}": {
            "get": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Provides the full information about bank by id",
                "description": "",
                "operationId": "getBankById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed bank",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found bank"
                    },
                    "400": {
                        "description": "Can't retrieve the found bank"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank/key-value/bic": {
            "get": {
                "tags": [
                    "main-databank"
                ],
                "summary": "Provides bank bic key-values",
                "description": "",
                "operationId": "getBankBicKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found banks bic"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of banks bic"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/bank-return/set-status": {
            "post": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_19",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/report": {
            "post": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_42",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelBankReturnSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/names": {
            "get": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Provides the list of bank names.",
                "description": "",
                "operationId": "getCodes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/names/full": {
            "get": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Provides the list with archive of bank names.",
                "description": "",
                "operationId": "getCodesFull",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/key-value": {
            "get": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Provides the key-value list of bank accounts to return",
                "description": "",
                "operationId": "getBankReturnKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/counterparty/key-value": {
            "get": {
                "tags": [
                    "main-databank-return"
                ],
                "operationId": "getCounterpartiesKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return": {
            "post": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Provides the list of bank accounts for return.",
                "description": "",
                "operationId": "searchBankReturn",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReturnSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/{id}": {
            "get": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Provides the full information about a bank account for return by id.",
                "description": "",
                "operationId": "getBankReturnById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/bank-return/save": {
            "post": {
                "tags": [
                    "main-databank-return"
                ],
                "summary": "Create or edit a bank account for return.",
                "description": "",
                "operationId": "setBankReturn",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReturn"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks/save": {
            "post": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "Can be used for saving/updating of check mark",
                "description": "",
                "operationId": "save_6",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckMarkData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks": {
            "post": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "Searches by search form",
                "description": "",
                "operationId": "search_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks/report": {
            "post": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_43",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks/key-value": {
            "get": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "All appeal types",
                "description": "",
                "operationId": "getKeyValue_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks/get-check-marks-by-order-type": {
            "post": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "check by order type",
                "description": "",
                "operationId": "getCheckMarksByOrderType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckMarkData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/check-marks/get-orders-mark": {
            "post": {
                "tags": [
                    "main-datacheck-marks"
                ],
                "summary": "orders mark",
                "description": "",
                "operationId": "getOrdersMark",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersMarkSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/common-config/end-billing-date": {
            "get": {
                "tags": [
                    "main-datacommon-config"
                ],
                "summary": "Get end billing date",
                "description": "",
                "operationId": "getEndBillingDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/common-config/start-billing-date": {
            "get": {
                "tags": [
                    "main-datacommon-config"
                ],
                "summary": "Get start billing date",
                "description": "",
                "operationId": "getStartBillingDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/common-config/is-billing-cycle-close": {
            "get": {
                "tags": [
                    "main-datacommon-config"
                ],
                "operationId": "getIsBillingCycleClose",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "ignoreRealBcRunDate",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/commutators": {
            "post": {
                "tags": [
                    "main-datacommutators"
                ],
                "summary": "Provides the list of commutators",
                "description": "",
                "operationId": "getCommutators",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CommutatorSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found commutators"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of commutators"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/conax/subscriptions": {
            "get": {
                "tags": [
                    "conax"
                ],
                "summary": "Gets information about current subscriptions",
                "description": "",
                "operationId": "getSubscriptionInformation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "caClientId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "conax"
                ],
                "summary": "Adds new subscribtion",
                "description": "",
                "operationId": "addSubscription",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "conax"
                ],
                "summary": "Cancel subscription",
                "description": "",
                "operationId": "cancelSubscription",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings": {
            "get": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Getting of the common configuration parameters",
                "description": "",
                "operationId": "get_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Saving of the common configuration parameters",
                "description": "",
                "operationId": "set",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings/email": {
            "get": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Getting of the email settings",
                "description": "",
                "operationId": "getEmailSettings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Set of the email settings",
                "description": "",
                "operationId": "setEmailSettings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmailSettingsModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings/get-omega-ip": {
            "get": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Retrieves omega ip",
                "description": "",
                "operationId": "getOmegaIp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "omegaIp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings/set-omega-ip": {
            "get": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Retrieves omega ip",
                "description": "",
                "operationId": "setOmegaIp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "omegaIp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings/omega": {
            "get": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Retrieves omega settings table",
                "description": "",
                "operationId": "getOmegaSettings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Saves omega settings table",
                "description": "",
                "operationId": "saveOmegaSettings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OmegaSettingRow"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/app-settings/omega/save-table": {
            "post": {
                "tags": [
                    "main-dataapp-settings"
                ],
                "summary": "Saves omega split settings table",
                "description": "",
                "operationId": "saveOmegaSettingsSplit",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OmegaSplitData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/business-constants": {
            "get": {
                "tags": [
                    "main-databusiness-constants"
                ],
                "summary": "Getting the list of business constants",
                "description": "",
                "operationId": "findAll_3",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/set-status": {
            "post": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Set contract break status",
                "description": "",
                "operationId": "setStatus_20",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/report": {
            "post": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_44",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelContractBreakSearchDate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/key-value": {
            "get": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Get contracts break key-values",
                "description": "",
                "operationId": "getKeyValue_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/edit": {
            "post": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Set contracts break archive status",
                "description": "",
                "operationId": "setArchiveStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractBreakSetArchiveStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract break archive status has been set successfully"
                    },
                    "400": {
                        "description": "Can not set contracts break archive status"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/contract-break": {
            "post": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Provides the list of reasons for contracts break",
                "description": "",
                "operationId": "getContractBreakList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractBreakSearchDate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/save": {
            "post": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Save contracts break",
                "description": "",
                "operationId": "setContractBreakList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContractBreak"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/contract-break/{id}": {
            "get": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Get contracts break by id",
                "description": "",
                "operationId": "findContractBreakById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-datacontract-break"
                ],
                "summary": "Remove contracts break",
                "description": "",
                "operationId": "dropContractBreak",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/correcting-reasons/set-status": {
            "post": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Set a status.",
                "description": "",
                "operationId": "setStatus_21",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/correcting-reasons": {
            "post": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Provides the list of corrections reasons",
                "description": "",
                "operationId": "getCorrectionsReasons",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting list of currency have got successfully"
                    },
                    "400": {
                        "description": "Can not get currency list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/correcting-reasons/{id}": {
            "get": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Provide correcting reason by id",
                "description": "",
                "operationId": "getCorrectionsReasonById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed correcting reason",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting currency by id have got successfully"
                    },
                    "400": {
                        "description": "Can not get currency by id "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/correcting-reasons/key-value": {
            "get": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Provides correction reason keyvalue",
                "description": "",
                "operationId": "getCorrectionsReasonsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting keyvalue have got successfully"
                    },
                    "400": {
                        "description": "Can not get keyvalue "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/correcting-reasons/save": {
            "post": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Save or update correcting reason",
                "description": "",
                "operationId": "saveCorrectionsReason",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Correcting reason data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Correcting reason update successfully"
                    },
                    "400": {
                        "description": "Can not saved correcting reason"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/correcting-reasons/report": {
            "post": {
                "tags": [
                    "main-datacorrecting-reasons"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getFrpGroupReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency/report": {
            "post": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_45",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCurrencySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency": {
            "get": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "Provides the lis of available currencies",
                "description": "",
                "operationId": "getCurrencies",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "pcode-nbrb",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "code-iso",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name-russian",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name-english",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting list of currency have got successfully"
                    },
                    "400": {
                        "description": "Can not get currency list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/currency/key-value": {
            "get": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "Provides currencies keyvalue",
                "description": "",
                "operationId": "getCurrencyKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting keyvalue have got successfully"
                    },
                    "400": {
                        "description": "Can not get keyvalue "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/currency/{id}": {
            "get": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "Provides the full information about currency by id",
                "description": "",
                "operationId": "getCurrencyById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting currency by id have got successfully"
                    },
                    "400": {
                        "description": "Can not get currency by id "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/currency/save": {
            "post": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "update currency by id",
                "description": "",
                "operationId": "updateCurrency",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "currency update successfully"
                    },
                    "400": {
                        "description": "Can not saved currency"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/currency/default-currency": {
            "get": {
                "tags": [
                    "main-datacurrency"
                ],
                "summary": "Get default currency",
                "description": "",
                "operationId": "getDefaultCurrency",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate/report": {
            "post": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_46",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCurrencyRateSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate": {
            "post": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Provides the list of currency rates.",
                "description": "",
                "operationId": "searchCurrencyRates",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CurrencyRateSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate/{id}": {
            "get": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Provides the full information about a currency rate by id and date.",
                "description": "",
                "operationId": "getCurrencyRateById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Remove a currency rate by id and date.",
                "description": "",
                "operationId": "dropCurrencyRate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate/save": {
            "post": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Create or edit a currency rate.",
                "description": "",
                "operationId": "setCurrencyRate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CurrencyRate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate/code": {
            "get": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Provides the list of currency codes.",
                "description": "",
                "operationId": "getCodes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/currency-rate/nbrb": {
            "get": {
                "tags": [
                    "main-datacurrency-rate"
                ],
                "summary": "Download currency rates from nbrb.",
                "description": "",
                "operationId": "downloadCurrencyRates",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/departments/set-status": {
            "post": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_22",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/departments/report": {
            "post": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_47",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDepartmentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/departments/save": {
            "post": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Create new employee",
                "description": "",
                "operationId": "createDepartment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Department data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department saved successfully"
                    },
                    "400": {
                        "description": "Can not saved department"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/departments/key-value": {
            "get": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Provides department key-values",
                "description": "",
                "operationId": "getDepartmentKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Received found departments"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of departments"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/departments": {
            "post": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Provides the list of departments",
                "description": "",
                "operationId": "getDepartments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DepartmentSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found departments"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of departments"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/departments/{id}": {
            "get": {
                "tags": [
                    "main-datadepartments"
                ],
                "summary": "Provides the full information about department by id",
                "description": "",
                "operationId": "getDepartmentById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed department",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found department"
                    },
                    "400": {
                        "description": "Can't retrieve the found department"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/depot/set-status": {
            "post": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Set depot status",
                "description": "",
                "operationId": "setStatus_23",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/depot/report": {
            "post": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_48",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/depot": {
            "post": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Provides the list of actual depots",
                "description": "",
                "operationId": "getDepots",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CatalogType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of depots"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/depot/{id}": {
            "get": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Get depot by id",
                "description": "",
                "operationId": "getDepotById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed depot",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the depot"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/depot/key-value": {
            "get": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Provides the key-value list of depot",
                "description": "",
                "operationId": "getDepotKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get key-value list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/depot/save": {
            "post": {
                "tags": [
                    "main-datadepot"
                ],
                "summary": "Saves the provided depot object to DB",
                "description": "",
                "operationId": "saveDepot",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Depot data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't save depot"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/dhcps/set-status": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_24",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/handle-dhcp-data": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "handleDhcpData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DhcpData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/report": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getAddressSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDhcpSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/get-dhcp-ranges": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "getDhcpRanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PoolSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "summary": "Provides the list of dhcps",
                "description": "",
                "operationId": "getDhcpList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DhcpSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found dhcps"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of dhcps"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/dhcps/save": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "summary": "Create/update dhcp",
                "description": "",
                "operationId": "setDhcp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Dhcp data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dhcp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dhcp saved/updated successfully"
                    },
                    "400": {
                        "description": "Can not saved/update dhcp"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/dhcps/delete-range/{id}": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "deleteDhcpRange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/set-range": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "setRange",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Dhcp range data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DhcpRange"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/delete-dhcp/{id}": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "deleteDhcp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/pool-types": {
            "get": {
                "tags": [
                    "main-datadhcps"
                ],
                "operationId": "getPoolTypeKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/dhcps/generate-dhcpd-file": {
            "post": {
                "tags": [
                    "main-datadhcps"
                ],
                "summary": "Generates DHCPD file for Radius. ",
                "description": "",
                "operationId": "generateDhcpdFile",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/test-doc": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "",
                "description": "",
                "operationId": "getString",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/set-status": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_25",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/report": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_49",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDocumentTypeFormingSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/download": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "download  the subscriber jasper template",
                "description": "",
                "operationId": "loadFile",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/key-value": {
            "get": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Provides a collection  process name key values ",
                "description": "",
                "operationId": "getCommissionDocuments_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A process name key  values  have got successfully"
                    },
                    "400": {
                        "description": "Can not get process name"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Provides a collection of a formation documents",
                "description": "",
                "operationId": "getFormationDocs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FormationDocumentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/key-value/{processId}/{docTypeId}": {
            "get": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Provides a Map FileName:DocumentTypeForming for given processId and docTypeId",
                "description": "",
                "operationId": "getKindByProcessAndType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "processId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "docTypeId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Map got successfully"
                    },
                    "400": {
                        "description": "Can not get result"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming/loadFile": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Saves with the subscriber jasper template",
                "description": "",
                "operationId": "saveFile",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/document-type-forming/save": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "update document  type forming by id",
                "description": "",
                "operationId": "setDocumentType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeForming"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document  type forming update successfully"
                    },
                    "400": {
                        "description": "Can not saved document  type forming"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming/{id}": {
            "get": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Provides the full information about document  type forming by id",
                "description": "",
                "operationId": "getDocumentFormattingById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting document formating by id have got successfully"
                    },
                    "400": {
                        "description": "Can not get document  type forming by id "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Find document forming",
                "description": "Find document  type forming",
                "operationId": "getDocumentsFormattings",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeFormingSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found document  type forming"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of document type forming"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming/get-doc-types-list": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Find document forming",
                "description": "Find document  type forming. Can group by Document Type. Used in Jasper generation Dialog",
                "operationId": "getDocumentsFormattingsGroupedByDocType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeFormingSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found document  type forming"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of document type forming"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming/get-doc-formation-list": {
            "post": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Find document forming",
                "description": "Find document  type forming. Can group by Document Type. Used in Jasper generation Dialog",
                "operationId": "getDocumentsFormattingsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeFormingSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found document  type forming"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of document type forming"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/document-type-forming/key-value/{processId}": {
            "get": {
                "tags": [
                    "main-datadocument-type-forming"
                ],
                "summary": "Provides a collection document types key values ",
                "description": "",
                "operationId": "getTypeByProcess",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "processId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A document type key  values  have got successfully"
                    },
                    "400": {
                        "description": "Can not get document type"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/employees/set-status": {
            "post": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_26",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/employees/report": {
            "post": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_50",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelEmployeeSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/employees": {
            "post": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Provides the list employees",
                "description": "",
                "operationId": "getEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeeSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found employees"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of employees"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/employees/key-value": {
            "get": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Provides employee key-values",
                "description": "",
                "operationId": "getEmployeeKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "description": "Pass 'true' to get key values with archive values, 'false'/nothing instead",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found employee"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of employee"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/employees/search/summary": {
            "post": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Provides the list of summary (short list of attributes) information of employees",
                "description": "",
                "operationId": "getEmployeesSummary",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeeSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search request processed successfully. List of employees found by search criteria returned"
                    },
                    "400": {
                        "description": "Can't retrieve the set of employees"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/employees/{id}": {
            "get": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Provides the full information about employee by id",
                "description": "",
                "operationId": "getEmployeeById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed employee",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found employee"
                    },
                    "400": {
                        "description": "Can't retrieve the found employee"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/employees/save": {
            "post": {
                "tags": [
                    "main-dataemployees"
                ],
                "summary": "Create new employee",
                "description": "",
                "operationId": "createEmployee",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Employee data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee saved successfully"
                    },
                    "400": {
                        "description": "Can not saved employee"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/erip/control-lvl": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of Control lvl",
                "description": "",
                "operationId": "getKeyValueControlLvl",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/erip/error-kind": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of error kind",
                "description": "",
                "operationId": "getKyeValueErrorKind",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/erip/process-status": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of Processing status",
                "description": "",
                "operationId": "getKyeValueProcessingStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/erip/status": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of status",
                "description": "",
                "operationId": "getKeyValueStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/erip/202-204-status": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of 202, 204 status",
                "description": "",
                "operationId": "getKeyValueErip202204Status",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/erip/write-off-operation-type": {
            "get": {
                "tags": [
                    "main-dataerip"
                ],
                "summary": "Retrieves key value of write off operation types",
                "description": "",
                "operationId": "getKeyValueWriteOffOperationType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Getting erip payment list",
                "description": "",
                "operationId": "findAll_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received erip payment list"
                    },
                    "400": {
                        "description": "Can't retrieve the erip payment"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/erip/erip-payments/report": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_51",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelEripPaymentSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments/write-off": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Write off payment",
                "description": "",
                "operationId": "writeOff",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentOperData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments/transfer-to-subscriber": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Transfer to subscriber",
                "description": "",
                "operationId": "transferToSubscriber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentOperData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments/cancel-transfer-to-subscriber": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Cancel transfer to subscriber",
                "description": "",
                "operationId": "cancelTransferToSubscriber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentOperData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments/cancel-write-off": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Cancel write off payment",
                "description": "",
                "operationId": "cancelWriteOff",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentOperData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/erip-payments/cancel-operation": {
            "post": {
                "tags": [
                    "eriperip-payments"
                ],
                "summary": "Cancels operation",
                "description": "",
                "operationId": "cancelOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripPaymentOperData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/messages-202-204/report": {
            "post": {
                "tags": [
                    "eripmessages-202-204"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_52",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelEripProcessingSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/erip/messages-202-204": {
            "post": {
                "tags": [
                    "eripmessages-202-204"
                ],
                "summary": "Provides the list of erip processing",
                "description": "",
                "operationId": "getEripProcessing",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EripProcessingSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found erip processing"
                    },
                    "400": {
                        "description": "Can't retrieve the list of erip processing"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/filter-types": {
            "post": {
                "tags": [
                    "main-datafilter-types"
                ],
                "summary": "Provides information about filter types by name.",
                "description": "",
                "operationId": "searchByName",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/filter-types/save": {
            "post": {
                "tags": [
                    "main-datafilter-types"
                ],
                "summary": "Create filter types or edit by id.",
                "description": "",
                "operationId": "updateFilterTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/filter-types/set-status": {
            "post": {
                "tags": [
                    "main-datafilter-types"
                ],
                "summary": "set filter types status.",
                "description": "",
                "operationId": "setFilterTypeStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/filter-types/report": {
            "post": {
                "tags": [
                    "main-datafilter-types"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getFrpGroupReportExcel_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/filter-types/{id}": {
            "get": {
                "tags": [
                    "main-datafilter-types"
                ],
                "summary": "Provides the full information about filter types by id.",
                "description": "",
                "operationId": "getById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/set-status": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "set  payment methods status.",
                "description": "",
                "operationId": "setStatus_27",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/report": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getFrpGroupReportExcel_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelFrpGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/check-is-prs": {
            "get": {
                "tags": [
                    "main-datafrp-group"
                ],
                "operationId": "checkUserIsPrs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/unbound-employee/report": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getGroupEmployeesExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelFrpEmployeeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/employee-with-department": {
            "get": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the list of employees.",
                "description": "",
                "operationId": "getEmployeesWithDepartment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/employee": {
            "get": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the list of employees.",
                "description": "",
                "operationId": "getAllEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/unbound-employee": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the list of employees.",
                "description": "",
                "operationId": "getGroupEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FrpEmployeeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/bound-employee": {
            "get": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the list of employees.",
                "description": "",
                "operationId": "getGroupEmployees_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the list of FRP groups.",
                "description": "",
                "operationId": "searchFrpGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FrpGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/{id}": {
            "get": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Provides the full information about a FRP group by id.",
                "description": "",
                "operationId": "getFrpGroupById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/save": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Create or edit a FRP group.",
                "description": "",
                "operationId": "setFrpGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FrpGroup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/frp-group/link": {
            "post": {
                "tags": [
                    "main-datafrp-group"
                ],
                "summary": "Linking and unlinking employees with FRP groups.",
                "description": "",
                "operationId": "linkEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/actions/key-value": {
            "get": {
                "tags": [
                    "main-datagoodsactions"
                ],
                "summary": "Provides the key-value list of goods action",
                "description": "",
                "operationId": "getStatusesKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/groups": {
            "post": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Provides the list of actual goods group",
                "description": "",
                "operationId": "getGroups_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsGroupSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of goods group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/groups/set-status": {
            "post": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_28",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of goods group has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of goods group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/groups/report": {
            "post": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_53",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsGroupSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/groups/{id}": {
            "get": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Get goods group by id",
                "description": "",
                "operationId": "getGroupById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed goods group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GoodsGroup"
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the goods group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/groups/key-value": {
            "get": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Provides the key-value list of goods groups",
                "description": "",
                "operationId": "getGroupsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the key-value list of goods groups"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/groups/save": {
            "post": {
                "tags": [
                    "main-datagoodsgroups"
                ],
                "summary": "Saves the provided goods group object to DB",
                "description": "",
                "operationId": "saveGroup_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Goods group data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoodsGroup"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't save goods group"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers/set-status": {
            "post": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_29",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers/report": {
            "post": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_54",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsManufacturerSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers": {
            "post": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Provides the list of actual goods manufacturers",
                "description": "",
                "operationId": "getManufacturers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsManufacturerSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsManufacturer"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of manufacturers of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers/{id}": {
            "get": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Get goods manufacturer by id",
                "description": "",
                "operationId": "getManufacturerById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed manufacturer",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GoodsManufacturer"
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the manufacturer of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers/key-value": {
            "get": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Provides the key-value list of goods manufacturers",
                "description": "",
                "operationId": "getManufacturerKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the key-value list of manufacturer of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/manufacturers/save": {
            "post": {
                "tags": [
                    "main-datagoodsmanufacturers"
                ],
                "summary": "Saves the provided goods manufacturer object to DB",
                "description": "",
                "operationId": "saveManufacturer",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsManufacturer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't save the manufacturer of goods"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/models/set-status": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_30",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/models/report": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_55",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelGoodsModelSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/models/groups/key-value": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Key-value list for goods group",
                "description": "",
                "operationId": "getGoodsGroupKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsGroupModelKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/goods/models/save": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Saves the provided goods model object to DB",
                "description": "",
                "operationId": "saveModel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Goods model data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoodsModel"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't save goods model"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/models": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Provides the list of actual goods models",
                "description": "",
                "operationId": "getModels",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsModelSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of goods model"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/models/{id}": {
            "get": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Get goods model by id",
                "description": "",
                "operationId": "getModelById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed goods model",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GoodsModel"
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the goods model"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/models/key-value": {
            "post": {
                "tags": [
                    "main-datagoodsmodels"
                ],
                "summary": "Provides the key-value list of goods models",
                "description": "",
                "operationId": "getModelsKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsModelKeyValSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the key-value list of goods model"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/goods/statuses/key-value": {
            "get": {
                "tags": [
                    "main-datagoodsstatuses"
                ],
                "summary": "Provides the key-value list of goods status",
                "description": "",
                "operationId": "getStatusesKeyValues_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/ipzone/set-status": {
            "post": {
                "tags": [
                    "main-dataipzone"
                ],
                "summary": "setip zone status.",
                "description": "",
                "operationId": "setStatus_31",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/ipzone/report": {
            "post": {
                "tags": [
                    "main-dataipzone"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_56",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/ipzone": {
            "get": {
                "tags": [
                    "main-dataipzone"
                ],
                "summary": "Provides information about ip zone by name.",
                "description": "",
                "operationId": "searchByName_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/ipzone/save": {
            "post": {
                "tags": [
                    "main-dataipzone"
                ],
                "summary": "Create a ip zone by name or edit by id.",
                "description": "",
                "operationId": "updateIpZone",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/ipzone/{id}": {
            "get": {
                "tags": [
                    "main-dataipzone"
                ],
                "summary": "Provides the full information about a ip zone by id.",
                "description": "",
                "operationId": "getById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-lock/set-status": {
            "post": {
                "tags": [
                    "main-datareasons-for-lock"
                ],
                "operationId": "setStatus_32",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-lock/report": {
            "post": {
                "tags": [
                    "main-datareasons-for-lock"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_57",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-lock/key-value": {
            "get": {
                "tags": [
                    "main-datareasons-for-lock"
                ],
                "summary": "Provides lock reasons key-values",
                "description": "",
                "operationId": "getKeyVal_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting lock reasons key-values"
                    },
                    "400": {
                        "description": "Can not get lock reasons by key-values "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/reasons-for-lock/save": {
            "post": {
                "tags": [
                    "main-datareasons-for-lock"
                ],
                "summary": "Creating or editing a lock reason",
                "description": "",
                "operationId": "saveLockReason",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lock reason created successfully"
                    },
                    "400": {
                        "description": "The lock reason was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/reasons-for-lock": {
            "post": {
                "tags": [
                    "main-datareasons-for-lock"
                ],
                "summary": "Get a list of lock reasons",
                "description": "",
                "operationId": "getLockReasonsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/measure/set-status": {
            "post": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Set measure status",
                "description": "",
                "operationId": "setStatus_33",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/measure/report": {
            "post": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_58",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMeasureSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/measure": {
            "post": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Provides the list of available measures",
                "description": "",
                "operationId": "getMeasures",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MeasureSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Measure"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get measure list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/measure/{id}": {
            "get": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Provides the full information about measure by id",
                "description": "",
                "operationId": "getMeasureById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed measure",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't retrieve the found measure"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/measure/key-value": {
            "get": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Provides the key-value list of measure",
                "description": "",
                "operationId": "getMeasureKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get key-value list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/measure/short-key-value": {
            "get": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Provides the key-value list of measures for electronic invoice",
                "description": "",
                "operationId": "getMeasureShortKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "description": "pass 'true' to get key values with archive values, 'false'/nothing instead",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get key-value list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/measure/save": {
            "post": {
                "tags": [
                    "main-datameasure"
                ],
                "summary": "Create or update measure",
                "description": "",
                "operationId": "saveMeasure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Measure data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Measure"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can not saved measure"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/nas": {
            "post": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Getting all nas address",
                "description": "",
                "operationId": "findAll_5",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NasSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nas have got successfully"
                    },
                    "400": {
                        "description": "Can not get nas value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/nas/save": {
            "post": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Save nas",
                "description": "",
                "operationId": "save_7",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nas processing",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Nas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nas saved successfully"
                    },
                    "400": {
                        "description": "Can not saved nas"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/nas/set-status": {
            "post": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Set status of a Nas",
                "description": "",
                "operationId": "setStatus_34",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of a nas has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of a nas"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/nas/report": {
            "post": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_59",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelNasSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/nas/key-value": {
            "get": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Provides nas key-values",
                "description": "",
                "operationId": "getKeyVal_2",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting nas key-values"
                    },
                    "400": {
                        "description": "Can not get nas by key-values "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/nas/{id}": {
            "get": {
                "tags": [
                    "main-datanas"
                ],
                "summary": "Provides the full information about currency by id",
                "description": "",
                "operationId": "getNasById",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed nas",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting nas by id have got successfully"
                    },
                    "400": {
                        "description": "Can not get nas by id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/one-field-dict/status": {
            "get": {
                "tags": [
                    "main-dataone-field-dict"
                ],
                "summary": "Get status keyVal",
                "description": "",
                "operationId": "getKeyValStatus",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/onetimeoperations/set-status": {
            "post": {
                "tags": [
                    "main-dataonetimeoperations"
                ],
                "summary": "Set status of a one time operations name",
                "description": "",
                "operationId": "setStatus_35",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set status of a one time operations name has got successfully"
                    },
                    "400": {
                        "description": "Can not set status of a one time operations name"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/onetimeoperations/report": {
            "post": {
                "tags": [
                    "main-dataonetimeoperations"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_60",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOneTimeOperationsNameSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/onetimeoperations/save": {
            "post": {
                "tags": [
                    "main-dataonetimeoperations"
                ],
                "summary": "Create new one time operations name",
                "description": "",
                "operationId": "saveOneTimeOperationsName",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "One time operations name data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneTimeOperationsName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "one time operations name saved successfully"
                    },
                    "400": {
                        "description": "Can not saved one time operations name"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/onetimeoperations/{id}": {
            "get": {
                "tags": [
                    "main-dataonetimeoperations"
                ],
                "summary": "Provides the full information about one time operations name by id",
                "description": "",
                "operationId": "getOneTimeOperationsNameById",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed one time operations name",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found one time operations name"
                    },
                    "400": {
                        "description": "Can't retrieve the found one time operations name"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/onetimeoperations": {
            "post": {
                "tags": [
                    "main-dataonetimeoperations"
                ],
                "summary": "Find one time operations name",
                "description": "Find one time operations name",
                "operationId": "getOneTimeOperationsNames",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OneTimeOperationsNameSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found one time operations name"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of one time operations name"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/operator-prop": {
            "get": {
                "tags": [
                    "main-dataoperator-prop"
                ],
                "summary": "Provides the list of operator properties",
                "description": "",
                "operationId": "getOperatorProp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting list of operator properties have got successfully"
                    },
                    "400": {
                        "description": "Can not get operator property list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/operator-prop/save": {
            "post": {
                "tags": [
                    "main-dataoperator-prop"
                ],
                "summary": "Save operator properties",
                "description": "",
                "operationId": "saveOperatorProp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OperatorProp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save operator properties successfully"
                    },
                    "400": {
                        "description": "Can not saved operator properties"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/order-reasons/{id}": {
            "get": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Provides the full data about order reason by id",
                "description": "",
                "operationId": "get_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OrderReason"
                        }
                    }
                }
            }
        },
        "/main-data/order-reasons": {
            "post": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Provides list of order reasons",
                "description": "",
                "operationId": "list",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReasonSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderReasonSearchItem"
                            }
                        }
                    }
                }
            }
        },
        "/main-data/order-reasons/save": {
            "post": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Create or Update Order Reason",
                "description": "",
                "operationId": "save_8",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReason"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/order-reasons/set-status": {
            "post": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Changes the status of Order Reason",
                "description": "",
                "operationId": "setStatus_36",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/order-reasons/report": {
            "post": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "report_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderReasonSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/order-reasons/order-types-key-values": {
            "get": {
                "tags": [
                    "main-dataorder-reasons"
                ],
                "summary": "Provides key values for Order Type",
                "description": "",
                "operationId": "getOrderTypeKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/type": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Getting operation's types.",
                "description": "",
                "operationId": "getType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/set-status": {
            "post": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_37",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/report": {
            "post": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_61",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCustomOperationSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/operation-affect": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Getting operation's affect types.",
                "description": "",
                "operationId": "getOperationAffect",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/group": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Provides the list of operation groups",
                "description": "",
                "operationId": "getOperationGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of operation groups"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation/name": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Provides with information about operation name.",
                "description": "",
                "operationId": "getAccountOperationsNames",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "kindId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "canBeCorrecting",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "operationAffectId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't retrieve the name of operation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation/oper-names": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Getting operation's types without parameters.",
                "description": "",
                "operationId": "getOperationsNamesWithoutParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/varieties": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Getting varieties of all operations of a personal account",
                "description": "",
                "operationId": "getVarieties",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/custom-operation/save": {
            "post": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Save custom operation",
                "description": "",
                "operationId": "saveCustomOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomOperationUpdateData"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't save a custom operation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation": {
            "post": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Find custom operations by id",
                "description": "",
                "operationId": "findCustomOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomOperationSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomOperationUpdateData"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't find a custom operations by id"
                    },
                    "500": {
                        "description": "Technical errFor occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation/{id}": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Find custom operation by id",
                "description": "",
                "operationId": "findCustomOperationById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can't find a custom operation by"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation/kind": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Provides the list of operation kinds",
                "description": "",
                "operationId": "getOperationKinds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of operation kinds"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/custom-operation/kind-by-oper-id": {
            "get": {
                "tags": [
                    "main-datacustom-operation"
                ],
                "summary": "Provides the list of operation kinds by operation name",
                "description": "",
                "operationId": "getOperationKindsByOperName",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "operId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of operation kinds"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/pt/set-status": {
            "post": {
                "tags": [
                    "main-datapt"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_38",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/pt/report": {
            "post": {
                "tags": [
                    "main-datapt"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_62",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPtSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/pt": {
            "post": {
                "tags": [
                    "main-datapt"
                ],
                "summary": "Provides the PT data list",
                "description": "",
                "operationId": "getPtData",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PtSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PT data list have got successfully"
                    },
                    "400": {
                        "description": "Can not get PT data list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/pt/save": {
            "post": {
                "tags": [
                    "main-datapt"
                ],
                "operationId": "setPtData",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PtData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PT data update successfully"
                    },
                    "400": {
                        "description": "Can not update PT data"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/cancel-reasons": {
            "post": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Provides list of order reasons",
                "description": "",
                "operationId": "list_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReasonCancelSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderReasonSearchItem"
                            }
                        }
                    }
                }
            }
        },
        "/main-data/cancel-reasons/set-status": {
            "post": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Set a status.",
                "description": "",
                "operationId": "setStatus_39",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReasonCancel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/cancel-reasons/key-value": {
            "get": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Key-values",
                "description": "",
                "operationId": "getKeyValue_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    }
                }
            }
        },
        "/main-data/cancel-reasons/report": {
            "post": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getFrpGroupReportExcel_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/cancel-reasons/{id}": {
            "get": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Provides the full information about cancel reasons by id.",
                "description": "",
                "operationId": "getById_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/cancel-reasons/save": {
            "post": {
                "tags": [
                    "main-datacancel-reasons"
                ],
                "summary": "Create cancel reasons or edit by id.",
                "description": "",
                "operationId": "updateReasonsClosingEmergencyOrder",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReasonCancel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-appeals/set-status": {
            "post": {
                "tags": [
                    "main-datareasons-for-appeals"
                ],
                "summary": "Set reasons for appeals status.",
                "description": "",
                "operationId": "setStatus_40",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-appeals/report": {
            "post": {
                "tags": [
                    "main-datareasons-for-appeals"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_63",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelReasonsForAppealsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-appeals": {
            "post": {
                "tags": [
                    "main-datareasons-for-appeals"
                ],
                "summary": "Provides information about reasons for appeals by name.",
                "description": "",
                "operationId": "searchByName_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReasonsForAppealsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-appeals/save": {
            "post": {
                "tags": [
                    "main-datareasons-for-appeals"
                ],
                "summary": "Create reasons for appeals or edit by id.",
                "description": "",
                "operationId": "updateReasonsForAppeals",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReasonsForAppeals"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/reasons-for-appeals/key-value": {
            "get": {
                "tags": [
                    "main-datareasons-for-appeals"
                ],
                "summary": "Provides reasons type key-values",
                "description": "",
                "operationId": "getReasonsKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis/set-status": {
            "post": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "set sign basis  status.",
                "description": "",
                "operationId": "setStatus_41",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis/report": {
            "post": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_64",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis": {
            "post": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "Provides information about sign bases by name.",
                "description": "",
                "operationId": "searchSignBasisByName",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis/key-value": {
            "get": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "Retrieves the key-value of all available sign basis",
                "description": "",
                "operationId": "getSignBasis",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis/{id}": {
            "get": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "Provides the full information about a sign basis by id.",
                "description": "",
                "operationId": "getSignBasisById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/sign-basis/save": {
            "post": {
                "tags": [
                    "main-datasign-basis"
                ],
                "summary": "Create a sign basis by name or edit by id.",
                "description": "",
                "operationId": "setSignBasis",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/set-status": {
            "post": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "set  payment methods status.",
                "description": "",
                "operationId": "setStatus_42",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/{id}": {
            "get": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Provides the full information about a subscriber group by id.",
                "description": "",
                "operationId": "getGroupById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/key-value": {
            "get": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Provides the list of subscriber groups.",
                "description": "",
                "operationId": "getAllGroupNames",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/limited-key-value": {
            "post": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Provides the list of subscriber limited groups.",
                "description": "",
                "operationId": "getLimitedGroupNames",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataSubscriberSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group": {
            "post": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Provides information about subscriber groups by name.",
                "description": "",
                "operationId": "searchGroupByName",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/report": {
            "post": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getGroupReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberGroupSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-group/save": {
            "post": {
                "tags": [
                    "main-datasubscr-group"
                ],
                "summary": "Create a subscriber group by name or edit by id.",
                "description": "",
                "operationId": "setGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberGroup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscriber-categories/set-status": {
            "post": {
                "tags": [
                    "main-datasubscriber-categories"
                ],
                "summary": "set   subscriber categories status.",
                "description": "",
                "operationId": "setStatus_43",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscriber-categories/report": {
            "post": {
                "tags": [
                    "main-datasubscriber-categories"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_65",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscriber-categories": {
            "post": {
                "tags": [
                    "main-datasubscriber-categories"
                ],
                "summary": "Provides information about subscriber categories by name.",
                "description": "",
                "operationId": "searchByName_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscriber-categories/{id}": {
            "get": {
                "tags": [
                    "main-datasubscriber-categories"
                ],
                "summary": "Provides the full information about a subscriber categoriesby id.",
                "description": "",
                "operationId": "getById_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscriber-categories/save": {
            "post": {
                "tags": [
                    "main-datasubscriber-categories"
                ],
                "summary": "Create a subscriber categories by name or edit by id.",
                "description": "",
                "operationId": "updateSubscriberCategories",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-subgroup/set-status": {
            "post": {
                "tags": [
                    "main-datasubscr-subgroup"
                ],
                "summary": "set subscriber categories status.",
                "description": "",
                "operationId": "setStatus_44",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-subgroup/report": {
            "post": {
                "tags": [
                    "main-datasubscr-subgroup"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_66",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-subgroup": {
            "post": {
                "tags": [
                    "main-datasubscr-subgroup"
                ],
                "summary": "Provides information about subscriber subgroups by name.",
                "description": "",
                "operationId": "searchSubscrSubgroupByName",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-subgroup/{id}": {
            "get": {
                "tags": [
                    "main-datasubscr-subgroup"
                ],
                "summary": "Provides the full information about a subscriber subgroup by id.",
                "description": "",
                "operationId": "getSubscrSubgroupById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscr-subgroup/save": {
            "post": {
                "tags": [
                    "main-datasubscr-subgroup"
                ],
                "summary": "Create a subscriber subgroup by name or edit by id.",
                "description": "",
                "operationId": "setSubscrSubgroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/supplies/report": {
            "post": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_67",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSupplySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/supplies/{id}": {
            "get": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the full information about supply by id and revision",
                "description": "",
                "operationId": "getSupplyById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed supply",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "revisionId",
                        "in": "query",
                        "description": "An id of needed revision",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Remove supply by id",
                "description": "",
                "operationId": "deleteSupply_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed supply",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "revisionId",
                        "in": "query",
                        "description": "An id of needed revision",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can not delete supply"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/supplies": {
            "post": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Find supplies",
                "description": "",
                "operationId": "getSupplies",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupplySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supply"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the found set of supplies"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/supplies/revisions": {
            "post": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the list of revision by supply id",
                "description": "",
                "operationId": "getSupplyRevisions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RevisionSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RevisionInfoEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get revision list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/supplies/date": {
            "get": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the current date-time from server",
                "description": "",
                "operationId": "getCurrentDateTime",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/supplies/time-zone-offset": {
            "get": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the current time zone offset on server in millisecond",
                "description": "",
                "operationId": "getServerTimeZoneOffset",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/supplies/key-value": {
            "get": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the key-value list of supplies",
                "description": "",
                "operationId": "getSupplyKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeyValueType"
                            }
                        }
                    },
                    "400": {
                        "description": "Can not get key-value list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/supplies/history": {
            "post": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Provides the history of changes for actual revision of supply",
                "description": "",
                "operationId": "getSupplyRevisionHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HistoryEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Can't retrieve the list of supply history"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/supplies/save": {
            "post": {
                "tags": [
                    "main-datasupplies"
                ],
                "summary": "Create or update supply",
                "description": "",
                "operationId": "saveSupply",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Supply data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Supply"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Can not saved supply"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/switch/address/key-value": {
            "get": {
                "tags": [
                    "main-dataswitchaddress"
                ],
                "operationId": "getRoomsKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "commutator-id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "house-id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/address/room-configurator/link": {
            "post": {
                "tags": [
                    "main-dataswitchaddress"
                ],
                "operationId": "linkRoom_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/address": {
            "post": {
                "tags": [
                    "main-dataswitchaddress"
                ],
                "operationId": "findStreetAndHouse_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SwitchAddressSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/address/dhcps/link": {
            "post": {
                "tags": [
                    "main-dataswitchaddress"
                ],
                "operationId": "linkDhcp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkDhcpEntity"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/address/linked-dhcps": {
            "post": {
                "tags": [
                    "main-dataswitchaddress"
                ],
                "operationId": "getLinkedDhcp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDhcpSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/set-status": {
            "post": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_45",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/report": {
            "post": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_68",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSwitchSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/switch-types": {
            "get": {
                "tags": [
                    "main-dataswitch"
                ],
                "operationId": "getSwitchTypesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "isDocsis",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch/vlan-ids": {
            "get": {
                "tags": [
                    "main-dataswitch"
                ],
                "operationId": "getVlanIdsKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/switch": {
            "post": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Find switches",
                "description": "Find switch",
                "operationId": "getSwitches",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SwitchSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found switches"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of switch"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/switch/save": {
            "post": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Create new switch",
                "description": "",
                "operationId": "saveSwitch",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Switch data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Switch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "switch saved successfully"
                    },
                    "400": {
                        "description": "Can not saved switch"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/switch/{id}": {
            "get": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Provides the full information about switch by id",
                "description": "",
                "operationId": "getSwitchById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed switch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found switch"
                    },
                    "400": {
                        "description": "Can't retrieve the found switch"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Remove switch by id",
                "description": "",
                "operationId": "deleteSwitch",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of deleted switch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "switch deleted successfully"
                    },
                    "400": {
                        "description": "Can not delete switch"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/switch/key-value": {
            "get": {
                "tags": [
                    "main-dataswitch"
                ],
                "summary": "Provides switch keyvalues",
                "description": "",
                "operationId": "getSwitchKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found switches"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of switches"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/defect-tv/characteristic/set-status": {
            "post": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "operationId": "setStatus_46",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/characteristic/report": {
            "post": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_69",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/characteristic/save": {
            "post": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "summary": "Creating a new characteristics fault channel",
                "description": "",
                "operationId": "saveChannelFailureCharacteristics",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Characteristics fault channel created successfully"
                    },
                    "400": {
                        "description": "The characteristics fault channel was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/defect-tv/characteristic": {
            "get": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "summary": "Get keyVal Characteristics defect tv",
                "description": "",
                "operationId": "getKeyValCharacteristics",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "summary": "Get a list of channel fault characteristics",
                "description": "",
                "operationId": "getChannelFailureCharacteristicsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/characteristic/full": {
            "get": {
                "tags": [
                    "main-datadefect-tvcharacteristic"
                ],
                "summary": "Get full keyVal Characteristics defect tv",
                "description": "",
                "operationId": "getKeyValCharacteristicsFull",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/class/set-status": {
            "post": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "operationId": "setStatus_47",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/class/report": {
            "post": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_70",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/class/save": {
            "post": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "summary": "Creating a new class fault channel",
                "description": "",
                "operationId": "saveChannelFailureClasses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class fault channel created successfully"
                    },
                    "400": {
                        "description": "The class fault channel was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/defect-tv/class": {
            "get": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "summary": "Get keyVal class defect tv",
                "description": "",
                "operationId": "getKeyValClass",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "summary": "Get a list of channel fault classes",
                "description": "",
                "operationId": "getChannelFailureClassesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/class/full": {
            "get": {
                "tags": [
                    "main-datadefect-tvclass"
                ],
                "summary": "Get full keyVal class defect tv",
                "description": "",
                "operationId": "getKeyValClassFull",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/work-type/set-status": {
            "post": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "operationId": "setStatus_48",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/work-type/report": {
            "post": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_71",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/work-type/save": {
            "post": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "summary": "Creating a new type works troubleshooting channel",
                "description": "",
                "operationId": "saveChannelTroubleshootingWorkTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type works troubleshooting channel created successfully"
                    },
                    "400": {
                        "description": "The type works troubleshooting channel was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/defect-tv/work-type": {
            "get": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "summary": "Get keyVal Type Works defect tv",
                "description": "",
                "operationId": "getKeyValWorkTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "summary": "Get a list of channel type works troubleshooting",
                "description": "",
                "operationId": "getChannelTroubleshootingWorkTypesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/defect-tv/work-type/full": {
            "get": {
                "tags": [
                    "main-datadefect-tvwork-type"
                ],
                "summary": "Get full keyVal Type Works defect tv",
                "description": "",
                "operationId": "getKeyValWorkTypesFull",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/{id}": {
            "get": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Provides the full information about tv channel by id",
                "description": "",
                "operationId": "get_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels": {
            "post": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Provides the list of available tv channels",
                "description": "",
                "operationId": "list_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TvChannelSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TvChannel"
                            }
                        }
                    }
                }
            }
        },
        "/main-data/tv-channels/save": {
            "post": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Create new tv channel",
                "description": "",
                "operationId": "save_9",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TvChannel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/set-status": {
            "post": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Changes the status of TV channel",
                "description": "",
                "operationId": "setStatus_49",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/report": {
            "post": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Get an excel report for tv channels",
                "description": "",
                "operationId": "report_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTvChannelSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/history": {
            "post": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Search for history of changes for TV-channel",
                "description": "",
                "operationId": "history",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HistoryEntry"
                            }
                        }
                    }
                }
            }
        },
        "/main-data/tv-channels/tv-status/key-value": {
            "get": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Retrieves the list of statuses of TV channels",
                "description": "",
                "operationId": "statusesKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/tv-type/key-value": {
            "get": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Retrieves the list of statuses of TV channels",
                "description": "",
                "operationId": "typeKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tv-channels/{id}/planed-changes": {
            "get": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Gets planned changes for by given tv channel id",
                "description": "",
                "operationId": "plannedChanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TvChannelPlannedChange"
                        }
                    }
                }
            }
        },
        "/main-data/tv-channels/{id}/planed-changes/{date}": {
            "delete": {
                "tags": [
                    "main-datatv-channels"
                ],
                "summary": "Remove planned changes by given date - yyyy-MM-dd ",
                "description": "",
                "operationId": "deletePlannedChanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/failure-tv/report": {
            "post": {
                "tags": [
                    "main-datafailure-tv"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_72",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelFailureChannelsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/failure-tv": {
            "get": {
                "tags": [
                    "main-datafailure-tv"
                ],
                "summary": "Get defect tv by id",
                "description": "",
                "operationId": "getDefectTV",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Id defect",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datafailure-tv"
                ],
                "summary": "Creating a new channel failure",
                "description": "",
                "operationId": "saveOrUpdateChannelFailure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FailureChannelsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel failure created successfully"
                    },
                    "400": {
                        "description": "The channel failure was not created"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-datafailure-tv"
                ],
                "summary": "Remove channel failure",
                "description": "",
                "operationId": "deleteChannelFailure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Id channel failure",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/failure-tv/failures": {
            "post": {
                "tags": [
                    "main-datafailure-tv"
                ],
                "summary": "Get a list of channel failure",
                "description": "",
                "operationId": "getListChannelFailure",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FailureChannelsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/analog-tv-statuses/set-status": {
            "post": {
                "tags": [
                    "main-dataanalog-tv-statuses"
                ],
                "summary": "Set analog tv status",
                "description": "",
                "operationId": "setStatus_50",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/analog-tv-statuses/report": {
            "post": {
                "tags": [
                    "main-dataanalog-tv-statuses"
                ],
                "summary": "Get an excel report",
                "description": "",
                "operationId": "getReportExcel_73",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelCatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/analog-tv-statuses/save": {
            "post": {
                "tags": [
                    "main-dataanalog-tv-statuses"
                ],
                "summary": "Create an analog tv status",
                "description": "",
                "operationId": "saveStatus_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnalogTvStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/analog-tv-statuses": {
            "post": {
                "tags": [
                    "main-dataanalog-tv-statuses"
                ],
                "summary": "Provides information about analog tv status by name and date diapason",
                "description": "",
                "operationId": "searchStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/vat/set-default": {
            "post": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "save VAT Rate ",
                "description": "",
                "operationId": "setDefault",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The VAT",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VatRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Change default vat rate have got successfully"
                    },
                    "400": {
                        "description": "Can not change default vat rate "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/set-status": {
            "post": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "set  payment methods status.",
                "description": "",
                "operationId": "setStatus_51",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/vat/report": {
            "post": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_74",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelVatRateSearch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/vat/get-default-id": {
            "get": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Get default vat rate id",
                "description": "",
                "operationId": "getDefaultId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting default vat rate id have got successfully"
                    },
                    "400": {
                        "description": "Can not get default vat rate id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/rate-id-without-vat": {
            "get": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Get vat rate id without vat",
                "description": "",
                "operationId": "getWithoutVatId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting vat rate id without vat have got successfully"
                    },
                    "400": {
                        "description": "Can not get default vat rate id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/namewithrate": {
            "get": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Provides VAT Rate",
                "description": "",
                "operationId": "getVATNameWithRate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting vat have got successfully"
                    },
                    "400": {
                        "description": "Can not get vat "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/save": {
            "post": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "save VAT Rate ",
                "description": "",
                "operationId": "createVATRate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The VAT",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VatRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "save vat rate have got successfully"
                    },
                    "400": {
                        "description": "Can not save vat "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/key-value": {
            "get": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Provides VAT Rate keyvalue",
                "description": "",
                "operationId": "getVATRateKeyValues",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting keyvalue have got successfully"
                    },
                    "400": {
                        "description": "Can not get keyvalue "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat": {
            "post": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Provides VAT Rate",
                "description": "",
                "operationId": "getVATList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VatRateSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting vat have got successfully"
                    },
                    "400": {
                        "description": "Can not get vat "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/vat/{id}": {
            "get": {
                "tags": [
                    "main-datavat"
                ],
                "summary": "Provides VAT Rate by ID",
                "description": "",
                "operationId": "getVATRateById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed vat",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting vat by ID have got successfully"
                    },
                    "400": {
                        "description": "Can not get vat "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/work-kind/key-value": {
            "get": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Provides the work kind key-value.",
                "description": "",
                "operationId": "getKeyValue_5",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind/history": {
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Provides the list of a work kind params editing history.",
                "description": "",
                "operationId": "searchWorkKindsHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind/versions": {
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Getting versions for a work kind.",
                "description": "",
                "operationId": "getWorkKindVersions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkKindVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Remove a work kind version.",
                "description": "",
                "operationId": "dropWorkKindVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "versionId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "workKindId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind": {
            "get": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Provides the full information about a work kind by id.",
                "description": "",
                "operationId": "findWorkKindById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "versionId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "workKindId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Provides the list of work kinds.",
                "description": "",
                "operationId": "searchWorkKinds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkKindSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind/report": {
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getWorkKindReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelWorkKindSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind/set-status": {
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Set status of a work kind",
                "description": "",
                "operationId": "setWorkKind",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkKindStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/work-kind/save": {
            "post": {
                "tags": [
                    "main-datawork-kind"
                ],
                "summary": "Edit a work kind.",
                "description": "",
                "operationId": "saveWorkKind",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkKind"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/model/pdf/mietNr/{mietNr}/pdf": {
            "get": {
                "tags": [
                    "modelpdf"
                ],
                "summary": "provides the pdf files for display",
                "description": "",
                "operationId": "getPdf",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "mietNr",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Origin",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/files-settings": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getFilesSettings_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/goods-group": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getGoodsGroupKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/notice-types": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getNoticeTypesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/firmware-versions": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getFirmwareKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/notice-statuses": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getNoticeStatusesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/mailing-notifications/notice-statuses-search": {
            "get": {
                "tags": [
                    "main-datamailing-notifications"
                ],
                "operationId": "getStatesForNoticeSearchKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "summary": "",
                "description": "",
                "operationId": "searchSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MailingNotificationsSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/mailing-notifications/report": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "getSubscribersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMailingNotificationsSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications/handle-notice": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "handleNotice",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NoticeInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications/tp-for-subscriber": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "getTpListForSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TpListForSubscribersInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications/register-file": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "registerFiles_1",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MultipartFormDataInput"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications/upload-file": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "getFileById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-notifications/delete-file": {
            "post": {
                "tags": [
                    "mailing-notifications"
                ],
                "operationId": "deleteFiles_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteFileInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-sent-notifications/get-notice": {
            "get": {
                "tags": [
                    "mailing-sent-notifications"
                ],
                "operationId": "getNotice",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-sent-notifications/remove-notice": {
            "post": {
                "tags": [
                    "mailing-sent-notifications"
                ],
                "operationId": "removeNotice",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RemoveNoticeData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-sent-notifications": {
            "post": {
                "tags": [
                    "mailing-sent-notifications"
                ],
                "operationId": "searchSendNoticeSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MailingSentNotificationsSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mailing-sent-notifications/report": {
            "post": {
                "tags": [
                    "mailing-sent-notifications"
                ],
                "operationId": "getSendSubscribersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMailingSentNotificationsSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order/toir-depts": {
            "get": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Provides the list of TOIR departments.",
                "description": "",
                "operationId": "getToirDepts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order/toir-order-links": {
            "get": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Provides the list of order links.",
                "description": "",
                "operationId": "getToirOrderLinks",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "An ID of parent department",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order": {
            "post": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Provides the list of maintenance and repair orders.",
                "description": "",
                "operationId": "searchMaintenanceAndRepairOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MaintenanceAndRepairOrderSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order/report": {
            "post": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getMaintenanceAndRepairOrdersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelMaintenanceAndRepairOrderSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order/save": {
            "post": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Saving new maintenance and repair orders.",
                "description": "",
                "operationId": "getExecutorsSelection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MaintenanceAndRepairOrder"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/maintenance-and-repair-order/toir-employees": {
            "get": {
                "tags": [
                    "maintenance-and-repair-order"
                ],
                "summary": "Provides the list of executors.",
                "description": "",
                "operationId": "getToirEmployees",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "orderLinkId",
                        "in": "query",
                        "description": "An ID of parent order link",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/get-order-job": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders job",
                "description": "",
                "operationId": "getOrdersList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderJobSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders job have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders job"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-order-job-list": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders job list",
                "description": "",
                "operationId": "getOrdersPaginatedList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderJobSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders job list have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders job list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/set-order-job": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides  set orders job list",
                "description": "",
                "operationId": "setOrdersData",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create orders job  have got successfully"
                    },
                    "400": {
                        "description": "Can not create orders job "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/close-emergency-order/check": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Close single order",
                "description": "",
                "operationId": "checkOrdersClose",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CheckOrdersClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders close have got successfully"
                    },
                    "400": {
                        "description": "Can not close orders "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/execution/closeGroup": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Group orders close",
                "description": "",
                "operationId": "groupOrdersClose",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group orders close have got successfully"
                    },
                    "400": {
                        "description": "Can not close group orders "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/close-emergency-order": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Group orders close",
                "description": "",
                "operationId": "emergencyOrdersClose",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders close have got successfully"
                    },
                    "400": {
                        "description": "Can not close orders "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/set-material-work": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Set order material",
                "description": "",
                "operationId": "setOrdersMaterial",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersMaterial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set order material have got successfully"
                    },
                    "400": {
                        "description": "Can not set order material"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/set-closing-order-job": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "set orders job",
                "description": "",
                "operationId": "setOrdersJob",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersJobKind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set orders job have got successfully"
                    },
                    "400": {
                        "description": "Can not set orders job"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/close-single-order": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Close single order",
                "description": "",
                "operationId": "ordersSingleClose",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderSingleCloseDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders close have got successfully"
                    },
                    "400": {
                        "description": "Can not close orders "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/main-data/orders/order-links-by-dept": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of order links by department on date.",
                "description": "",
                "operationId": "getOrderLinksByDeptOnDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/order-links": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of order links.",
                "description": "",
                "operationId": "getOrderTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/employees": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of employees.",
                "description": "",
                "operationId": "getEmployees_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/order-reasons": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of order reasons.",
                "description": "",
                "operationId": "getOrderReasons",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/statuses/key-value": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of statuses.",
                "description": "",
                "operationId": "getOrderStatusesKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/work-types": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of work types.",
                "description": "",
                "operationId": "getWorkTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/cancel-close": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of cancel-close tsc order statuses.",
                "description": "",
                "operationId": "getTscOrderStatusesCancelCloseKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/orders/order-type-statuses": {
            "get": {
                "tags": [
                    "main-dataorders"
                ],
                "summary": "Provides the list of order type statuses.",
                "description": "",
                "operationId": "getOrderTypeStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/config": {
            "post": {
                "tags": [
                    "ordersconfig"
                ],
                "summary": "Provides configurations list",
                "description": "",
                "operationId": "getConfigList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersConfigDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting configurations listhave got successfully"
                    },
                    "400": {
                        "description": "Can not get configurations list "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/config/get-field-name": {
            "post": {
                "tags": [
                    "ordersconfig"
                ],
                "summary": "Provides configurations list",
                "description": "",
                "operationId": "getConfigNameList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersConfigDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting configurations listhave got successfully"
                    },
                    "400": {
                        "description": "Can not get configurations list "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/config/get-work-type": {
            "post": {
                "tags": [
                    "ordersconfig"
                ],
                "summary": "Provides work type list",
                "description": "",
                "operationId": "getWorType",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersWorkType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting work type thave got successfully"
                    },
                    "400": {
                        "description": "Can not get work type list "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/connect-tv": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides connected tv by id",
                "description": "",
                "operationId": "getConnectedTv",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersConnectTv"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provides connected tv by id"
                    },
                    "400": {
                        "description": "Can't provides connected tv by id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/material-work/employee-material": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides employee materials",
                "description": "",
                "operationId": "getEmployeeMaterialPaginatedList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeeMaterialSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting employee materials have got successfully"
                    },
                    "400": {
                        "description": "Can not get employee materials"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/material-work": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders materials",
                "description": "",
                "operationId": "getOrdersMaterialPaginatedList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersMaterialWorkSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders materials have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders materials"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/material-work/get-material-work": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders materials by Id",
                "description": "",
                "operationId": "getMaterialList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersMaterialWorkSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting materials by id have got successfully"
                    },
                    "400": {
                        "description": "Can not get materials by id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/material-work/save": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "save employee materials",
                "description": "",
                "operationId": "setEmployeeMaterial",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersMaterialWork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "save employee materials have got successfully"
                    },
                    "400": {
                        "description": "Can not save employee materials"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/material-work/drop-material/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Drop orders materials",
                "description": "",
                "operationId": "dropOrdersMaterial",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drop orders materials have got successfully"
                    },
                    "400": {
                        "description": "Can not drop orders materials"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/get-payment/report": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_75",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelConfirmPaymentSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file has been successfully got"
                    },
                    "400": {
                        "description": "Can not get excel file"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/set-non-cash": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Set orders for non cash payment confirmation list",
                "description": "",
                "operationId": "setOrdersPayNonCashConfirmation_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "OrdersPayConfirm data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfirmNonCash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order payment non cash confirmation has been saved successfully"
                    },
                    "400": {
                        "description": "Can not save order payment non cash confirmation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/cancel-order-by-id": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the cancel operation for orders",
                "description": "",
                "operationId": "cancelOrdersById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CancelOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order has been successfully canceled"
                    },
                    "400": {
                        "description": "Can not cancel order"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/pay-code": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of payment codes by ID",
                "description": "",
                "operationId": "getPayCodeTypesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PayCodeKeyValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paycode has been successfully got"
                    },
                    "400": {
                        "description": "Can not get paycode"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/set-comment-by-returned-order-id": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Set orders for cash payment confirmation list",
                "description": "",
                "operationId": "setDataForReturnOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "OrdersPayConfirm data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReturnOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return orders confirmation has been saved successfully"
                    },
                    "400": {
                        "description": "Can not save return orders confirmation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/get-comment-by-returned-order-id": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Get return orders list",
                "description": "",
                "operationId": "getDataForReturnOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReturnOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return orders has been get successfully"
                    },
                    "400": {
                        "description": "Can not get return orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/order-links-by-depts": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of ID and name of unit by department ID",
                "description": "",
                "operationId": "getUnitByDepartmentId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PartKeyValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ID and name of unit by department ID has been get successfully"
                    },
                    "400": {
                        "description": "Can not get list of ID and name of unit by department ID"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/executors-by-order-links": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of ID and name of worker by unit ID",
                "description": "",
                "operationId": "getWorkerByUnitId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkersKeyValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ID and name of workers by unit ID has been get successfully"
                    },
                    "400": {
                        "description": "Can not get list of ID and name of workers by unit ID"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/check-order": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Check is order canceled",
                "description": "",
                "operationId": "checkOrderCancelConfirm",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReturnOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled orders have been successfully got"
                    },
                    "400": {
                        "description": "Can not check canceled order"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/non-cash-types": {
            "get": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of payments confirmation types for non cash",
                "description": "",
                "operationId": "getOrdersPayNonCashConfirmationTypesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/payconfirm/cash-types": {
            "get": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of payments confirmation types for cash",
                "description": "",
                "operationId": "getOrdersPayCashConfirmationTypesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/payconfirm/payment-status": {
            "get": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of payment status types",
                "description": "",
                "operationId": "getPaymentStatusTypesList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/payconfirm/employees": {
            "get": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Provides the list of fitters",
                "description": "",
                "operationId": "getEmployeeList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/payconfirm/set-cash": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Set orders for cash payment confirmation list",
                "description": "",
                "operationId": "setOrdersPayCashConfirmation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "OrdersPayConfirm data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfirmCash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order payment cash confirmation has been saved successfully"
                    },
                    "400": {
                        "description": "Can not save order payment cash confirmation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/get-non-cash": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Get orders for non cash payment confirmation list",
                "description": "",
                "operationId": "getOrdersPayNonCashConfirmationList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ConfirmNonCash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order payment confirmation for non cash has been get successfully"
                    },
                    "400": {
                        "description": "Can not get order for non cash payment confirmation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/get-cash": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Get orders for cash payment confirmation list",
                "description": "",
                "operationId": "getOrdersPayCashConfirmationList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ConfirmCash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order payment confirmation for cash has been get successfully"
                    },
                    "400": {
                        "description": "Can not get order for cash payment confirmation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payconfirm/get-payment": {
            "post": {
                "tags": [
                    "orderspayconfirm"
                ],
                "summary": "Get payment confirmations list",
                "description": "",
                "operationId": "getPaymentConfirmationsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ConfirmPaymentSearchInputData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return payment confirmations list has been get successfully"
                    },
                    "400": {
                        "description": "Can not get payment confirmations list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-contract-by-subscr": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides contract and phone list",
                "description": "",
                "operationId": "getOrdersRelatedInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersContractDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting  contract and phone have got successfully"
                    },
                    "400": {
                        "description": "Can not get  contract and phone"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-contract-tariff-plans": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides order connect tp list",
                "description": "",
                "operationId": "getOrdersConnectTPList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersConnectTPSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting order connect tp have got successfully"
                    },
                    "400": {
                        "description": "Can not get order connect tp"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/registry/set-reflected": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Reflecting or cancelling tsc registry orders",
                "description": "",
                "operationId": "getTscOrdersRegistry",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscOrdersRegistryReflectionForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders reflected successfully"
                    },
                    "400": {
                        "description": "Can not reflect orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/registry": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides tsc orders registry list",
                "description": "",
                "operationId": "getTscOrdersRegistry_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscOrdersRegistrySearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-history": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get order history",
                "description": "",
                "operationId": "getHistory_5",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersHistorySearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting order history have got successfully"
                    },
                    "400": {
                        "description": "Can no getorder history"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders list",
                "description": "",
                "operationId": "getOrdersList_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-orders-data-by-order-ids": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders date->part->orderNum tree for orders ids",
                "description": "",
                "operationId": "getAssignExecutorsTreeForOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/get-short-data-list": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders list",
                "description": "",
                "operationId": "getOrdersShortDataList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersShortDataSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-tree-emergency-orders": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders list",
                "description": "",
                "operationId": "getOrdersTreeR1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmergencyOrdersSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-created-count": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "get count of orders in status created",
                "description": "",
                "operationId": "getCreatedCount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting orders count have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders count"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-order-work-type": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get department by house ",
                "description": "",
                "operationId": "getOrderWorkTypeList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersWorkTypeFullData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting department have got successfully"
                    },
                    "400": {
                        "description": "Can no tApprove order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/check-job-discount/call-center-data": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "check job discount",
                "description": "",
                "operationId": "getJobDiscountFlagCallCenter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersJobDiscountFlagData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked job disount"
                    },
                    "400": {
                        "description": "Can not check job discount"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-round": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "get rounded sums",
                "description": "",
                "operationId": "getRound",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SumsRounded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting rounded sums have got successfully"
                    },
                    "400": {
                        "description": "Can not get rounded sums"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/assign-executors": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders list",
                "description": "",
                "operationId": "getAssignExecutorsTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/save": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Create orders list",
                "description": "",
                "operationId": "setCommonOrder",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create orders have got successfully"
                    },
                    "400": {
                        "description": "Can not create orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/set-status": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Create orders list",
                "description": "",
                "operationId": "setOrderStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderStatusData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/get-tree-emergency-orders/report": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getTreeEmergencyOrdersReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelEmergencyOrdersSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/{id}/{sourceway}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides the full information about order by id",
                "description": "",
                "operationId": "getOrderById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sourceway",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found order"
                    },
                    "400": {
                        "description": "Can't retrieve the found order"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/job-code": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Return job codes list",
                "description": "",
                "operationId": "preCreateOrder",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job codes have got successfully"
                    },
                    "400": {
                        "description": "Can not get job codes"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/pre-create": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Create orders list",
                "description": "",
                "operationId": "preCreateOrder_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Orders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create orders have got successfully"
                    },
                    "400": {
                        "description": "Can not create orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/contract-tariff-plan-details": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides subscriber data for orders list",
                "description": "",
                "operationId": "getSubscriberDataList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberDataOrdersDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting subscriber data for orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get subscriber data for orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/registry/report": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getTscOrdersRegistryReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTscOrdersRegistrySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/execution/checkGroupClose": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Orders check",
                "description": "",
                "operationId": "checkOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders check have got successfully"
                    },
                    "400": {
                        "description": "Can no getOrders check"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-type": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Orders type",
                "description": "",
                "operationId": "getOrderTypeCallCenter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersTypeCallCenterDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders type for call center have got successfully"
                    },
                    "400": {
                        "description": "Can no get orders type for call center "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/check-exceptions": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Check orders exceptions",
                "description": "",
                "operationId": "checkOrdersExceptions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersCheckExceptionsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check orders exceptions have got successfully"
                    },
                    "400": {
                        "description": "Can not check orders exceptions "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/check-related-discounts": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "check related discounts",
                "description": "",
                "operationId": "checkDiscountsCompatibility",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersWorkTypeWithDiscount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked disounts"
                    },
                    "400": {
                        "description": "Can not check discounts"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-related-discount": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides department list",
                "description": "",
                "operationId": "getRelatedDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting   department list got successfully"
                    },
                    "400": {
                        "description": "Can not get   department list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/approve": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Approve order ",
                "description": "",
                "operationId": "approveOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersApproveDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Approve order have got successfully"
                    },
                    "400": {
                        "description": "Can no tApprove order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-reasons-by-type": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Getting reason by type ",
                "description": "",
                "operationId": "getOrderReason",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderReasonType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting reason have got successfully"
                    },
                    "400": {
                        "description": "Can no get reason order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-tp-by-discount": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "get tariff plans for discount",
                "description": "",
                "operationId": "getTpByDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TpForEncumbranceDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting tariff plans for discount have got successfully"
                    },
                    "400": {
                        "description": "Can not get tariff plans for discount"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/convert-orders-in-status-created": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "convert orders in status created",
                "description": "",
                "operationId": "convertOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Converting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not convert orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/tariff-plans/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Searches subscribers list of tariff plans by subscriber id and returns list of information",
                "description": "",
                "operationId": "getSubscriberTPById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The searching tp by subscribers",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/create-custom-field": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Create orders custom field",
                "description": "",
                "operationId": "setOrderCustomField",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Orders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create orders custom field have got successfully"
                    },
                    "400": {
                        "description": "Can not create orders custom field"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-sum-with-discounts-no-vat": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides discount keyvalue by work",
                "description": "",
                "operationId": "getDiscountByWork",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersDiscountData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting  discount keyvalue by work have got successfully"
                    },
                    "400": {
                        "description": "Can not get  discount keyvalue by work"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/mockDiscount": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides related discount keyvalue by work",
                "description": "",
                "operationId": "getRelatedDiscountById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountCommon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting  related discount keyvalue by work have got successfully"
                    },
                    "400": {
                        "description": "Can not get  related discount keyvalue by work"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-job-type": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides job type by orders id",
                "description": "",
                "operationId": "getJobType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersJobTypesDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting  job type by orders id have got successfully"
                    },
                    "400": {
                        "description": "Can not get  job type by orders id"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/payment-type/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Getting payment type's types.",
                "description": "",
                "operationId": "getPaymentType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/dept-list": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides department list",
                "description": "",
                "operationId": "getDept",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersDeptSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting   department list got successfully"
                    },
                    "400": {
                        "description": "Can not get   department list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/check-job-discount": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "check job discount",
                "description": "",
                "operationId": "getJobDiscountFlag",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersJobDiscountFlagData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked job disount"
                    },
                    "400": {
                        "description": "Can not check job discount"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/execution": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides a tsc orders execution tree",
                "description": "",
                "operationId": "getTscOrdersExecution",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscOrdersExecutionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/execution/report": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getTscOrdersExecutionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTscOrdersExecutionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/work-result": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides a tsc orders work result tree",
                "description": "",
                "operationId": "getTscOrdersWorkResult",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TscOrdersWorkResultSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/work-result/report": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getTscOrdersWorkResultReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTscOrdersWorkResultSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/assign-executors/report": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getAssignExecutorsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrdersSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/current-mol-group": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides mol group keyvalue",
                "description": "",
                "operationId": "getMolGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Getting  mol group keyvalue have got successfully"
                    },
                    "400": {
                        "description": "Can not get  mol group keyvalue"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-related-discount/cto": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides department list",
                "description": "",
                "operationId": "getRelatedDiscountCTO",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscountDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting   department list got successfully"
                    },
                    "400": {
                        "description": "Can not get   department list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/drop-canceled-order": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Drop canceled order ",
                "description": "",
                "operationId": "dropCanceledOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersCanceledDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drop canceled order have got successfully"
                    },
                    "400": {
                        "description": "Can not Drop canceled order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/disc": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Approve order ",
                "description": "",
                "operationId": "jobDiscOrders",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersJobDiscount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Approve order have got successfully"
                    },
                    "400": {
                        "description": "Can no tApprove order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-dept-by-house": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get department by house ",
                "description": "",
                "operationId": "getODeptByHouseType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersDeptDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting department have got successfully"
                    },
                    "400": {
                        "description": "Can no tApprove order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-order-suitable-discount": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Get suitable discount ",
                "description": "",
                "operationId": "getSuitableDiscount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersSuitableDiscount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting suitable discount have got successfully"
                    },
                    "400": {
                        "description": "Can no get SuitableDiscount order "
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type/reason-canceled": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides key value about reason cancel",
                "description": "",
                "operationId": "searchByName_4",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CatalogSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/key-values/orders/type/get-info-work-type": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides work type information",
                "description": "",
                "operationId": "getRelatedInfoWorkType",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersRelatedInfoDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting work type information have got successfully"
                    },
                    "400": {
                        "description": "Can not get work type information"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type/get-info-reason": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides reason information",
                "description": "",
                "operationId": "getRelatedInfoReason",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersRelatedInfoDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting reason information have got successfully"
                    },
                    "400": {
                        "description": "Can not get reason information"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type/get-info-deptpart": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides dept part information",
                "description": "",
                "operationId": "getRelatedInfoDeptPart",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersRelatedInfoDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting dept part information have got successfully"
                    },
                    "400": {
                        "description": "Can not get dept part information"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type/reason": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides key value reasons",
                "description": "",
                "operationId": "getReasonKeyValue",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersTypeKeyVal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting key value reasons have got successfully"
                    },
                    "400": {
                        "description": "Can not get key value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides key value orders",
                "description": "",
                "operationId": "getKeyValue_6",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersTypeKeyVal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting key value orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get key value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/key-values/orders/type/order-transfer": {
            "post": {
                "tags": [
                    "key-valuesorderstype"
                ],
                "summary": "Provides key value transfer",
                "description": "",
                "operationId": "getTransferKeyValue",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersTypeKeyVal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting key value orders transfer have got successfully"
                    },
                    "400": {
                        "description": "Can not get key value"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/get-order-worker": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders job",
                "description": "",
                "operationId": "getOrdersWorkerList",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrdersWorkerSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders job have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders job"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/work-load": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides orders list",
                "description": "",
                "operationId": "getWorkLoad",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting orders have got successfully"
                    },
                    "400": {
                        "description": "Can not get orders"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/orders/parts-work-load": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Provides parts work load",
                "description": "",
                "operationId": "getPartsWorkLoad",
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PartsWorkLoadSearchData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting parts work load have got successfully"
                    },
                    "400": {
                        "description": "Can not get parts work load"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/link-configurator/versions": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "get order link versions",
                "description": "",
                "operationId": "getVersions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLinkVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "delete an inactive order link version",
                "description": "",
                "operationId": "deleteVersion_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "versionId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "orderLinkId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_76",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderLinkSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/order-types": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Provides the list of order typed for order links.",
                "description": "",
                "operationId": "getOrderTypePaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLinkOrderTypeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator": {
            "get": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Getting particular order link by id.",
                "description": "",
                "operationId": "getOrderLink_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "versionId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "orderLinkId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Provides the list of order links.",
                "description": "",
                "operationId": "searchOrderLinks",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLinkSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Delete of an order link",
                "description": "",
                "operationId": "deleteOrderLink",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLinkDeleteForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/dept-version/{id}": {
            "get": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Getting particular order department version id by department id.",
                "description": "",
                "operationId": "getOrderLink",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/employee": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Provides the list of employees for order links.",
                "description": "",
                "operationId": "getEmployeePaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLinkEmployeeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/versions/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getVersionsReportExcel_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderLinkVersionSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/get-part-order": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Retrieves order part",
                "description": "",
                "operationId": "getPartForOrder",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkPartForOrder"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/save": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Edit an order link",
                "description": "",
                "operationId": "setOrderLink",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLink"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/get-part-by-date": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Retrieves part by id and date",
                "description": "",
                "operationId": "getPartByDate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkPartForOrder"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/employee/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getEmployeePaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderLinkEmployeeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/order-types/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getOrderTypePaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderLinkOrderTypeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/addresses": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Provides the list of an order link linked houses.",
                "description": "",
                "operationId": "getHousePaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderAddressTreeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/addresses/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getHouseReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderAddressTreeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/history": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Getting particular order link parameters history list by id.",
                "description": "",
                "operationId": "getParamHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/history/report": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getHistoryReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/link-configurator/order-part-house": {
            "post": {
                "tags": [
                    "link-configurator"
                ],
                "summary": "Retrieves linked house types in tree format",
                "description": "",
                "operationId": "getLinkedHouseTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderPartHouse"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/report": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_77",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderTypeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/{id}": {
            "get": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Getting a particular order type by id.",
                "description": "",
                "operationId": "getOrderLink_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Provides the list of order types.",
                "description": "",
                "operationId": "searchOrderLinks_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/set-status": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Set status of an order type",
                "description": "",
                "operationId": "setOrderLink_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/save": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Edit an order type",
                "description": "",
                "operationId": "setOrderLink_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderType"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/departments": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Provides the list of employees for order types.",
                "description": "",
                "operationId": "getDepartmentPaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/departments/report": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getDepartmentPaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/reasons": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Provides the list of order reasons for order types.",
                "description": "",
                "operationId": "getReasonPaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/reasons/report": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getReasonPaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/work-kinds": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Provides the list of work kinds for order types.",
                "description": "",
                "operationId": "getWorkPaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/work-kinds/report": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getWorkPaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/marks": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Provides the list of order marks for order types.",
                "description": "",
                "operationId": "geMarkPaginatedList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order-type-configurator/marks/report": {
            "post": {
                "tags": [
                    "order-type-configurator"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getMarkPaginatedListReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelOrderTypeKeyValueSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/promised-payment/oper-names": {
            "get": {
                "tags": [
                    "main-datapromised-payment"
                ],
                "summary": "Provides the list of operation names.",
                "description": "",
                "operationId": "getOperNames",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/contracts/{id}": {
            "get": {
                "tags": [
                    "promised-payment"
                ],
                "summary": "Provides the list of subscriber contracts.",
                "description": "",
                "operationId": "findContractsByAccId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the personal account",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/{id}": {
            "get": {
                "tags": [
                    "promised-payment"
                ],
                "summary": "Provides the full information about a subscriber account by id.",
                "description": "",
                "operationId": "findSubscrInfoByAccId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the personal account",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/history": {
            "post": {
                "tags": [
                    "promised-payment"
                ],
                "summary": "Provides the list of promised payments history.",
                "description": "",
                "operationId": "searchPromisedPaymentsHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PromisedPaymentHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/history/report": {
            "post": {
                "tags": [
                    "promised-payment"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getPromisedPaymentsHistoryReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPromisedPaymentHistorySearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/save": {
            "post": {
                "tags": [
                    "promised-payment"
                ],
                "summary": "Create a promised payment.",
                "description": "",
                "operationId": "savePromisedPayment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PromisedPaymentCreation"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/report": {
            "post": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_78",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelAvailableAmountSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/params/save": {
            "post": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Setting a promised payment term and min interval.",
                "description": "",
                "operationId": "setTerm",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AvailableAmountParams"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/term": {
            "get": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Getting a promised payment term.",
                "description": "",
                "operationId": "getTerm",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/min-interval": {
            "get": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Getting a promised payment min interval.",
                "description": "",
                "operationId": "getMinInterval",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/{id}": {
            "get": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Provides the full information about an available amount by id.",
                "description": "",
                "operationId": "findAvailableAmountById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/search": {
            "get": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Provides the list of existing available amounts.",
                "description": "",
                "operationId": "getAvailableAmountsList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/promised-payment/available-amount/save": {
            "post": {
                "tags": [
                    "promised-paymentavailable-amount"
                ],
                "summary": "Create an available amount.",
                "description": "",
                "operationId": "setAvailableAmount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AvailableAmount"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/automatic-payment-requirements/set-auto": {
            "post": {
                "tags": [
                    "automatic-payment-requirements"
                ],
                "summary": "",
                "description": "Misha Lazarenka",
                "operationId": "setAuto",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SetAutoData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/automatic-payment-requirements": {
            "post": {
                "tags": [
                    "automatic-payment-requirements"
                ],
                "summary": "Get list of automatic formation payment requirements",
                "description": "Misha Lazarenka",
                "operationId": "getPaymentRequirements",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentRequirementsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/automatic-payment-requirements/report": {
            "post": {
                "tags": [
                    "automatic-payment-requirements"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getPaymentRequirementsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPaymentRequirementsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/payment-requirements/upload": {
            "post": {
                "tags": [
                    "payment-requirements"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "uploadPaymentRequirements",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentRequirement"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/history-personal-account-operations/report": {
            "post": {
                "tags": [
                    "history-personal-account-operations"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_79",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistoryPersonalAccExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/history-personal-account-operations": {
            "post": {
                "tags": [
                    "history-personal-account-operations"
                ],
                "summary": "get personal account operations by the search data.",
                "description": "",
                "operationId": "getHistoryPersonalAccountOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistoryPersonalAccExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/encumbrances": {
            "post": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Getting the key-value list of encumbrances",
                "description": "",
                "operationId": "getEncumbranceKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EncumbranceKeyValueSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/contract-tps/{id}": {
            "get": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Provides the contract tps list by account id",
                "description": "",
                "operationId": "getContractTpsKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/bonuses": {
            "post": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Getting the key-value list of bonuses",
                "description": "",
                "operationId": "getBonuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusKeyValueSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/bonus-types": {
            "post": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Getting the key-value list of bonus types",
                "description": "",
                "operationId": "getBonusTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BonusTypeKeyValueSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/oper-source": {
            "get": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Provides the list of rounding methods.",
                "description": "",
                "operationId": "getOperSource",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/personal-account/order-key-val/{id}": {
            "get": {
                "tags": [
                    "main-datapersonal-account"
                ],
                "summary": "Provides the orders list by contract id",
                "description": "",
                "operationId": "getOrdersByContractId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/set-status": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Set a status",
                "description": "",
                "operationId": "setStatus_52",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_80",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPersonalAccountDtoSearch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/subscribers/save": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Saving of a subscriber personal account",
                "description": "",
                "operationId": "saveSubscriberAccount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccount"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/source-id": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "getSourceId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/{id}/balance": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Provides with information about subscriber account balances.",
                "description": "",
                "operationId": "getSubscriberAccountBalances",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/broker/save": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "saveBrokerAccount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/contract-info": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting the personal account's contract information by the subscriber and contract id.",
                "description": "",
                "operationId": "getSubscriberAccountsBySubscriberAndContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/broker/{id}": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "findAccountByBrokerId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The broker id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/key-value": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Provides the list of all personal accounts by subscriber id",
                "description": "",
                "operationId": "getAllPersonalAccountsById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "subscrId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/amount-promised-payment": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting amount of promised payment by personal account id.",
                "description": "",
                "operationId": "getAmountPromisedPayment",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "personalAccountId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/{id}": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Finding a personal account by the id",
                "description": "",
                "operationId": "findAccountById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/{id}/common-info": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting the personal account's common information by the id.",
                "description": "",
                "operationId": "getCommonInformation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation-kind": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "getOperationKindByNameGroup",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OperationGroupModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/accounts-by-id": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Finding personal accounts by a subscriber id",
                "description": "",
                "operationId": "findAllSubscriberAccountsById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscrPersonalAccountsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/connect": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "connectBonuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/disable-list": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Provides the list of bonuses to disable",
                "description": "",
                "operationId": "getBonusesToDisable",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/disable": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "operationId": "disableBonuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonusDisableData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/info/{id}": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get bonus operation info by bonusOperId",
                "description": "",
                "operationId": "getBonusOperParams",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/edit-oper": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Edit bonus oper",
                "description": "",
                "operationId": "editBonusOper",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonusEditData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/handling-list": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Retrieve personal account handling list",
                "description": "",
                "operationId": "getPersonalAccountHandlingList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountHandlingSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved information"
                    },
                    "400": {
                        "description": "Can not retrieve information"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/personal-account/changes": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Retrieves the list of history of bonuses changes",
                "description": "",
                "operationId": "getBonusesChanges",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/changes/cancel": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Cancel bonuses changes",
                "description": "",
                "operationId": "setBonusCancelStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectStatus"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/changes/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report for bonuses changes",
                "description": "",
                "operationId": "getBonusesChangesReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPersonalAccountBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/changes/linked-docs": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Retrieves the list of bonuses changes linked docs",
                "description": "",
                "operationId": "getBonusesChangesLinkedDocs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountBonusOperLinkedDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/accounts-by-id/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getAllSubscriberAccountsByIdReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscrPersonalAccountsSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Finding personal accounts by the search data.",
                "description": "",
                "operationId": "findPersonalAccount",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountDtoSearch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/changes/linked-docs/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report for bonuses changes linked docs",
                "description": "",
                "operationId": "getBonusesChangesLinkedDocsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPersonalAccountBonusOperLinkedDocSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/disable-list/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getBonusesToDisableReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPersonalAccountBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/bonuses/account-info/{id}": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get account info",
                "description": "",
                "operationId": "getAccountInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed account",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/{id}/balance/detailed": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Provides with information about account balance.",
                "description": "",
                "operationId": "getDetailedPersonalAccountBalance",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "balanceType",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "brokerBalanceKind",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting the list of operations for correction",
                "description": "",
                "operationId": "getOperationForCorrection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccOperationForCorrExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation/save": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Save a custom and correction, change an account in correction.",
                "description": "",
                "operationId": "Alena Ulchyts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountChangeAccountData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/balance-operation": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting a balance and a list of personal account operations by the search data.",
                "description": "",
                "operationId": "getPersonalAccountOperation",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getOperationForCorrectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccOperationForCorrExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation/correction/parameters/{id}": {
            "get": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Getting the parameters for the correction operation by the id",
                "description": "",
                "operationId": "getCorrectionParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/balance-operation/report": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getDetailedPersonalAccountBalanceReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountExportModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personal-account/operation/update": {
            "post": {
                "tags": [
                    "personal-account"
                ],
                "summary": "Update operation info",
                "description": "",
                "operationId": "updateOperInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonalAccountOperUpdateData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/prepayment-invoices/bank-acc-by-subscr/key-value": {
            "get": {
                "tags": [
                    "main-dataprepayment-invoices"
                ],
                "summary": "Provides the bank key-values by bank account",
                "description": "",
                "operationId": "getBankAccBySubscr",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/prepayment-invoices/bank-acc-by-contract/key-value": {
            "get": {
                "tags": [
                    "main-dataprepayment-invoices"
                ],
                "summary": "Provides the bank key-values by contract",
                "description": "",
                "operationId": "getBankAccByContract",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/prepayment-invoices/status": {
            "get": {
                "tags": [
                    "main-dataprepayment-invoices"
                ],
                "summary": "Provides the list of prepayment invoice statuses.",
                "description": "",
                "operationId": "getInvoiceStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/prepayment-invoices/payment-method": {
            "get": {
                "tags": [
                    "main-dataprepayment-invoices"
                ],
                "summary": "Provides the list of prepayment invoice payment methods.",
                "description": "",
                "operationId": "getPaymentMethods_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/prepayment-invoices/bank-by-acc/key-value": {
            "get": {
                "tags": [
                    "main-dataprepayment-invoices"
                ],
                "summary": "Provides the bank key-values by bank account",
                "description": "",
                "operationId": "getBankKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/job/search": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the list of jobs.",
                "description": "",
                "operationId": "searchJob",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataAddingJobSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/save": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Set prepay bill",
                "description": "",
                "operationId": "setPrepayBill",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PrepayBillUpdateData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/service/search": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the list of services.",
                "description": "",
                "operationId": "searchService",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataAddingServiceSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/vat/key-value": {
            "get": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the vat key value for prepayment invoice.",
                "description": "",
                "operationId": "getVatKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/details": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the full information about a prepayment invoice by id.",
                "description": "",
                "operationId": "getPrepaymentInvoiceById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PrepaymentInvoiceDetailsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the list of existing prepayment invoices.",
                "description": "",
                "operationId": "searchPrepaymentInvoices",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PrepaymentInvoiceSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/history": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Provides the history oh the prepayment invoice.",
                "description": "",
                "operationId": "getPrepaymentInvoiceHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PrepaymentInvoiceDetailsSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/set-status": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Annul or confirm a prepayment invoice.",
                "description": "",
                "operationId": "annulPrepaymentInvoice",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PrepaymentInvoiceStatusDataPrepaymentInvoiceSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/prepayment-invoices/report": {
            "post": {
                "tags": [
                    "prepayment-invoices"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getPrepaymentInvoiceReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelPrepaymentInvoiceSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations/report": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_81",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelRecalculationSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations/set-recalculation": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "operationId": "setRecalculationError",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RecalculationSetData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations/vat-rates": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "operationId": "getVatRates",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VatRateSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations/get-vat-rate-id": {
            "get": {
                "tags": [
                    "recalculations"
                ],
                "operationId": "getVatRate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "summary": "Provides the list recalculations",
                "description": "",
                "operationId": "getRecalculations",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RecalculationSearchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found recalculations"
                    },
                    "400": {
                        "description": "Can't retrieve the found set of recalculations"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/recalculations/save": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "summary": "Create new recalculation",
                "description": "",
                "operationId": "setRecalculation_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Recalculation data transfer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Recalculation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recalculation saved successfully"
                    },
                    "400": {
                        "description": "Can not saved recalculation"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/recalculations/get-recalculation": {
            "post": {
                "tags": [
                    "recalculations"
                ],
                "operationId": "getRecalculationError",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RecalculationData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/recalculations/get-tariff-plans": {
            "get": {
                "tags": [
                    "recalculations"
                ],
                "operationId": "getTpsByContractId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "contractId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/debtor/doc-types": {
            "get": {
                "tags": [
                    "main-datadebtor"
                ],
                "summary": "Provides the list of dedt document types.",
                "description": "",
                "operationId": "getDocTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/debtor/doc-kinds": {
            "get": {
                "tags": [
                    "main-datadebtor"
                ],
                "summary": "Provides the list of dedt document kinds.",
                "description": "",
                "operationId": "getDocKinds",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/get-file": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Get jasper document",
                "description": "",
                "operationId": "getFile_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperFileSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/send-emails": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "operationId": "sendEmails",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SelectedObjectDataDebtDocumentSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/save": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Saving or editing debt document details.",
                "description": "",
                "operationId": "setDebtDocumentDetails",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DebtDocumentDetails"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/send-email": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "operationId": "sendEmail_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DebtEmails"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/schedule-recount": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Recount schedule",
                "description": "",
                "operationId": "recountSchedule",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DebtSchedule"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/generate-document": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Generates jasper document. ",
                "description": "",
                "operationId": "generateDocument_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/history": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Provides the list of debt documents.",
                "description": "",
                "operationId": "searchDebtDocuments",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DebtDocumentSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Provides the list of debtors.",
                "description": "",
                "operationId": "searchDebtors",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DebtorSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/report": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getDebtDocumentsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDebtorSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/debtor/history/report": {
            "post": {
                "tags": [
                    "debtor"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getDebtorsReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelDebtDocumentSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/generate-room-card-report/{houseId}/{roomId}": {
            "post": {
                "tags": [
                    "generate-room-card-report"
                ],
                "operationId": "generate",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "houseId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/rounding-config/method": {
            "get": {
                "tags": [
                    "main-datarounding-config"
                ],
                "summary": "Provides the list of rounding methods.",
                "description": "",
                "operationId": "getRoundMethods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/rounding-config/precision": {
            "get": {
                "tags": [
                    "main-datarounding-config"
                ],
                "summary": "Provides the list of rounding precisions.",
                "description": "",
                "operationId": "getRoundPrecisions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/rounding-config/rule": {
            "get": {
                "tags": [
                    "main-datarounding-config"
                ],
                "summary": "Provides the list of rounding payment rules.",
                "description": "",
                "operationId": "getRoundRules",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/history/report": {
            "post": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getRoundingConfigHistoryReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config": {
            "post": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Provides the list of rounding configurations.",
                "description": "",
                "operationId": "searchRoundingConfigs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoundingConfigSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/history": {
            "post": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Provides the list of a rounding configuration params editing history.",
                "description": "",
                "operationId": "searchRoundingConfigsHistory",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/planned/{id}": {
            "get": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Getting planned rounding configurations.",
                "description": "",
                "operationId": "getPlannedRoundingConfigs",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Remove a planned rounding configuration.",
                "description": "",
                "operationId": "dropPlannedRoundingConfig",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/{id}": {
            "get": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Provides the full information about a rounding configuration by id.",
                "description": "",
                "operationId": "findRoundingConfigById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/report": {
            "post": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getRoundingConfigReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelRoundingConfigSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/rounding-config/save": {
            "post": {
                "tags": [
                    "rounding-config"
                ],
                "summary": "Edit a rounding configuration.",
                "description": "",
                "operationId": "saveRoundingConfig",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoundingConfig"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/short-data/save": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Creates new subscriber for call-center, sends back new id",
                "description": "",
                "operationId": "createSubscriberCallCenter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberShortData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/phone-numbers/{id}": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides the list of phone number by subscriber id",
                "description": "",
                "operationId": "getPhoneNumbersBySubscriberId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/notifications/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getNotificationSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/recourses/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getRecoursesSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/blockings": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the blockings information about subscriber by id",
                "description": "",
                "operationId": "getBlockingsSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/blockings/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getBlockingsSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/bonuses": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides the bonuses information about subscriber",
                "description": "",
                "operationId": "getBonusSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/bonuses/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getBonusSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberBonusSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/discounts": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the discounts information about subscriber by id",
                "description": "",
                "operationId": "getDiscountsSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/discounts/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getDiscountsSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberDiscountSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/encumbrances": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the encumbrance information by subscriber or contract id",
                "description": "",
                "operationId": "getEncumbranceSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberEncumbrancesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/encumbrances/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getEncumbrancesSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberEncumbrancesSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/equipment": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the equipment information about subscriber by id",
                "description": "",
                "operationId": "getEquipmentSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/equipment/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getEquipmentSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/tariff-plans": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the tariff plan information about subscriber by id",
                "description": "",
                "operationId": "getTariffPlanSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/tariff-plans/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getTariffPlanSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/{id}": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the general information about subscriber by id",
                "description": "",
                "operationId": "getGeneralInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/save": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Saves the updated general information about subscriber by id",
                "description": "",
                "operationId": "saveGeneralInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscriber"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/addresses": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the address information about subscriber by id",
                "description": "",
                "operationId": "getAddressSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/addresses/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getAddressSectionReportExcel_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/contract": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the contract information about subscriber by id",
                "description": "",
                "operationId": "getContractSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/contract/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getContractSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberContractSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/notifications": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the notifications information about subscriber by id",
                "description": "",
                "operationId": "getNotificationSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/recourses": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the recourses (appeals) information about subscriber by id",
                "description": "",
                "operationId": "getRecourseSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Creates new subscriber, sends back new id",
                "description": "",
                "operationId": "createSubscriber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscriber"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/orders": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the orders information by subscriber id",
                "description": "",
                "operationId": "getOrdersSection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/orders/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getOrdersSectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchDataById"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/history": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Searches subscriber history by parameters and returns brief information",
                "description": "",
                "operationId": "getHistorySection",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/history/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Retrieves an formed excel report by section-containing information",
                "description": "",
                "operationId": "getHistorySectionReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/get-subscriber-array-data-by-ids": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides subscriber data for 2.6 report tree",
                "description": "",
                "operationId": "getAssignExecutorsTreeForSubscribers",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JasperTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/{id}/photo": {
            "get": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Provides with the subscriber's photo by id",
                "description": "",
                "operationId": "getPhoto",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "image/jpeg"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Saves the subscriber's photo by id",
                "description": "",
                "operationId": "savePhoto",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/link": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Linking and unlinking subscribers with subscriber groups.",
                "description": "",
                "operationId": "linkSubscribers_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkSubscriberDataSubscriberSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/countries": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual countries using in the system",
                "description": "",
                "operationId": "getCountry",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/document-types": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual document types using in the system",
                "description": "",
                "operationId": "getDocument",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/subscr-types": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual subscriber types in the system",
                "description": "",
                "operationId": "getSubscriberTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/subscr-status": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual subscriber statuses in the system",
                "description": "",
                "operationId": "getSubscriberStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/departments": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual departments using in the current system",
                "description": "",
                "operationId": "getDepartments_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/subscr-groups": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual subscriber groups using in the current system",
                "description": "",
                "operationId": "getSubscriberGroups",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/subgroup-types": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual subscriber subgroup types in system",
                "description": "",
                "operationId": "getSubgroupTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/blocking-statuses": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual blocking statuses using in the current system",
                "description": "",
                "operationId": "getBlockingStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/mail-delivery-types": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual mail delivery types using in the current system",
                "description": "",
                "operationId": "getMailDeliveryTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/migration-bases": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual migration bases using in the system",
                "description": "",
                "operationId": "getMigrationBase",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/languages": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual languages using in the system",
                "description": "",
                "operationId": "getLang",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/residents": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual resident variants in system",
                "description": "",
                "operationId": "getResident",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/subscr-categories": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual subscriber categories using in the system",
                "description": "",
                "operationId": "getCategories",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "withArchive",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/subscribers/sexes": {
            "get": {
                "tags": [
                    "main-datasubscribers"
                ],
                "summary": "Provides the list of actual sex types in system",
                "description": "",
                "operationId": "getSex",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/report": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Returns an excel report",
                "description": "",
                "operationId": "getReportExcel_82",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelSubscriberSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/tariff-plans/main-tp": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Searches subscribers list of main tariff plans by tp id and contract id and returns list of data",
                "description": "",
                "operationId": "getSubscriberMainTp",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberMainTpSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/short-data": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Searches subscriber by parameters and returns short list of information",
                "description": "",
                "operationId": "getShortList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The searching subscribers",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberSearchShortData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/tariff-plans/call-center-data": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Searches subscribers list of tariff plans by subscriber id and returns list of information",
                "description": "",
                "operationId": "getSubscriberTPById_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The searching subscribers",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberSearchTPData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/call-center-data": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Search subscriber by parameters and returns list of information for call canter",
                "description": "",
                "operationId": "getListForCallCenter",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The searching subscribers",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberCallCenterSearch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/search": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Searches subscriber by parameters and returns brief information",
                "description": "",
                "operationId": "findSubscriber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The searching materials",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscriberSearchFormData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/elastic-search": {
            "post": {
                "tags": [
                    "subscribers"
                ],
                "summary": "Used for elastic search of subscribers",
                "description": "",
                "operationId": "elasticFindSubscriber",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ElasticSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/additional-service-settings/versions/report": {
            "post": {
                "tags": [
                    "tariff-planadditional-service-settings"
                ],
                "summary": "Get an excel house report.",
                "description": "",
                "operationId": "getReportExcel_83",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/additional-service-settings/versions": {
            "post": {
                "tags": [
                    "tariff-planadditional-service-settings"
                ],
                "summary": "Get additional settings version list",
                "description": "",
                "operationId": "getVersionList_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/additional-service-settings": {
            "get": {
                "tags": [
                    "tariff-planadditional-service-settings"
                ],
                "summary": "Get additional service settings config list",
                "description": "",
                "operationId": "getConfigList_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "tariff-planadditional-service-settings"
                ],
                "summary": "Set additional service settings config list",
                "description": "",
                "operationId": "setConfigList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AdditionalServiceRow"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/versions": {
            "post": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Versions list",
                "description": "",
                "operationId": "getVersions_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/tp-cost": {
            "post": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Cost of transfer to any chosen tariff plan",
                "description": "",
                "operationId": "getTariffPlanList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CostMatrixSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/versions/report": {
            "post": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Get an excel cost matrix version report.",
                "description": "",
                "operationId": "getReportExcel_84",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/default-cost": {
            "post": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Cost of transfer to any chosen tariff plan",
                "description": "",
                "operationId": "getDefaultCostList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KeyId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/save": {
            "post": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Adds new version of cost matrix",
                "description": "",
                "operationId": "setCostMatrix",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CostMatrix"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix": {
            "get": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Parameters of cost matrix version, if versionId is null, returns actual version",
                "description": "",
                "operationId": "getCostMatrix",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/cost-matrix/{id}": {
            "delete": {
                "tags": [
                    "tariff-plancost-matrix"
                ],
                "summary": "Deleting a cost matrix version",
                "description": "",
                "operationId": "dropCostMatrixVersion",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/interaction-matrix/versions": {
            "post": {
                "tags": [
                    "tariff-planinteraction-matrix"
                ],
                "summary": "Get versions of interaction matrix",
                "description": "",
                "operationId": "getVersions_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/interaction-matrix": {
            "get": {
                "tags": [
                    "tariff-planinteraction-matrix"
                ],
                "summary": "Get tariff plan interaction matrix",
                "description": "",
                "operationId": "get_4",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/interaction-matrix/save": {
            "post": {
                "tags": [
                    "tariff-planinteraction-matrix"
                ],
                "summary": "Save tariff plan new interaction matrix",
                "description": "",
                "operationId": "save_10",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Matrix"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/interaction-matrix/versions/report": {
            "post": {
                "tags": [
                    "tariff-planinteraction-matrix"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_85",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/base-units": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual base units of tariff plans in system",
                "description": "",
                "operationId": "getBaseUnits_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "inetTarifficationTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "tarifficationTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/templates-by-contracts": {
            "post": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "KeyVal tariff plan templates by contracts",
                "description": "",
                "operationId": "getTariffPlanTemplatesByContracts",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/credit-limit-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available credit limit types",
                "description": "",
                "operationId": "getCreditLimitTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/dtv-access-criteria": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of access criteria of digital TV",
                "description": "",
                "operationId": "getDtvAccessCriteria",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/fee-modes": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available fee modes",
                "description": "",
                "operationId": "getFeeModes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/sale-type": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available sell types of goods",
                "description": "",
                "operationId": "getGoodsSellTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/internet-tariffication-type": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of all possible values of tariffication types",
                "description": "",
                "operationId": "getInternetTarifficationTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/payment-term-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available payment term types",
                "description": "",
                "operationId": "getPaymentTermTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/lock-limit-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of lock limit types of tariff plan",
                "description": "",
                "operationId": "getLockLimitTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/payment-type": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available payment types",
                "description": "",
                "operationId": "getPaymentTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/period-measures": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of time period measures for tariff plan of requested activity type",
                "description": "",
                "operationId": "getPeriodMeasures",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "description": "An ID of parent activity type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/traff-speed-measures": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual speed units in system",
                "description": "",
                "operationId": "getSpeedUnits",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/key-value": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of all tariff plans by activity type id and activity subtype id",
                "description": "",
                "operationId": "getTariffPlansList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "activSubTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/traffic-recalc-rules": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual traffic recalculation rules in system",
                "description": "",
                "operationId": "getCalculationRules",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/connection-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual connection types in system",
                "description": "",
                "operationId": "getConnectionTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/withdrawal-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of mechanisms of withdrawal of a user's payment",
                "description": "",
                "operationId": "getSubscriptionFeeTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "description": "An ID of parent activity type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "baseUnitId",
                        "in": "query",
                        "description": "An ID of parent base unit",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/tariffication-type": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of all possible values of tariff types",
                "description": "",
                "operationId": "getTarifficationTypes_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "description": "An ID of parent activity type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/statuses": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual statuses of tariff plans in system",
                "description": "",
                "operationId": "getTariffPlanStatuses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/restriction-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of available tariff plan restriction types",
                "description": "",
                "operationId": "getTpRestrictionTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/tv-package-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of TV package types",
                "description": "",
                "operationId": "getTvPackageType",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "activityTypeId",
                        "in": "query",
                        "description": "An ID of parent activity type",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/traff-vol-measures": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of actual volume units in system",
                "description": "",
                "operationId": "getVolumeUnits",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/interaction-types": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of tp interaction types for interaction matrix",
                "description": "",
                "operationId": "getInteractionTypes",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/tv-status": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves the list of tv statuses",
                "description": "",
                "operationId": "getTVStatus",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/goods": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Retrieves list of goods with parameters",
                "description": "",
                "operationId": "getGoodsParameters",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/turbo-button-period": {
            "get": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "Periods for turbo button",
                "description": "",
                "operationId": "getTurboButtonPeriods",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/main-data/tariff-plan/cost-matrix/key-value": {
            "post": {
                "tags": [
                    "main-datatariff-plan"
                ],
                "summary": "list of tariff plans for dropdown",
                "description": "",
                "operationId": "getTariffPlanKeyValue",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CostMatrixSearchTariffKeyValue"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/versions": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides with the tariff plan versions list",
                "description": "",
                "operationId": "getVersions_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanSearchId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan",
                "description": "",
                "operationId": "setStatus_53",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/report": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves an excel-formatted report",
                "description": "",
                "operationId": "getReportExcel_86",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/history": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides the list of a tariff plan params editing history.",
                "description": "",
                "operationId": "getHistory_6",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/tv-channels": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides with the list of TV channels for tariff plan",
                "description": "",
                "operationId": "getTvChannels",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanTvChannelSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/bound-tp": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves the list of bound tariff plan for complex tariff plan by version id",
                "description": "",
                "operationId": "getTPComplexBoundList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanVerId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/unbound-tp": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides the list of unbound tariff plan for complex tariff plan",
                "description": "",
                "operationId": "getTPComplexUnboundList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanForComplexSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/versions/report": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves an excel-formatted report",
                "description": "",
                "operationId": "getVersionsReportExcel_3",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTariffPlanSearchId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/bound-tp-by-id": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves the list of bound tariff plan for complex tariff plan by TP id",
                "description": "",
                "operationId": "getTPComplexBoundListById",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/interval-info": {
            "get": {
                "tags": [
                    "tariff-plan"
                ],
                "operationId": "getIntervalInfo",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "tariffPlanTypeId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/bound-tp-by-ver/report/{id}": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves an excel-formatted report",
                "description": "",
                "operationId": "getTPComplexBoundReportExcel",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelObjectSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/unbound-tp/report": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "operationId": "getReportTPComplexUnboundList",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTariffPlanForComplexSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/internet": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the internet activity type",
                "description": "",
                "operationId": "setStatusInternetTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/analog": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the analog TV activity type",
                "description": "",
                "operationId": "setStatusAnalogTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/digital": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the digital TV activity type",
                "description": "",
                "operationId": "setStatusDigitalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/additional-service": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the additional services activity type",
                "description": "",
                "operationId": "setStatusAdditionalServiceTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/channel-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the channel rental activity type",
                "description": "",
                "operationId": "setStatusChannelRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/equipment-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the equipment rental activity type",
                "description": "",
                "operationId": "setStatusEquipmentRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/equipment-sale": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the equipment sale activity type",
                "description": "",
                "operationId": "setStatusEquipmentSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/complex": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the complex activity type",
                "description": "",
                "operationId": "setStatusComplexSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/set-status/other": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Changes the status of tariff plan with the other basic services activity type",
                "description": "",
                "operationId": "setStatusOtherTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusDataTariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/search": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides the list of tariff plans satisfy given parameters",
                "description": "",
                "operationId": "searchTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/internet": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the internet activity type to a DB",
                "description": "",
                "operationId": "saveInternetTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/analog": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the analog TV activity type to a DB",
                "description": "",
                "operationId": "saveAnalogTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/digital": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the digital TV activity type to a DB",
                "description": "",
                "operationId": "saveDigitalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/complex": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the complex activity type to a DB",
                "description": "",
                "operationId": "saveComplexSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/other": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the other basic services activity type to a DB",
                "description": "",
                "operationId": "saveOtherTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/internet": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the internet activity type to a DB",
                "description": "",
                "operationId": "editInternetTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/analog": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the analog TV activity type to a DB",
                "description": "",
                "operationId": "editAnalogTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/digital": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the digital TV activity type to a DB",
                "description": "",
                "operationId": "editDigitalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/additional-service": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the additional services activity type to a DB",
                "description": "",
                "operationId": "editAdditionalServiceTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/channel-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the channel rental activity type to a DB",
                "description": "",
                "operationId": "editChannelRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/equipment-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the equipment rental activity type to a DB",
                "description": "",
                "operationId": "editEquipmentRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/equipment-sale": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the equipment sale activity type to a DB",
                "description": "",
                "operationId": "editEquipmentSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/complex": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the complex activity type to a DB",
                "description": "",
                "operationId": "editComplexSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/edit/other": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the other basic services activity type to a DB",
                "description": "",
                "operationId": "editOtherTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/{id}": {
            "get": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides with the tariff plan by id",
                "description": "",
                "operationId": "getTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/history/report": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves an excel-formatted report",
                "description": "",
                "operationId": "getHistoryReportExcel_2",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelHistorySearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/additional-service": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the additional services activity type to a DB",
                "description": "",
                "operationId": "saveAdditionalServiceTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/channel-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the channel rental activity type to a DB",
                "description": "",
                "operationId": "saveChannelRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/equipment-rental": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the equipment rental activity type to a DB",
                "description": "",
                "operationId": "saveEquipmentRentalTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/save/equipment-sale": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Saves a tariff plan with the equipment sale activity type to a DB",
                "description": "",
                "operationId": "saveEquipmentSaleTariffPlan",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlan"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/versions/{id}": {
            "delete": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Deletes a tariff plan version",
                "description": "",
                "operationId": "dropVersions",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/linked-tv-channels": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Provides with the list of linked TV channels for tariff plan",
                "description": "",
                "operationId": "getLinkedTvChannels",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanLinkedTvSearchData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/bound-tp/report": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves the list of bound tariff plan for complex tariff plan by version id",
                "description": "",
                "operationId": "getTPComplexBoundListReport",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTariffPlanVerId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/bound-tp-by-ver": {
            "post": {
                "tags": [
                    "tariff-plan"
                ],
                "summary": "Retrieves the list of bound tariff plan for complex tariff plan by version id",
                "description": "",
                "operationId": "getTPComplexBoundListByVersionId",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffPlanVerId"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/terr-binding/report": {
            "post": {
                "tags": [
                    "tariff-planterr-binding"
                ],
                "summary": "Get an excel house report.",
                "description": "",
                "operationId": "getReportExcel_87",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTerritorialBindingSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/terr-binding/link": {
            "post": {
                "tags": [
                    "tariff-planterr-binding"
                ],
                "summary": "Link tps with addresses",
                "description": "",
                "operationId": "linkTariffPlanWithHouses",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TerritorialBindingLinkForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/terr-binding/filtered-key-value": {
            "get": {
                "tags": [
                    "tariff-planterr-binding"
                ],
                "summary": "Provides the filtered tp key-value",
                "description": "",
                "operationId": "getTariffPlanFilteredKeyVal",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/terr-binding": {
            "post": {
                "tags": [
                    "tariff-planterr-binding"
                ],
                "summary": "Provides the address tp tree",
                "description": "",
                "operationId": "getTariffPlanTerritorialBindingTree",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TerritorialBindingSearchForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tariff-plan/terr-binding/key-value": {
            "post": {
                "tags": [
                    "tariff-planterr-binding"
                ],
                "summary": "Provides the tp key-value",
                "description": "",
                "operationId": "getTariffPlanTerritorialBindingTree_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TerritorialBindingTpKeyValForm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/traffic-pptp": {
            "post": {
                "tags": [
                    "traffic-pptp"
                ],
                "summary": "Getting traffic list",
                "description": "",
                "operationId": "findAll_6",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TrafficSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received traffic list "
                    },
                    "400": {
                        "description": "Can't retrieve the traffic list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/traffic-pptp/report": {
            "post": {
                "tags": [
                    "traffic-pptp"
                ],
                "summary": "Get an excel report.",
                "description": "",
                "operationId": "getReportExcel_88",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportModelTrafficSearch"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/traffic-pptp/get-tp-id": {
            "post": {
                "tags": [
                    "traffic-pptp"
                ],
                "summary": "Getting tp list",
                "description": "",
                "operationId": "getTP",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TrafficSearchTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received tp list "
                    },
                    "400": {
                        "description": "Can't retrieve the tp list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/traffic-pptp/contract-by-subscr": {
            "post": {
                "tags": [
                    "traffic-pptp"
                ],
                "summary": "Getting contract list",
                "description": "",
                "operationId": "getContractNew",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TrafficContractSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received contract list "
                    },
                    "400": {
                        "description": "Can't retrieve the contract list"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/authentication/logout": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "operationId": "logout",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/authentication": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "operationId": "authentication",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CredentialDto"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/credential/password": {
            "post": {
                "tags": [
                    "credential"
                ],
                "operationId": "getPassword",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/credential/change-login": {
            "post": {
                "tags": [
                    "credential"
                ],
                "summary": "Change login for user",
                "description": "",
                "operationId": "changeLoginForLogin",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ChangeLoginModel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/credential/save": {
            "post": {
                "tags": [
                    "credential"
                ],
                "summary": "Save credential for user",
                "description": "",
                "operationId": "createCredential",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/credential/generate": {
            "post": {
                "tags": [
                    "credential"
                ],
                "summary": "Generate credential for user",
                "description": "",
                "operationId": "generateCredential",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/credential/can-create-login": {
            "get": {
                "tags": [
                    "credential"
                ],
                "summary": "is can create a login",
                "description": "",
                "operationId": "isCanCreateLogin",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "subscriberId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Retrieve user data",
                "description": "Retrieve user roles with pages access values",
                "operationId": "getUserData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "description": "Can't retrieve user data from database"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Provides the full information about user by id",
                "description": "",
                "operationId": "getUserData_1",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An id of needed user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Received found user"
                    },
                    "400": {
                        "description": "Can't retrieve the found user"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/user/department-data": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Retrieve user data",
                "description": "Retrieve user roles with pages access values",
                "operationId": "getUserDepartmentData",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "description": "Can't retrieve user data from database"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        },
        "/user/chgpwd": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Change user password",
                "description": "",
                "operationId": "changePasswordByUser",
                "consumes": [
                    "application/json;charset=utf8"
                ],
                "produces": [
                    "application/json;charset=utf8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Password change data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChangeDataDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User password updated successfully"
                    },
                    "400": {
                        "description": "Can't change user password"
                    },
                    "500": {
                        "description": "Technical error occurred"
                    }
                }
            }
        }
    },
    "definitions": {
        "CurrencyReceiptSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "documentNumber": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "sumFrom": {
                    "type": "number",
                    "format": "double"
                },
                "sumTo": {
                    "type": "number",
                    "format": "double"
                },
                "currencyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "customerName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "bankAccount": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "bankCode": {
                    "type": "string"
                },
                "recipientBankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operatorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ObjectSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelCurrencyReceiptSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CurrencyReceiptSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ObjectSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "CurrencyReceiptCancel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CurrencyReceipt": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "documentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "documentNumber": {
                    "type": "string"
                },
                "sum": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyName": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankAccount": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "recipientBankAccountName": {
                    "type": "string"
                },
                "recipientBankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recipientBankName": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "dateCancel": {
                    "type": "string",
                    "format": "date-time"
                },
                "recipientAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "inBillingCycle": {
                    "type": "boolean"
                },
                "checkSameParam": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelInvoiceForPaymentSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/InvoiceForPaymentSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "InvoiceForPaymentSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberName": {
                    "type": "string"
                },
                "tariffPlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "creationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractNumber": {
                    "type": "string"
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "billStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "paymentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "systemOperatorSelected": {
                    "type": "boolean"
                }
            }
        },
        "SelectedObjectData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "object"
                }
            }
        },
        "SelectedObjectDataInvoiceForPaymentSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/InvoiceForPaymentSearchData"
                }
            }
        },
        "SelectedPaymentsRegisterData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/InvoiceForPaymentSearchData"
                },
                "datePayment": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PaymentRegisterData": {
            "type": "object",
            "properties": {
                "encumbrBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "datePayment": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountPayment": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ExportModelPaymentDemandSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PaymentDemandSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PaymentDemandSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "creationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "operator": {
                    "type": "string"
                },
                "uploadDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "activityTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractorName": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "typeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "paymentDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "createMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "numId": {
                    "type": "string"
                },
                "docNum": {
                    "type": "string"
                },
                "billActNumber": {
                    "type": "string"
                }
            }
        },
        "PaymentDemand": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "numId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractorName": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "bankAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paid": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "paymentPurpose": {
                    "type": "string"
                },
                "acceptanceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "createDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "createMethod": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "docNum": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "codeZact": {
                    "type": "string"
                },
                "codeOrg": {
                    "type": "string"
                },
                "unnOrg": {
                    "type": "string"
                },
                "nameOrg": {
                    "type": "string"
                },
                "doctNum": {
                    "type": "string"
                }
            }
        },
        "SelectedObjectDataPaymentDemandSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/PaymentDemandSearchData"
                }
            }
        },
        "PaymentDemandInvoiceSearchData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PaymentDemandInvoice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentDemandId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isManual": {
                    "type": "boolean"
                }
            }
        },
        "BillActPaymentSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "billActId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ReturnHistorySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "typeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "creationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contragentName": {
                    "type": "string"
                },
                "recipientName": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "sumFrom": {
                    "type": "number",
                    "format": "float"
                },
                "sumTo": {
                    "type": "number",
                    "format": "float"
                },
                "paymentRequestNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "operatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "uploadedId": {
                    "type": "integer",
                    "format": "int32"
                },
                "paidId": {
                    "type": "integer",
                    "format": "int32"
                },
                "canceledId": {
                    "type": "integer",
                    "format": "int32"
                },
                "uploadDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancellationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancellationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentPurpose": {
                    "type": "string"
                },
                "isErip": {
                    "type": "boolean"
                },
                "operatorCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "systemOperatorSelected": {
                    "type": "boolean"
                }
            }
        },
        "ReturnHistoryOperationData": {
            "type": "object",
            "properties": {
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelReturnHistorySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ReturnHistorySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SelectedObjectDataReturnHistorySearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/ReturnHistorySearchData"
                }
            }
        },
        "ExportModelRubleReceiptSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/RubleReceiptSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RubleReceiptSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "receiptTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "senderFullName": {
                    "type": "string"
                },
                "senderContractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "senderContractNumber": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "senderBankAccountNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payerUnp": {
                    "type": "string"
                },
                "payerFullName": {
                    "type": "string"
                },
                "senderUnp": {
                    "type": "string"
                }
            }
        },
        "InputStream": {
            "type": "object"
        },
        "RubleReceiptRelation": {
            "type": "object",
            "properties": {
                "receiptTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "senderContractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "RubleReceiptSplitData": {
            "type": "object",
            "properties": {
                "sourceReceiptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "rubleReceiptRelations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RubleReceiptRelation"
                    }
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "pageId": {
                    "type": "integer",
                    "format": "int64"
                },
                "edit": {
                    "type": "boolean"
                }
            }
        },
        "GroupSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "UserRecord": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "departmentName": {
                    "type": "string"
                }
            }
        },
        "UserSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "groupID": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "KeyValueType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "revisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "childIdsToLink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "childIdsToUnlink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelSearchActivitySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SearchActivitySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SearchActivitySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "num": {
                    "type": "string"
                },
                "addressIp": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SearchActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "addressIp": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelUserSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/UserSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentName": {
                    "type": "string"
                },
                "subnet": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                },
                "csrfToken": {
                    "type": "string"
                }
            }
        },
        "FreeLock": {
            "type": "object",
            "properties": {
                "minInterval": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxDaysTotal": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PaidLock": {
            "type": "object",
            "properties": {
                "maxDaysOnce": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxDaysTotal": {
                    "type": "integer",
                    "format": "int64"
                },
                "minDaysOnce": {
                    "type": "integer",
                    "format": "int64"
                },
                "minInterval": {
                    "type": "integer",
                    "format": "int64"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VoluntaryBlockPrice"
                    }
                }
            }
        },
        "VoluntaryBlock": {
            "type": "object",
            "properties": {
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "freeLock": {
                    "$ref": "#/definitions/FreeLock"
                },
                "paidLock": {
                    "$ref": "#/definitions/PaidLock"
                }
            }
        },
        "VoluntaryBlockPrice": {
            "type": "object",
            "properties": {
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BankAccount": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "number": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankBic": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "bankAddress": {
                    "type": "string"
                },
                "isMain": {
                    "type": "string",
                    "format": "byte"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "bankDepartment": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ObjectStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "BankAccountSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelBankAccountSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BankAccountSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "HistorySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "objectId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activeDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "activeDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BankAccountKeyValSearchData": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelPaymentOrderSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PaymentOrderSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PaymentOrderSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountToReturnId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPaid": {
                    "type": "boolean"
                },
                "contractNumber": {
                    "type": "string"
                },
                "formationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "formationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "subscriberName": {
                    "type": "string"
                },
                "paymentPurpose": {
                    "type": "string"
                }
            }
        },
        "SelectedObjectDataPaymentOrderSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/PaymentOrderSearchData"
                }
            }
        },
        "PaymentOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "recipientName": {
                    "type": "string"
                },
                "subscriberName": {
                    "type": "string"
                },
                "accountToReturn": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "amountInitial": {
                    "type": "number",
                    "format": "double"
                },
                "amountVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "seasonalityId": {
                    "type": "boolean"
                },
                "transferCostsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeDisplayVatIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "bankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankName": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountToReturnId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purposeOfPayment": {
                    "type": "string"
                },
                "kindId": {
                    "type": "integer",
                    "format": "int32"
                },
                "returnAll": {
                    "type": "boolean"
                },
                "operatorName": {
                    "type": "string"
                }
            }
        },
        "BankAccountInfoSearchData": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerCommission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerName": {
                    "type": "string"
                },
                "operationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "sumWithVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRate": {
                    "type": "integer",
                    "format": "int64"
                },
                "sumVat": {
                    "type": "number",
                    "format": "double"
                },
                "sumWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "calculationMethod": {
                    "type": "string"
                },
                "enrollmentMethod": {
                    "type": "string"
                }
            }
        },
        "BrokerCommissionSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerName": {
                    "type": "string"
                },
                "unp": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "calculationMethodIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "enrollmentMethodIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateCreatedFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCreatedTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "vatRateIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelBrokerCommissionSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerCommissionSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokersKeyValSearchData": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDates": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "archive": {
                    "type": "boolean"
                }
            }
        },
        "BrokerPaymentOperationHistorySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operNameIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "distributionInfoIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelBrokerPaymentOperationHistorySearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerPaymentOperationHistorySearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerPaymentDistributionSubscribersSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerOperationIds": {
            "type": "object",
            "properties": {
                "operationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "BrokerPaymentManualDistrib": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerSum": {
                    "type": "number",
                    "format": "double"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sourceOperationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscrAmountRow": {
                    "type": "string"
                },
                "manualDistribSubscrData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BrokerPaymentManualDistribSubscrData"
                    }
                }
            }
        },
        "BrokerPaymentManualDistribSubscrData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "sum": {
                    "type": "number",
                    "format": "double"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerDistributionPayInfoSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "KeyId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerDistributionManualCheck": {
            "type": "object",
            "properties": {
                "operationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "SelectedObjectDataBrokerPaymentOperationHistorySearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerPaymentOperationHistorySearchForm"
                }
            }
        },
        "ExportModelBrokerPaymentDistributionSubscribersSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerPaymentDistributionSubscribersSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Broker": {
            "type": "object",
            "required": [
                "basicInformation",
                "contactInformation"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "basicInformation": {
                    "$ref": "#/definitions/BrokerBasicInformation"
                },
                "contactInformation": {
                    "$ref": "#/definitions/BrokerContactInformation"
                },
                "contract": {
                    "$ref": "#/definitions/BrokerContract"
                },
                "bankAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankAccount"
                    }
                },
                "vatRate": {
                    "$ref": "#/definitions/BrokerVatRate"
                }
            }
        },
        "BrokerBasicInformation": {
            "type": "object",
            "required": [
                "brokerLevel",
                "brokerName"
            ],
            "properties": {
                "brokerName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2147483647
                },
                "unp": {
                    "type": "string"
                },
                "brokerCode": {
                    "type": "string"
                },
                "brokerClosureDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "okpo": {
                    "type": "string"
                },
                "brokerLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "highLevelBroker": {
                    "type": "integer",
                    "format": "int64"
                },
                "highLevelBrokerName": {
                    "type": "string"
                },
                "workInJKH": {
                    "type": "boolean"
                },
                "jkuPaymentUse": {
                    "type": "boolean"
                },
                "dbfUse": {
                    "type": "boolean"
                },
                "withoutCustomerContracts": {
                    "type": "boolean"
                },
                "note": {
                    "type": "string"
                },
                "dateClose": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "isParent": {
                    "type": "boolean"
                }
            }
        },
        "BrokerContactInformation": {
            "type": "object",
            "required": [
                "addressLegal",
                "addressPostal",
                "postalDeliveryMethod"
            ],
            "properties": {
                "addressLegal": {
                    "type": "string"
                },
                "addressPostal": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9._%-+]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalDeliveryMethod": {
                    "type": "integer",
                    "format": "int64"
                },
                "contactPersonName": {
                    "type": "string"
                },
                "contactPersonPosition": {
                    "type": "string"
                },
                "contactPersonPhone": {
                    "type": "string"
                },
                "responsiblePersonName": {
                    "type": "string"
                },
                "responsiblePersonPosition": {
                    "type": "string"
                },
                "responsiblePersonPhone": {
                    "type": "string"
                },
                "responsiblePersonDocument": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "BrokerContract": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "contractDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "penaltyTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "penaltyAmount": {
                    "type": "string"
                },
                "commissionTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commissionCalcBaseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commissionAmount": {
                    "type": "number",
                    "format": "float"
                },
                "commissionTransferMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commissionDocumentTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billDeliveryTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billDocumentTemplateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commissionInvoiceTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "signEmpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "signBasisId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPaymentByLastDay": {
                    "type": "boolean"
                }
            }
        },
        "BrokerVatRate": {
            "type": "object",
            "required": [
                "vatRateId"
            ],
            "properties": {
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "revisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "childIdsToLink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "childIdsToUnlink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRateStartDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BrokerPreviewFullSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "workInMUE": {
                    "type": "boolean"
                },
                "jkuPaymentUse": {
                    "type": "boolean"
                },
                "dbfParticipate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "paymentMethodIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "commissionCalcBaseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "commissionTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "commissionTransfMethosIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerLevelTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerDocTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "sourceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isRecipient": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelBrokerPreviewFullSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerPreviewFullSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerPreview": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "contractNum": {
                    "type": "string"
                },
                "contractDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "balance": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerPreviewSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerCommonFormSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statusList": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unp": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "useAIS": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "contractStatusList": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "workInJku": {
                    "type": "boolean"
                }
            }
        },
        "BrokerSecondLvlChangeData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parentBrokerId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BrokerContractStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateClose": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "TransferSubscrToDirectPayment": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "roomsUnlink": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "billDocKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayBillDocKindId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TransferSubscrToDirectPaymentAddressSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BrokerChangeData": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "newBrokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "moveAll": {
                    "type": "boolean"
                },
                "transferAmounts": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelTransferSubscrToDirectPaymentAddressSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TransferSubscrToDirectPaymentAddressSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerAddressLink": {
            "type": "object",
            "properties": {
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unLink": {
                    "type": "boolean"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BrokerLink": {
            "type": "object",
            "properties": {
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "revisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "childIdsToLink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "childIdsToUnlink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BrokerKeyValueSearchData": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BrokerServiceAddressSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelBrokerServiceAddressSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerServiceAddressSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerVatRateSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelBrokerVatRateSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerVatRateSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerWaitRecalculationHistorySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscrName": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "contractBrokerNumber": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "string"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomNumber": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "billingCycleDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "operDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "operDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelBrokerWaitRecalculationHistorySearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerWaitRecalculationHistorySearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Operation": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prsEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depotId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsManufacturerIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsModelIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "subscriberIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "invNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dataStatusFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dataStatusTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "prsEmployeeIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depotIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cogsFrom": {
                    "type": "number"
                },
                "cogsTo": {
                    "type": "number"
                },
                "amountDepreciatedFrom": {
                    "type": "number"
                },
                "amountDepreciatedTo": {
                    "type": "number"
                },
                "selected": {
                    "type": "boolean"
                }
            }
        },
        "SelectedObjectDataBrokerWaitRecalculationHistorySearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerWaitRecalculationHistorySearchForm"
                }
            }
        },
        "BrokerDbfReconcilingSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokerFilesId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerName": {
                    "type": "string"
                },
                "billingStreetId": {
                    "type": "integer",
                    "format": "int32"
                },
                "billingHouseId": {
                    "type": "integer",
                    "format": "int32"
                },
                "billingRoomsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "errorTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "isStructureWork": {
                    "type": "boolean"
                },
                "dbfStreet": {
                    "type": "string"
                },
                "dbfHouse": {
                    "type": "string"
                },
                "dbfRooms": {
                    "type": "string"
                },
                "errorStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberNumber": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "billingCycleDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "brokerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "SelectedObjectDataBrokerDbfReconcilingSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerDbfReconcilingSearchData"
                }
            }
        },
        "BrokerDbfPaidErrors": {
            "type": "object",
            "properties": {
                "errorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "BrokerForDbfSearchData": {
            "type": "object",
            "properties": {
                "workInMUE": {
                    "type": "boolean"
                },
                "jkuPaymentUse": {
                    "type": "boolean"
                },
                "dbfParticipate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerLevelTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "sourceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isRecipient": {
                    "type": "boolean"
                }
            }
        },
        "DbfSelectedObjectData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "brokers": {
                    "$ref": "#/definitions/SelectedObjectDataBrokerForDbfSearchData"
                },
                "reconciling": {
                    "$ref": "#/definitions/BrokerDbfReconcilingSearchData"
                }
            }
        },
        "ExportModelDbfSelectedObjectData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DbfSelectedObjectData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SelectedObjectDataBrokerForDbfSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerForDbfSearchData"
                }
            }
        },
        "DbfFileParsingData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerFilesId": {
                    "type": "integer",
                    "format": "int64"
                },
                "account": {
                    "type": "string"
                },
                "accountAddress": {
                    "type": "string"
                },
                "startServiceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "homeAddress": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "string"
                },
                "housingNumber": {
                    "type": "string"
                },
                "roomNumber": {
                    "type": "string"
                },
                "endServiceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "serviceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "serviceName": {
                    "type": "string"
                },
                "rateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "rateName": {
                    "type": "string"
                },
                "serviceQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "incomingBalance": {
                    "type": "number",
                    "format": "double"
                },
                "charge": {
                    "type": "number",
                    "format": "double"
                },
                "recalculation": {
                    "type": "number",
                    "format": "double"
                },
                "paid": {
                    "type": "number",
                    "format": "double"
                },
                "outcomingBalance": {
                    "type": "number",
                    "format": "double"
                },
                "formationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "someFieldNull": {
                    "type": "boolean"
                }
            }
        },
        "DbfFileInfoData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileName": {
                    "type": "string"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "formationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "brokerCode": {
                    "type": "string"
                }
            }
        },
        "DbfAnaliseData": {
            "type": "object",
            "properties": {
                "brokerFilesId": {
                    "type": "integer",
                    "format": "int64"
                },
                "errorsCount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InputPart": {
            "type": "object",
            "properties": {
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "contentTypeFromMessage": {
                    "type": "boolean"
                },
                "bodyAsString": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "MediaType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "wildcardType": {
                    "type": "boolean"
                },
                "wildcardSubtype": {
                    "type": "boolean"
                }
            }
        },
        "MultipartFormDataInput": {
            "type": "object",
            "properties": {
                "formData": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/InputPart"
                    }
                },
                "formDataMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/InputPart"
                        }
                    }
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InputPart"
                    }
                },
                "preamble": {
                    "type": "string"
                }
            }
        },
        "BrokerAndMtisBinding": {
            "type": "object",
            "properties": {
                "broker": {
                    "$ref": "#/definitions/SelectedObjectDataBrokerBindingForm"
                },
                "mtis": {
                    "$ref": "#/definitions/MtisBindingSelectedData"
                }
            }
        },
        "BrokerBindingForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "errorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "street": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "string"
                },
                "roomNumber": {
                    "type": "string"
                }
            }
        },
        "MtisBindingSelectedData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/MtisMappingErrorsSearchForm"
                }
            }
        },
        "MtisMappingErrorsSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "errorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "erroneousOnly": {
                    "type": "boolean"
                },
                "billingStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingHouseNumberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingRoomNumberIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "SelectedObjectDataBrokerBindingForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerBindingForm"
                }
            }
        },
        "BrokerMappingErrorsSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "errorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "street": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "string"
                },
                "roomNumber": {
                    "type": "string"
                },
                "infoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkedAccount": {
                    "type": "string"
                },
                "amountReconWait": {
                    "type": "number"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "SelectedObjectDataBrokerMappingErrorsSearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BrokerMappingErrorsSearchForm"
                }
            }
        },
        "ExportModelMtisMappingErrorsSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MtisMappingErrorsSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelBrokerMappingErrorsSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerMappingErrorsSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BrokerRecalculationHistory": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractNumber": {
                    "type": "string"
                },
                "contractStatusIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerName": {
                    "type": "string"
                },
                "operDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "operDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "commissionTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "commissionTransfMethodIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "createDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "createDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "unp": {
                    "type": "string"
                },
                "vatRateIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "BrokerRemuneration": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sumWOVat": {
                    "type": "number"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelBrokerRecalculationHistory": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BrokerRecalculationHistory"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "AppealCallCenterUpdateData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "wayId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "channelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "topic": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "attachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tapeFileId": {
                    "type": "integer",
                    "format": "int64"
                },
                "timing": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "callPhone": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "adoptEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyText": {
                    "type": "string"
                },
                "replyAttachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": {
                    "type": "string"
                },
                "orderNeed": {
                    "type": "boolean"
                },
                "replyPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "showAnswer": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AppealCallCenter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "datetimeCreate": {
                    "type": "string",
                    "format": "date-time"
                },
                "number": {
                    "type": "integer",
                    "format": "int64"
                },
                "wayName": {
                    "type": "string"
                },
                "channelName": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "reasonName": {
                    "type": "string"
                },
                "orderTrigger": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "adoptEmployeeName": {
                    "type": "string"
                },
                "adoptDepartmentName": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "applicantName": {
                    "type": "string"
                },
                "applicantStreet": {
                    "type": "string"
                },
                "applicantHouse": {
                    "type": "string"
                },
                "applicantRoom": {
                    "type": "string"
                },
                "applicantCallPhone": {
                    "type": "string"
                },
                "applicantPhone": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "attachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "attachFileNames": {
                    "type": "string"
                },
                "timing": {
                    "type": "string"
                },
                "tapeFileId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyEmployeeName": {
                    "type": "string"
                },
                "replyDepartmentName": {
                    "type": "string"
                },
                "replyDatetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "replyPeriod": {
                    "type": "string"
                },
                "replyText": {
                    "type": "string"
                },
                "replyAttachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "replyAttachFileNames": {
                    "type": "string"
                },
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "AppealCallCenterSearchFullData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AppealCallCenterSearchData": {
            "type": "object",
            "required": [
                "subscriberId"
            ],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "number": {
                    "type": "integer",
                    "format": "int64"
                },
                "searchDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeFinish": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "channelIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "wayIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "streetName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "buildingName": {
                    "type": "string"
                },
                "buildingId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apartmentName": {
                    "type": "string"
                },
                "apartmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "noAddressFlag": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelAppealCallCenterSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/AppealCallCenterSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LinkData": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unlinkFlag": {
                    "type": "boolean"
                }
            }
        },
        "OrderAppealLinkData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "wayId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "channelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "topic": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "attachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tapeFileId": {
                    "type": "integer",
                    "format": "int64"
                },
                "timing": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "callPhone": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "adoptEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyText": {
                    "type": "string"
                },
                "replyAttachFileIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": {
                    "type": "string"
                },
                "orderNeed": {
                    "type": "boolean"
                },
                "replyPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "showAnswer": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "appealId": {
                    "type": "integer",
                    "format": "int64"
                },
                "linkData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkData"
                    }
                }
            }
        },
        "ExportModelPersonalAccountHandlingSearchParams": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountHandlingSearchParams"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountHandlingSearchParams": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "handlingNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "adoptEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "replyDepartId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateFinish": {
                    "type": "string",
                    "format": "date-time"
                },
                "targetFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "startInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "endInterval": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppealData": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "channelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "appealId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderManagementSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderNumber": {
                    "type": "string"
                },
                "deptCreatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "deptId": {
                    "type": "integer",
                    "format": "int32"
                },
                "typeOrderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "handlingCategoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "authorCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderFromDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderToDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "executeFromDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "executeToDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancelFromDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancelToDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelOrderManagementSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderManagementSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderManagementStatusData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CashOperationSearchForm": {
            "type": "object",
            "properties": {
                "operKindId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CashOperationCreationForm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepaymentInvoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbranceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentCodeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                },
                "statusCTO": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CashOperationTransferObject": {
            "type": "object",
            "properties": {
                "cheque": {
                    "$ref": "#/definitions/ChequeSavingForm"
                },
                "cashOperation": {
                    "$ref": "#/definitions/CashOperationCreationForm"
                }
            }
        },
        "ChequeSavingForm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkNumber": {
                    "type": "string"
                },
                "checkDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isAllSum": {
                    "type": "boolean"
                }
            }
        },
        "CashboxBalanceSearchParams": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "balanceType": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ChequeCancel": {
            "type": "object",
            "properties": {
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "chequeNumber": {
                    "type": "string"
                },
                "operationStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "comment": {
                    "type": "string"
                },
                "cancelChequeNumber": {
                    "type": "string"
                },
                "cancelSum": {
                    "type": "number",
                    "format": "double"
                },
                "cancelPaymentCode": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CashTransactionsReportExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CashTransactionsReportSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extraFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CashTransactionsReportSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentCodeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "paymentCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "cashierId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "contractNum": {
                    "type": "string"
                },
                "prepaymentInvoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "isCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkNumber": {
                    "type": "string"
                },
                "operKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "D1cFileRestData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "bareCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentName": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "paymentCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "dep": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepayBillId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BonusSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelBonusSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BonusSearchDataForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "bonusAmount": {
                    "type": "number",
                    "format": "double"
                },
                "activityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "numberOfServices": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BonusAccReplenishmentSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "bonusAmount": {
                    "type": "number",
                    "format": "double"
                },
                "timeValue": {
                    "type": "number",
                    "format": "double"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelHistorySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/HistorySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "AddingTpCheckForm": {
            "type": "object",
            "properties": {
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIdsToCheck": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "AddingTp": {
            "type": "object",
            "properties": {
                "bonusVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeName": {
                    "type": "string"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activSubTypeName": {
                    "type": "string"
                },
                "tpAmount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Bonus": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/BonusCommon"
                },
                "initial": {
                    "$ref": "#/definitions/BonusInitial"
                },
                "properties": {
                    "$ref": "#/definitions/BonusProperties"
                },
                "addingTp": {
                    "$ref": "#/definitions/AddingTp"
                }
            }
        },
        "BonusCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isInitial": {
                    "type": "boolean"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionDateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusAmount": {
                    "type": "number"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleteNote": {
                    "type": "string"
                }
            }
        },
        "BonusInitial": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "periodicityId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BonusProperties": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number",
                    "format": "double"
                },
                "timeMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "timeValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfServices": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "UpdateStatusData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/ObjectSearchData"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UpdateStatusDataBonusSearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/BonusSearchForm"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BonusVersionSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelBonusVersionSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusVersionSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelBonusSearchDataForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusSearchDataForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelBonusAccReplenishmentSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusAccReplenishmentSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "AvailableTpSearchData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "BonusPointsTransfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "measureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "transfer": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelObjectSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ObjectSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TariffPlanPaidByBonusData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "BonusGroupSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "bonusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelBonusGroupSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusGroupSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BonusAccountSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "bonusGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "subscrName": {
                    "type": "string"
                },
                "getLinked": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelBonusAccountSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BonusAccountSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BonusGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "bonusPercent": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "LinkBonusGroupForm": {
            "type": "object",
            "properties": {
                "parentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "revisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "childIdsToLink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "childIdsToUnlink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "mainId": {
                    "type": "integer",
                    "format": "int64"
                },
                "main": {
                    "type": "boolean"
                }
            }
        },
        "DiscountMatrixInteractionSetModel": {
            "type": "object",
            "properties": {
                "discountUpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountLeftId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCompatible": {
                    "type": "boolean"
                }
            }
        },
        "DiscountUnionMatrix": {
            "type": "object",
            "properties": {
                "interactionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiscountMatrixInteractionSetModel"
                    }
                },
                "tscInteractionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiscountMatrixInteractionSetModel"
                    }
                }
            }
        },
        "DiscountSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscrSubgroupArr": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isExactAddress": {
                    "type": "boolean"
                },
                "sortorder": {
                    "type": "string"
                }
            }
        },
        "ExportModelDiscountSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DiscountSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "DiscountVersionSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelDiscountVersionSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DiscountVersionSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LinkedHouseExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/LinkedHouseFilter"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LinkedHouseFilter": {
            "type": "object",
            "properties": {
                "discountVerId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelHouseTreeSearchDate": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/HouseTreeSearchDate"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "HouseTreeSearchDate": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reqDepartamentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "addressStreetIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "activSubTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "Discount": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/DiscountCommon"
                },
                "initial": {
                    "$ref": "#/definitions/DiscountInitial"
                },
                "encumbrance": {
                    "$ref": "#/definitions/DiscountEncumbrance"
                },
                "extra": {
                    "$ref": "#/definitions/DiscountExtra"
                }
            }
        },
        "DiscountCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionDateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "discountMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activDiscountEndType": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountUsePeriodQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountUsePeriodMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commonTariffPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscrSubgroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "localOffers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleteNote": {
                    "type": "string"
                },
                "initial": {
                    "type": "boolean"
                }
            }
        },
        "DiscountEncumbrance": {
            "type": "object",
            "properties": {
                "rateVATId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountWithoutVAT": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "encumbranceTermTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountUsePeriodQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountUsePeriodMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbrTariffPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DiscountExtra": {
            "type": "object",
            "properties": {
                "minAmount": {
                    "type": "number",
                    "format": "double"
                },
                "maxAmount": {
                    "type": "number",
                    "format": "double"
                },
                "timePeriodMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "timePeriodValue": {
                    "type": "integer",
                    "format": "int64"
                },
                "isConsiderOngoingUsePeriod": {
                    "type": "boolean"
                },
                "maxPeeringTrafficAmount": {
                    "type": "number",
                    "format": "double"
                },
                "maxExternalTrafficAmount": {
                    "type": "number",
                    "format": "double"
                },
                "servicesCombinationCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "extraTariffPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DiscountInitial": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "kindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountActivationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activDiscountBeginTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isEncumbrance": {
                    "type": "boolean"
                },
                "isLocalOffers": {
                    "type": "boolean"
                },
                "serviceTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpBaseUnitId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UpdateStatusDataDiscountSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/DiscountSearchData"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DiscountTPSearchData": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DiscountTPTreeSearchData": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tariffTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTscDiscountSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TscDiscountSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TscDiscountSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UpdateStatusDataTscDiscountSearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/TscDiscountSearchForm"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TscDiscount": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/TscDiscountCommon"
                },
                "initial": {
                    "$ref": "#/definitions/TscDiscountInitial"
                },
                "encumbrance": {
                    "$ref": "#/definitions/TscDiscountEncumbrance"
                }
            }
        },
        "TscDiscountCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "offerDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionDateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscrSubgroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amount": {
                    "type": "number"
                },
                "discountMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountMeasureName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusName": {
                    "type": "string"
                },
                "deleteNote": {
                    "type": "string"
                }
            }
        },
        "TscDiscountEncumbrance": {
            "type": "object",
            "properties": {
                "encumbrTariffPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "rateVATId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRateName": {
                    "type": "string"
                },
                "amountWithoutVAT": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "discountUsePeriodMeasureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "measureName": {
                    "type": "string"
                },
                "discountUsePeriodQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "encumbranceTermTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TscDiscountInitial": {
            "type": "object",
            "properties": {
                "workKindIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "offerDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isEncumbrance": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TscDiscountVersionSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTscDiscountVersionSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TscDiscountVersionSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractConnectDiscountOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "optionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDiscount"
                    }
                },
                "deletedContractDiscountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractDiscount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "disName": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeName": {
                    "type": "string"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeName": {
                    "type": "string"
                },
                "disPeriod": {
                    "type": "string"
                },
                "activationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activationTypeName": {
                    "type": "string"
                },
                "isEncumbrance": {
                    "type": "boolean"
                },
                "disDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "disDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "encDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "encDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "encAmount": {
                    "type": "number",
                    "format": "double"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriptionFeeTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isChecked": {
                    "type": "boolean"
                },
                "isTsc": {
                    "type": "boolean"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractOperationCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ContractDiscountOperUpdateSearchData": {
            "type": "object",
            "properties": {
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractDiscountRelations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTpIdDiscountIdRelation"
                    }
                },
                "idsArrayDel": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractTpIdDiscountIdRelation": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractDiscountConnectCheckData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractDiscounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDiscount"
                    }
                }
            }
        },
        "ContractDiscountByTpAndDiscountId": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationPlanned": {
                    "type": "string",
                    "format": "date-time"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractDiscountDeactivationSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractDiscountAutoSearchData": {
            "type": "object",
            "properties": {
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationPlanned": {
                    "type": "string",
                    "format": "date-time"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountIdsArray": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractDiscountUpdateData": {
            "type": "object",
            "properties": {
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationPlanned": {
                    "type": "string",
                    "format": "date-time"
                },
                "updateIdsInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDiscountUpdateIdsInfo"
                    }
                },
                "deletedContractDiscountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractDiscountUpdateIdsInfo": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountIdsArray": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractDiscountDatesSearchData": {
            "type": "object",
            "properties": {
                "idsArray": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractOperDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractDiscountSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractDiscountDictSearchData": {
            "type": "object",
            "properties": {
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateConnection": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractDisconnectDiscountOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "deactivationDiscountSetIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deactivationDiscountDropIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractGoodsOrders": {
            "type": "object",
            "properties": {
                "someTpConfigWasDeleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractGoodsSave": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractGoodsRelations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractGoodsSaveRelation"
                    }
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractGoodsSaveRelation": {
            "type": "object",
            "properties": {
                "contractGoodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractGoodsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractIssuedGoodsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "byExistingContractOper": {
                    "type": "boolean"
                }
            }
        },
        "ContractOperationGoodsIssue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "contractGoodsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "byOrder": {
                    "type": "boolean"
                }
            }
        },
        "ContractOperationGoodsReturn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "contractGoodsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsPrsEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsDepotId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsOperTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MainTpIdSearchData": {
            "type": "object",
            "properties": {
                "additionalTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "mainTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractStatusModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractIdSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelContractIdSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractIdSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractChangeBillingDateOption": {
            "type": "object",
            "properties": {
                "contractOperation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "disconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractBlocking": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lockStatus": {
                    "type": "integer",
                    "format": "int64"
                },
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lockDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "lockType": {
                    "type": "integer",
                    "format": "int32"
                },
                "lockParamVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRate": {
                    "type": "number",
                    "format": "double"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "fullPrice": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                },
                "paymentAvailable": {
                    "type": "boolean"
                },
                "lockReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "adminNotifyDays": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractChangeRequisitesOption": {
            "type": "object",
            "properties": {
                "contractOperation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "dateExpiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentRuleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "penaltyTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "penaltyAmount": {
                    "type": "string"
                },
                "subscrFundingSourceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "individualCreditLimit": {
                    "type": "number",
                    "format": "double"
                },
                "paymentTerm": {
                    "type": "integer",
                    "format": "int64"
                },
                "billDelivTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "signEmpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "signBasisId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billDocKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayBillDocKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "signActTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPaperCopy": {
                    "type": "boolean"
                },
                "signOfOwnershipId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "isPaymentByLastDay": {
                    "type": "boolean"
                },
                "accountsInBrokerBase": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CheckBeforeOperationData": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractOperIdSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractUnlocking": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ContractActivateOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "updateData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractActivationUpdateData"
                    }
                }
            }
        },
        "ContractActivationUpdateData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "connectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractOperLinkedDocSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelContractOperLinkedDocSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractOperLinkedDocSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractTpLockInfoSearchData": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lockTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lockOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractRequisitesSearchData": {
            "type": "object",
            "properties": {
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prevStateBeforeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "checkPrevState": {
                    "type": "boolean"
                }
            }
        },
        "ContractTpUpdateLock": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "adminNotifyDays": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractOperationCancel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ContractReissue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "oldContractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newContractNum": {
                    "type": "string"
                },
                "newSubscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "transferResidues": {
                    "type": "boolean"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ContractCloseOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationClose"
                },
                "selectedEncumbrances": {
                    "$ref": "#/definitions/SelectedObjectData"
                },
                "noChangeTpList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "processEncumbrances": {
                    "type": "boolean"
                }
            }
        },
        "ContractOperationClose": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "billingDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractBreakReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "refundTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankAccToReturnId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newOperator": {
                    "type": "string"
                }
            }
        },
        "ContractBillingDateChange": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingBefore": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivationBefore": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEndBefore": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractSearchFormData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "subscriberCategoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "passportData": {
                    "type": "string"
                },
                "subscriberGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "contractNumber": {
                    "type": "string"
                },
                "conclusionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "conclusionDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "billingFromDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingToDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accountNumber": {
                    "type": "string"
                },
                "bonusAccountNumber": {
                    "type": "string"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "activitySubtypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "areaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "directPayment": {
                    "type": "boolean"
                },
                "paymentRuleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTermFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTermTo": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPaymentByLastDay": {
                    "type": "boolean"
                },
                "individualCreditLimitFrom": {
                    "type": "number",
                    "format": "double"
                },
                "individualCreditLimitTo": {
                    "type": "number",
                    "format": "double"
                },
                "signOfOwnershipIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscrFundingSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "billDocKindIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "billDelivTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateCloseFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCloseTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractActivTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActivationTpFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActivationTpTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivationTpFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivationTpTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEndFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEndTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "paperCopy": {
                    "type": "boolean"
                }
            }
        },
        "ContractActivityTypeSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "monthDt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Contract": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/ContractCommon"
                },
                "tariffPlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTpConnection"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDiscount"
                    }
                },
                "deletedTariffPlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deletedDiscountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberName": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "conclusionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "docStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "inForceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "comment": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "closingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "signerNameId": {
                    "type": "integer",
                    "format": "int32"
                },
                "basisForSigningId": {
                    "type": "integer",
                    "format": "int32"
                },
                "creditLimit": {
                    "type": "number",
                    "format": "double"
                },
                "paymentDirect": {
                    "type": "boolean"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentRuleId": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastDay": {
                    "type": "boolean"
                },
                "agentNameId": {
                    "type": "integer",
                    "format": "int32"
                },
                "invoiceTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "prepayBillDocKindId": {
                    "type": "integer",
                    "format": "int32"
                },
                "mailDeliveryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "actSigningId": {
                    "type": "integer",
                    "format": "int32"
                },
                "typeOfPenaltiesId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sizeOfPenalties": {
                    "type": "string"
                },
                "sourceOfFinancing": {
                    "type": "integer",
                    "format": "int32"
                },
                "paperCopyId": {
                    "type": "boolean"
                },
                "perAccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "factualBalance": {
                    "type": "number"
                },
                "calculatedBalance": {
                    "type": "number"
                },
                "accountingBalance": {
                    "type": "number"
                },
                "bonusAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusBalance": {
                    "type": "number"
                },
                "signOfOwnershipId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractTpConnection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectionQuantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "mainTariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "atvFilterId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDeactivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpCoefficient": {
                    "type": "number",
                    "format": "double"
                },
                "complexTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dtvAccessCriteriaArr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dtvGoodsCardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "changeConnectionTp": {
                    "type": "boolean"
                }
            }
        },
        "CallCenterContract": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "num": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateEntryIntoForce": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateExpiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "tariffPlansRelations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTariffPlansRelation"
                    }
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractTariffPlansRelation": {
            "type": "object",
            "properties": {
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateActivation": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractPrepaymentInvoiceSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "counterpartyTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "counterpartyName": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "code1C": {
                    "type": "string"
                },
                "searchByBroker": {
                    "type": "boolean"
                },
                "withArchive": {
                    "type": "boolean"
                },
                "nonDirectContrSearchType": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractShippingList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "shippingListNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shippingListTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "shippingListDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "formTypeCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "formSeries": {
                    "type": "string"
                },
                "formNum": {
                    "type": "string"
                },
                "shipperNameAndAddress": {
                    "type": "string"
                },
                "shipperEmpName": {
                    "type": "string"
                },
                "shipperUnp": {
                    "type": "string"
                },
                "consigneeNameAndAddress": {
                    "type": "string"
                },
                "consigneeNameAndPosition": {
                    "type": "string"
                },
                "consigneeUnp": {
                    "type": "string"
                },
                "deliveryBasis": {
                    "type": "string"
                },
                "deliveryAllowedBy": {
                    "type": "string"
                },
                "loadingPoint": {
                    "type": "string"
                },
                "unloadingPoint": {
                    "type": "string"
                },
                "payerNameAndAddress": {
                    "type": "string"
                },
                "carMark": {
                    "type": "string"
                },
                "carNumber": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "acceptedNameAndPosition": {
                    "type": "string"
                },
                "attorneyNumber": {
                    "type": "string"
                },
                "attorneyDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "attorneyOrganization": {
                    "type": "string"
                },
                "readdressing": {
                    "type": "string"
                },
                "additionalDocuments": {
                    "type": "string"
                }
            }
        },
        "ExportModelContractSearchFormData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractSearchFormData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractTotalDiscountRelation": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateDiscountActivation": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractTotalRelation": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "coeff": {
                    "type": "number",
                    "format": "double"
                },
                "complexContractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAct": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBilling": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBillingEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractTotalSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractTpIdPatternTpIdCoeffDiscountId": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTotalRelation"
                    }
                },
                "contractDiscountId": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTotalDiscountRelation"
                    }
                },
                "checkedCompatible": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelContractTotalSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractTotalSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractChangeTpFilterOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationCommon"
                },
                "tpFilterChange": {
                    "$ref": "#/definitions/ContractTpFilterChange"
                }
            }
        },
        "ContractTpFilterChange": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "atvFilterId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractSearchTPData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelContractSearchTPData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractSearchTPData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ChangeTpCostSearchData": {
            "type": "object",
            "properties": {
                "tpIdBefore": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIdAfter": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractTariffPlanSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractTpIdBefore": {
                    "type": "integer",
                    "format": "int64"
                },
                "mainTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractTpBillingInfoSearchData": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractCheckTpDate": {
            "type": "object",
            "properties": {
                "tariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractTpForOperSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractCheckEncumbranceData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tariffPlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContractCheckEncumbranceDataBeforeChanging": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIdsOldNew": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TpEncumbranceRelation"
                    }
                },
                "operId": {
                    "type": "integer",
                    "format": "int64"
                },
                "deletedContractTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "isGroupOper": {
                    "type": "boolean"
                }
            }
        },
        "TpEncumbranceRelation": {
            "type": "object",
            "properties": {
                "contractTpIdOld": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIdNew": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CalcEncumbrance": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CalcEncumbranceInputData": {
            "type": "object",
            "properties": {
                "inputData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CalcEncumbrance"
                    }
                }
            }
        },
        "ContractTpFilterSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractConnectTpOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationTpConnect"
                },
                "tariffPlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractTpConnection"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDiscount"
                    }
                },
                "deletedTariffPlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deletedDiscountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ContractOperationTpConnect": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "billingDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "payWithBonuses": {
                    "type": "boolean"
                }
            }
        },
        "ContractDisconnectTpOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationTpDisconnect"
                },
                "deactivationTpSetIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deactivationTpDropIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selectedEncumbrances": {
                    "$ref": "#/definitions/SelectedObjectData"
                },
                "noChangeTpList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "processEncumbrances": {
                    "type": "boolean"
                }
            }
        },
        "ContractOperationTpDisconnect": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "billingDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractBreakReasonId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContractChangeTpOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractOperationTpChange"
                },
                "setChangeTpList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractSetTpChange"
                    }
                },
                "dropChangeTpList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDropChangeTp"
                    }
                },
                "selectedEncumbrances": {
                    "$ref": "#/definitions/SelectedObjectData"
                },
                "noChangeTpList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "processEncumbrances": {
                    "type": "boolean"
                }
            }
        },
        "ContractDropChangeTp": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isComplexTp": {
                    "type": "boolean"
                },
                "isGroupOperChange": {
                    "type": "boolean"
                }
            }
        },
        "ContractOperationTpChange": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "billingDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isGroupOperChange": {
                    "type": "boolean"
                }
            }
        },
        "ContractSetTpChange": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpIdBefore": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "atvFilterId": {
                    "type": "integer",
                    "format": "int64"
                },
                "complContrTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isGroupOperChange": {
                    "type": "boolean"
                }
            }
        },
        "GroupChangesTpSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesTpSearchFilter"
                },
                "contractGroupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GroupChangesTpSearchFilter": {
            "type": "object",
            "properties": {
                "subscriberGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberSubgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberCategoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "resident": {
                    "type": "boolean"
                },
                "subscriberName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "flatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "limitFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "limitTo": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbrance": {
                    "type": "boolean"
                },
                "tpConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "blockStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subdivisionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "filterTypesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountNameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activeTp": {
                    "type": "boolean"
                },
                "isFilterTp": {
                    "type": "boolean"
                }
            }
        },
        "GoodsKeyValueSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityType": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TechnicalParameters": {
            "type": "object",
            "properties": {
                "goods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TechnicalParametersGoods"
                    }
                },
                "goodsIpPoolId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsGeneratedIp": {
                    "type": "string"
                },
                "goodsVlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectionTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "netSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                },
                "localNetworkVlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "localNetworkIpPoolId": {
                    "type": "integer",
                    "format": "int64"
                },
                "localNetworkGoodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "localNetworkGeneratedIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "nasId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nasVlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nasIpPoolId": {
                    "type": "integer",
                    "format": "int64"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "connectionIpPPTP": {
                    "type": "string"
                }
            }
        },
        "TechnicalParametersGoods": {
            "type": "object",
            "properties": {
                "isOwnGoods": {
                    "type": "boolean"
                },
                "goodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsName": {
                    "type": "string"
                },
                "goodsMAC": {
                    "type": "string"
                }
            }
        },
        "ReservePortForm": {
            "type": "object",
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TvTechnicalParameters": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractGoodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "previousCardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCardIdChanged": {
                    "type": "boolean"
                },
                "lastSentCardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dtvAccessCriteriasCurrArr": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dtvAccessCriteriasLastSentArr": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MacHistorySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TransferParamData": {
            "type": "object",
            "properties": {
                "idOld": {
                    "type": "integer",
                    "format": "int64"
                },
                "idNew": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CheckConfigIPData": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "vlanRangesId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CountryCodeSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusID": {
                    "type": "integer",
                    "format": "int64"
                },
                "nameDuplicate": {
                    "type": "integer",
                    "format": "int64"
                },
                "codeDuplicate": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelCountryCodeSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CountryCodeSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CountryCode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "statusName": {
                    "type": "string"
                },
                "statusID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CtoPartTemplate": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DepartmentSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "ExportModelDepartmentSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DepartmentSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Department": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "DepartmentSectionSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DepartmentAppealsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeName": {
                    "type": "string"
                }
            }
        },
        "DepartmentJobTypesSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "orderWorkName": {
                    "type": "string"
                }
            }
        },
        "DepartmentIdentification": {
            "type": "object",
            "properties": {
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DepartmentDropStatement": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "StatusObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelDepartmentAppealsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DepartmentAppealsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelDepartmentJobTypesSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DepartmentJobTypesSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "DepartmentIdentifier": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "EventHistorySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "buildingId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apartmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTimeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeFinish": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderNumber": {
                    "type": "string"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ExportModelEventHistorySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/EventHistorySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelTransferInTransitSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TransferInTransitSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TransferInTransitSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "bankIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "docNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "receiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileNum": {
                    "type": "string"
                }
            }
        },
        "TransferInTransit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "num": {
                    "type": "string"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDocNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "penaltyAmount": {
                    "type": "number",
                    "format": "double"
                },
                "errorAmount": {
                    "type": "number",
                    "format": "double"
                },
                "amountMoneyInflow": {
                    "type": "number",
                    "format": "double"
                },
                "correctPaymentAmount": {
                    "type": "number",
                    "format": "double"
                },
                "accNum": {
                    "type": "string"
                },
                "receiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "inBillingCycle": {
                    "type": "boolean"
                }
            }
        },
        "FundsTransferHistorySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "transferPersonTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelFundsTransferHistorySearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/FundsTransferHistorySearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "FundsTransfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "senderAccId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recipientAccId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ExportModelGlobalInvoicingSearchModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GlobalInvoicingSearchModel"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GlobalInvoicingSearchModel": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GlobalInvoicingChangeModel": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer",
                    "format": "int32"
                },
                "time": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CheckUniqueInvNumberData": {
            "type": "object",
            "properties": {
                "inventoryNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsModelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "serialNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "modelsForInventoryNumber": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nonUniqueSerialNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GoodsCommonInfo": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "importDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "modelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "inventoryNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "prsEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depotId": {
                    "type": "integer",
                    "format": "int64"
                },
                "deprecationCalc": {
                    "type": "boolean"
                },
                "deprecationPeriod": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "GoodsDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packId": {
                    "type": "integer",
                    "format": "int64"
                },
                "serialNumber": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "firmwareVersion": {
                    "type": "string"
                },
                "cogs": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ImportedGoods": {
            "type": "object",
            "properties": {
                "continueOperation": {
                    "type": "boolean"
                },
                "goodsCommonInfo": {
                    "$ref": "#/definitions/GoodsCommonInfo"
                },
                "goodsDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoodsDetail"
                    }
                }
            }
        },
        "ExportModelGoodsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GoodsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "goodsGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsManufacturerIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsModelIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "subscriberIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "invNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dataStatusFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dataStatusTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "prsEmployeeIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depotIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cogsFrom": {
                    "type": "number"
                },
                "cogsTo": {
                    "type": "number"
                },
                "amountDepreciatedFrom": {
                    "type": "number"
                },
                "amountDepreciatedTo": {
                    "type": "number"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Goods": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "model": {
                    "type": "string"
                },
                "modelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "manufacturer": {
                    "type": "string"
                },
                "manufacturerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "group": {
                    "type": "string"
                },
                "inventoryNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "serialNumber": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depot": {
                    "type": "string"
                },
                "depotId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prsEmployee": {
                    "type": "string"
                },
                "prsEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "cogs": {
                    "type": "number"
                },
                "depreciationAmount": {
                    "type": "number"
                },
                "depreciationAmountMonth": {
                    "type": "number"
                },
                "depreciatedAmount": {
                    "type": "number"
                },
                "statusDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "firmwareVersion": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "depreciationPeriod": {
                    "type": "integer",
                    "format": "int64"
                },
                "docKind": {
                    "type": "string"
                },
                "docNum": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GoodsOperationHistorySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelGoodsOperationHistorySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsOperationHistorySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CancelLastOperation": {
            "type": "object",
            "properties": {
                "goodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "single": {
                    "type": "boolean"
                }
            }
        },
        "GoodsManufacturerKeyValSearchData": {
            "type": "object",
            "properties": {
                "groupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsModelIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsInvNums": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "GoodsInventoryNumberSearchData": {
            "type": "object",
            "properties": {
                "goodsModelIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "prsEmployeeIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depotIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsManufacturerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "GoodsMovementDoc": {
            "type": "object",
            "properties": {
                "operId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsOperTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsOperType": {
                    "type": "string"
                },
                "dateOper": {
                    "type": "string",
                    "format": "date-time"
                },
                "docNumber": {
                    "type": "string"
                },
                "docJasperId": {
                    "type": "string"
                },
                "formationDoc": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "employeeBefore": {
                    "type": "string"
                },
                "employeeAfter": {
                    "type": "string"
                },
                "depotBefore": {
                    "type": "string"
                },
                "depotAfter": {
                    "type": "string"
                }
            }
        },
        "GoodsMovementDocSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "goodsGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsManufacturerIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsModelIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "invNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "docNumber": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "formationDocIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "employeeIDsBefore": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "employeeIDsAfter": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depotIDsBefore": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "depotIDsAfter": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operTypeIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "operDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelGoodsMovementDocSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsMovementDocSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelMovementGoodsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MovementGoodsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MovementGoodsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "groupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "manufacturerIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "modelIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "invNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "prsEmployeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depotIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateMovementFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateMovementTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cogsFrom": {
                    "type": "number"
                },
                "cogsTo": {
                    "type": "number"
                },
                "amountDepreciatedFrom": {
                    "type": "number"
                },
                "amountDepreciatedTo": {
                    "type": "number"
                }
            }
        },
        "ExportModelGroupChangesBonusContractSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GroupChangesBonusContractSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GroupChangesBonusContractSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberSubgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberCategoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "resident": {
                    "type": "boolean"
                },
                "subscriberName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "flatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbrance": {
                    "type": "boolean"
                },
                "tpConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "blockStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subdivisionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "filterTypesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "bonusTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractNumber": {
                    "type": "string"
                },
                "activeTp": {
                    "type": "boolean"
                },
                "isFilterTp": {
                    "type": "boolean"
                }
            }
        },
        "SelectedObjectDataGroupChangesBonusContractSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesBonusContractSearchData"
                }
            }
        },
        "LinkSubscriberData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/ObjectSearchData"
                },
                "subscrGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "drop": {
                    "type": "boolean"
                },
                "unlink": {
                    "type": "boolean"
                }
            }
        },
        "LinkSubscriberDataGroupChangesBonusContractSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesBonusContractSearchData"
                },
                "subscrGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "drop": {
                    "type": "boolean"
                },
                "unlink": {
                    "type": "boolean"
                }
            }
        },
        "GroupChangesContractSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateChangeFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateChangeTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "GroupChangesContractInfoSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelGroupChangesContractSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GroupChangesContractSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GroupChangesBonusOptionData": {
            "type": "object",
            "properties": {
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "bonusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "accBonusesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "GroupChangesComplexOption": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataObject"
                },
                "optionData": {
                    "type": "object"
                }
            }
        },
        "GroupChangesComplexOptionGroupChangesBonusContractSearchDataGroupChangesBonusOptionData": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataGroupChangesBonusContractSearchData"
                },
                "optionData": {
                    "$ref": "#/definitions/GroupChangesBonusOptionData"
                }
            }
        },
        "SelectedObjectDataObject": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "object"
                }
            }
        },
        "AccBonusesInfoSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accBonusesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DisableBonusesSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesBonusContractSearchData"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GroupChangesBonusContractSearchFilter": {
            "type": "object",
            "properties": {
                "subscriberGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberSubgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberCategoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "resident": {
                    "type": "boolean"
                },
                "subscriberName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "flatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbrance": {
                    "type": "boolean"
                },
                "tpConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "blockStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subdivisionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "filterTypesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "bonusTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractNumber": {
                    "type": "string"
                },
                "activeTp": {
                    "type": "boolean"
                }
            }
        },
        "LinkBonusesInfoSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesBonusContractSearchFilter"
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusIdsToConnect": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "MinOperDateSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelGroupChangesComplexContractSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GroupChangesComplexContractSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GroupChangesComplexContractSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberSubgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subscriberCategoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "resident": {
                    "type": "boolean"
                },
                "subscriberName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "flatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "limitFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "limitTo": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumbrance": {
                    "type": "boolean"
                },
                "tpConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "blockStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "subdivisionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "filterTypesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountNameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "discountDisconnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activeTp": {
                    "type": "boolean"
                },
                "contractGroupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "isFilterTp": {
                    "type": "boolean"
                }
            }
        },
        "SelectedObjectDataGroupChangesComplexContractSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesComplexContractSearchData"
                }
            }
        },
        "LinkSubscriberDataGroupChangesComplexContractSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesComplexContractSearchData"
                },
                "subscrGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "drop": {
                    "type": "boolean"
                },
                "unlink": {
                    "type": "boolean"
                }
            }
        },
        "GroupChangesAdminLock": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lockStatus": {
                    "type": "integer",
                    "format": "int64"
                },
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lockDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "lockType": {
                    "type": "integer",
                    "format": "int32"
                },
                "lockParamVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRate": {
                    "type": "number",
                    "format": "double"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "fullPrice": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                },
                "paymentAvailable": {
                    "type": "boolean"
                },
                "lockReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "adminNotifyDays": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipExceptions": {
                    "type": "boolean"
                },
                "stashExceptions": {
                    "type": "boolean"
                },
                "forcedCommit": {
                    "type": "boolean"
                }
            }
        },
        "GroupChangesComplexOptionGroupChangesComplexContractSearchDataGroupChangesAdminLock": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                },
                "optionData": {
                    "$ref": "#/definitions/GroupChangesAdminLock"
                }
            }
        },
        "GroupChangesAdminUnlock": {
            "type": "object",
            "properties": {
                "lockStatus": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipExceptions": {
                    "type": "boolean"
                },
                "stashExceptions": {
                    "type": "boolean"
                }
            }
        },
        "GroupChangesComplexOptionGroupChangesComplexContractSearchDataGroupChangesAdminUnlock": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                },
                "optionData": {
                    "$ref": "#/definitions/GroupChangesAdminUnlock"
                }
            }
        },
        "ContractGroupOperation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "changeTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "changeDateBilling": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GroupChangesTpOption": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/definitions/ContractGroupOperation"
                },
                "previousTpNewTpList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PreviousTpNewTp"
                    }
                },
                "searchData": {
                    "$ref": "#/definitions/GroupChangesTpSearchData"
                },
                "atvFilterId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dropChangeTpList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContractDropChangeTp"
                    }
                },
                "updateFilter": {
                    "type": "boolean"
                }
            }
        },
        "PreviousTpNewTp": {
            "type": "object",
            "properties": {
                "previousTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "newTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UpdateLockMultipleData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lockEndDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ChangeLimitOptionData": {
            "type": "object",
            "properties": {
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "individualCreditLimit": {
                    "type": "number",
                    "format": "double"
                },
                "groupOperNote": {
                    "type": "string"
                }
            }
        },
        "GroupChangesComplexOptionGroupChangesComplexContractSearchDataChangeLimitOptionData": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataGroupChangesComplexContractSearchData"
                },
                "optionData": {
                    "$ref": "#/definitions/ChangeLimitOptionData"
                }
            }
        },
        "GroupChangesTpEditSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractGroupOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CheckBeforeGroupChangesTpFilter": {
            "type": "object",
            "properties": {
                "selectedObjectData": {
                    "$ref": "#/definitions/SelectedObjectDataGroupChangesTpSearchFilter"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SelectedObjectDataGroupChangesTpSearchFilter": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/GroupChangesTpSearchFilter"
                }
            }
        },
        "ObjectSearchDataById": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelObjectSearchDataById": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ObjectSearchDataById"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ManualDiscountTpInfoSearchData": {
            "type": "object",
            "properties": {
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "connectionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ManualDiscountTpInfoEditSearchData": {
            "type": "object",
            "properties": {
                "contractGroupOperId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ManualDiscountConnectSaveForm": {
            "type": "object",
            "properties": {
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "checkCompatibility": {
                    "type": "boolean"
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupOperNote": {
                    "type": "string"
                }
            }
        },
        "ManualDiscountDisconnectSaveData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "object"
                },
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractDiscountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "groupOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupOperNote": {
                    "type": "string"
                }
            }
        },
        "HouseTariffPlanSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "House": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "string"
                },
                "housingNumber": {
                    "type": "string"
                },
                "houseName": {
                    "type": "string"
                },
                "roomQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "houseStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "houseStatus": {
                    "type": "string"
                },
                "changeStatusDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "houseCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "postcode": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtId": {
                    "type": "integer",
                    "format": "int64"
                },
                "constructionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastRenovationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "startServicesDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "stationName": {
                    "type": "string"
                },
                "analogTvStatus": {
                    "type": "string"
                },
                "commentary": {
                    "type": "string"
                },
                "zhilPlatCode": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canLinkBroker": {
                    "type": "boolean"
                },
                "activitySubtypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "StreetHouseSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "streetName": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "string"
                }
            }
        },
        "HouseData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "string"
                }
            }
        },
        "RoomsStatus": {
            "type": "object",
            "required": [
                "ids",
                "statusId"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Room": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomNumber": {
                    "type": "string"
                },
                "entrance": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "entranceCode": {
                    "type": "string"
                },
                "analogTvStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastStatusChangeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "commentary": {
                    "type": "string"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tariffPlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RoomsBatch": {
            "type": "object",
            "required": [
                "numbers",
                "room"
            ],
            "properties": {
                "numbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "room": {
                    "$ref": "#/definitions/Room"
                }
            }
        },
        "RoomForBrokerLinkSearchData": {
            "type": "object",
            "properties": {
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelStationSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/StationSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "StationSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "StationActivitySubtypeSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "StationTvSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "frequency": {
                    "type": "number",
                    "format": "double"
                },
                "tvStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "StationActivity": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "AssignmentType": {
            "type": "object",
            "properties": {
                "availableObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueType"
                    }
                },
                "linkedObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueType"
                    }
                }
            }
        },
        "LinkArgument": {
            "type": "object",
            "properties": {
                "childIdsToLink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "childIdsToUnlink": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "Station": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "stationTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationTypeName": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetName": {
                    "type": "string"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "string"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastChangeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "channelsQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "commentary": {
                    "type": "string"
                },
                "tvIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderPartNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linkedStreets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueType"
                    }
                },
                "houses": {
                    "$ref": "#/definitions/AssignmentType"
                },
                "houseIds": {
                    "$ref": "#/definitions/LinkArgument"
                },
                "activities": {
                    "$ref": "#/definitions/AssignmentType"
                },
                "activityIds": {
                    "$ref": "#/definitions/LinkArgument"
                }
            }
        },
        "ExportModelStationActivitySubtypeSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/StationActivitySubtypeSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "AddressTreeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDepId": {
                    "type": "integer",
                    "format": "int64"
                },
                "withoutStation": {
                    "type": "boolean"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelAddressTreeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/AddressTreeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelStationTvSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/StationTvSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "InvoiceTypesKeyValSearchData": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelInvoiceSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/InvoiceSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "InvoiceSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateCreateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCreateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "typeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unp": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "subscrName": {
                    "type": "string"
                },
                "accompanyingDocKindIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "sourceDigitalInvoiceNum": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "sourceTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SelectedObjectDataInvoiceSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/InvoiceSearchData"
                }
            }
        },
        "InvoiceCommonInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "number": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "sourceName": {
                    "type": "string"
                },
                "cancellationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "sendToRecipient": {
                    "type": "boolean"
                }
            }
        },
        "InvoiceConsigneeInfo": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "addressLegal": {
                    "type": "string"
                }
            }
        },
        "InvoiceDeliveryTermsInfo": {
            "type": "object",
            "properties": {
                "contractNumber": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "documentTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "documentFormTypeCode": {
                    "type": "string"
                },
                "documentSeries": {
                    "type": "string"
                },
                "documentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "documentNumber": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "InvoiceProviderInfo": {
            "type": "object",
            "properties": {
                "providerStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "providerCountryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "providerUnp": {
                    "type": "string"
                },
                "providerBranchCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "providerName": {
                    "type": "string"
                },
                "providerAddressLegal": {
                    "type": "string"
                },
                "relatedParty": {
                    "type": "boolean"
                },
                "offshoreTransaction": {
                    "type": "boolean"
                },
                "goodListTransaction": {
                    "type": "boolean"
                },
                "majorPayerOrganisation": {
                    "type": "boolean"
                },
                "providerTaxInvoiceNumber": {
                    "type": "string"
                },
                "providerTaxCreatingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "providerCommitmentInvoiceNumber": {
                    "type": "string"
                },
                "providerCommitmentCreatingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "providerSellerInvoiceNumber": {
                    "type": "string"
                },
                "providerSellerCreatingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "providerRegistrationNumber": {
                    "type": "string"
                },
                "providerReleaseDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "providerPermissionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InvoiceRecipientInfo": {
            "type": "object",
            "properties": {
                "recipientStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recipientCountryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recipientUnp": {
                    "type": "string"
                },
                "recipientBranchCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipientName": {
                    "type": "string"
                },
                "recipientAddressLegal": {
                    "type": "string"
                },
                "relatedParty": {
                    "type": "boolean"
                },
                "offshoreTransaction": {
                    "type": "boolean"
                },
                "goodListTransaction": {
                    "type": "boolean"
                },
                "recipientDontExpose": {
                    "type": "boolean"
                },
                "recipientRegistrationNumber": {
                    "type": "string"
                },
                "recipientTaxInvoiceNumber": {
                    "type": "string"
                },
                "recipientTaxCreatingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "recipientReleaseDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InvoiceShipperInfo": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "addressLegal": {
                    "type": "string"
                }
            }
        },
        "InvoiceStructuredInfo": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/InvoiceCommonInfo"
                },
                "provider": {
                    "$ref": "#/definitions/InvoiceProviderInfo"
                },
                "recipient": {
                    "$ref": "#/definitions/InvoiceRecipientInfo"
                },
                "shipper": {
                    "$ref": "#/definitions/InvoiceShipperInfo"
                },
                "consignee": {
                    "$ref": "#/definitions/InvoiceConsigneeInfo"
                },
                "deliveryTerms": {
                    "$ref": "#/definitions/InvoiceDeliveryTermsInfo"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sourceDigitalInvoiceDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InvoiceSourceId": {
            "type": "object",
            "properties": {
                "sourceId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "InvoiceRosterItem": {
            "type": "object",
            "properties": {
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "productCode": {
                    "type": "string"
                },
                "serviceCode": {
                    "type": "string"
                },
                "measureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unitId": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "pricePerItem": {
                    "type": "number",
                    "format": "double"
                },
                "totalCost": {
                    "type": "number",
                    "format": "double"
                },
                "exciseAmount": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRate": {
                    "type": "number",
                    "format": "double"
                },
                "vatAmount": {
                    "type": "number",
                    "format": "double"
                },
                "totalCostVat": {
                    "type": "number",
                    "format": "double"
                },
                "additionalDataId": {
                    "type": "integer",
                    "format": "int64"
                },
                "num": {
                    "type": "string"
                },
                "vatType": {
                    "type": "string"
                },
                "measureName": {
                    "type": "string"
                },
                "additionalData": {
                    "type": "string"
                },
                "additionalDataCode": {
                    "type": "string"
                },
                "vatRateName": {
                    "type": "string"
                },
                "withoutVat": {
                    "type": "boolean"
                }
            }
        },
        "InvoiceRosterSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelInvoiceRosterSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/InvoiceRosterSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "JasperFileSearchData": {
            "type": "object",
            "properties": {
                "idFile": {
                    "type": "integer",
                    "format": "int64"
                },
                "documentFormat": {
                    "type": "string",
                    "enum": [
                        "PDF",
                        "XLSX",
                        "DOC",
                        "CSV",
                        "TXT",
                        "HTML"
                    ]
                }
            }
        },
        "InvoiceRegisterSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "counterpatryTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpatryName": {
                    "type": "string"
                },
                "contractNum": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "string"
                },
                "searchByBroker": {
                    "type": "boolean"
                },
                "nondirectContrSearchType": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "docTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "billDelivTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateDocFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDocTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCreateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCreateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "emailStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "docNum": {
                    "type": "string"
                },
                "withArchive": {
                    "type": "boolean"
                },
                "signActTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "emailSending": {
                    "type": "boolean"
                }
            }
        },
        "InvoiceRegisterSetStatusData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/InvoiceRegisterSearchData"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelInvoiceRegisterSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/InvoiceRegisterSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "InvoiceEmailSearchData": {
            "type": "object",
            "properties": {
                "searchData": {
                    "$ref": "#/definitions/SelectedObjectDataInvoiceRegisterSearchData"
                },
                "documentFormat": {
                    "type": "string",
                    "enum": [
                        "PDF",
                        "XLSX",
                        "DOC",
                        "CSV",
                        "TXT",
                        "HTML"
                    ]
                }
            }
        },
        "SelectedObjectDataInvoiceRegisterSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/InvoiceRegisterSearchData"
                }
            }
        },
        "RecalculationDocByContractModel": {
            "type": "object",
            "properties": {
                "recountDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "JasperTemplateModel": {
            "type": "object",
            "properties": {
                "templateFileName": {
                    "type": "string"
                },
                "printFileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "formationDocId": {
                    "type": "integer",
                    "format": "int64"
                },
                "documentFormat": {
                    "type": "string",
                    "enum": [
                        "PDF",
                        "XLSX",
                        "DOC",
                        "CSV",
                        "TXT",
                        "HTML"
                    ]
                },
                "documentType": {
                    "type": "string",
                    "enum": [
                        "DOCUMENT",
                        "REPORT"
                    ]
                },
                "inputParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "templateParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JasperTemplateParameter"
                    }
                }
            }
        },
        "JasperTemplateParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "uiData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "converterType": {
                    "type": "string",
                    "enum": [
                        "AUTO",
                        "DATE",
                        "DATE_START",
                        "DATE_END",
                        "LIST_STRING",
                        "LIST_LONG",
                        "KEY_VAL_KEY",
                        "KEY_VAL_KEY_NULL",
                        "KEY_VAL_VAL",
                        "LIST_KEY_VAL_KEY",
                        "LIST_KEY_VAL_VAL",
                        "LONG",
                        "DYNAMIC",
                        "JSON",
                        "LARGE_ARRAY"
                    ]
                }
            }
        },
        "ActivityTypeSearchParam": {
            "type": "object",
            "properties": {
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpConnectionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ActivityKindSubgroupSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripServiceNum": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelActivityKindSubgroupSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ActivityKindSubgroupSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ActivityKindSubgroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activType": {
                    "type": "string"
                },
                "eripServiceNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusName": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "readOnly": {
                    "type": "boolean"
                }
            }
        },
        "CatalogSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "relatedValueId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dictName": {
                    "type": "string"
                }
            }
        },
        "ExportModelCatalogSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CatalogSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CatalogType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "relatedValueId": {
                    "type": "integer",
                    "format": "int64"
                },
                "relatedValue": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "StreetType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ExportModelStreetSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/StreetSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "StreetSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "additionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "additionDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "streetName": {
                    "type": "string"
                },
                "streetTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Street": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "streetTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetType": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "AppealCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "AppealCategorySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppealChannelSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppealChannel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "BankSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "unur": {
                    "type": "integer",
                    "format": "int32"
                },
                "bic": {
                    "type": "string"
                },
                "unp": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelBankSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BankSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Bank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "unur": {
                    "type": "integer",
                    "format": "int32"
                },
                "bic": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusName": {
                    "type": "string"
                }
            }
        },
        "BankReturnSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "bankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankUNUR": {
                    "type": "string"
                },
                "bankAccountNum": {
                    "type": "string"
                },
                "bankAccountName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelBankReturnSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/BankReturnSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BankReturn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankName": {
                    "type": "string"
                },
                "bankUNUR": {
                    "type": "string"
                },
                "bankBIC": {
                    "type": "string"
                },
                "bankAccountNum": {
                    "type": "string"
                },
                "bankAccountName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusName": {
                    "type": "string"
                },
                "unp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CheckMarkData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "datetimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "connectedAppeals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectedAppealsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderType": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersMarkSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CommutatorSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "SubscriptionRequest": {
            "type": "object",
            "properties": {
                "poolId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caClientId": {
                    "type": "string"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "EmailSettingsModel": {
            "type": "object",
            "properties": {
                "mailServerLogin": {
                    "type": "string"
                },
                "mailServerPassword": {
                    "type": "string"
                }
            }
        },
        "OmegaSettingRow": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer",
                    "format": "int32"
                },
                "mac": {
                    "type": "string"
                }
            }
        },
        "OmegaSetting": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer",
                    "format": "int32"
                },
                "mac": {
                    "type": "string"
                }
            }
        },
        "OmegaSplitData": {
            "type": "object",
            "properties": {
                "omegaSettingRows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OmegaSetting"
                    }
                }
            }
        },
        "ContractBreakSearchDate": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelContractBreakSearchDate": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ContractBreakSearchDate"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ContractBreakSetArchiveStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ContractBreak": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "CurrencySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "nbrb": {
                    "type": "integer",
                    "format": "int32"
                },
                "codeIso": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "string"
                },
                "nameRussian": {
                    "type": "string"
                },
                "nameEnglish": {
                    "type": "string"
                }
            }
        },
        "ExportModelCurrencySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CurrencySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "nbrb": {
                    "type": "integer",
                    "format": "int32"
                },
                "codeIso": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "string"
                },
                "nameRussian": {
                    "type": "string"
                },
                "nameEnglish": {
                    "type": "string"
                }
            }
        },
        "CurrencyRateSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ExportModelCurrencyRateSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CurrencyRateSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CurrencyRate": {
            "type": "object",
            "properties": {
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyCodeNBRB": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyCodeISO": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyCode": {
                    "type": "string"
                },
                "currencyNameRus": {
                    "type": "string"
                },
                "currencyNameEng": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "unitsNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Dhcp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "vlanId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                },
                "ntpServer": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "rentTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dns1": {
                    "type": "string"
                },
                "dns2": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isInner": {
                    "type": "boolean"
                },
                "subnet": {
                    "type": "string"
                },
                "poolTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DhcpData": {
            "type": "object",
            "properties": {
                "dhcpFormData": {
                    "$ref": "#/definitions/Dhcp"
                },
                "dhcpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DhcpRange"
                    }
                },
                "deletedRangesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "rangesForChecking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DhcpRange"
                    }
                }
            }
        },
        "DhcpRange": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dhcpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "rangeBegin": {
                    "type": "string"
                },
                "rangeEnd": {
                    "type": "string"
                },
                "numberBegin": {
                    "type": "integer",
                    "format": "int64"
                },
                "numberEnd": {
                    "type": "integer",
                    "format": "int64"
                },
                "configFile": {
                    "type": "string"
                },
                "forObjects": {
                    "type": "boolean"
                },
                "poolTypeName": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DhcpSearchInputData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "string"
                },
                "rangeBegin": {
                    "type": "string"
                },
                "rangeEnd": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                },
                "rentTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateAddFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "poolTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "connectionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "poolName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isDocsis": {
                    "type": "boolean"
                },
                "configFileName": {
                    "type": "string"
                },
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelDhcpSearchInputData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DhcpSearchInputData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PoolSearchData": {
            "type": "object",
            "properties": {
                "vlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DocumentTypeFormingSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "documentKind": {
                    "type": "string"
                },
                "documentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "kindOfActivity": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "activSubTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "typeOfCounterparty": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "businesProcess": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "recordDocKindId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelDocumentTypeFormingSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DocumentTypeFormingSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "DocumentTypeForming": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "documentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "docType": {
                    "type": "string"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "typeOfCounterparty": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterPartyType": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "activType": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusName": {
                    "type": "string"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "businessProcess": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "buisnessProcessFullName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "string"
                },
                "activSubType": {
                    "type": "string"
                },
                "recordDocKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "recordDocKindName": {
                    "type": "string"
                }
            }
        },
        "FormationDocumentSearchData": {
            "type": "object",
            "properties": {
                "counterpartyTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "docTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "businessProcessId": {
                    "type": "integer",
                    "format": "int64"
                },
                "alwaysShowId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "activityTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "EmployeeSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "personnelNumber": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "canSignContract": {
                    "type": "boolean"
                },
                "isPrs": {
                    "type": "boolean"
                },
                "isRequest": {
                    "type": "boolean"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "isAgent": {
                    "type": "boolean"
                },
                "positionForDocs": {
                    "type": "string"
                },
                "geteMail": {
                    "type": "string"
                },
                "statusID": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "ExportModelEmployeeSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/EmployeeSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Employee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "personnelNumber": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "department": {
                    "type": "string"
                },
                "canSignContract": {
                    "type": "boolean"
                },
                "isPrs": {
                    "type": "boolean"
                },
                "isRequest": {
                    "type": "boolean"
                },
                "dateBirth": {
                    "type": "string",
                    "format": "date-time"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "commentary": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "isAgent": {
                    "type": "boolean"
                },
                "positionForDocs": {
                    "type": "string"
                },
                "geteMail": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusID": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "EripPayment": {
            "type": "object",
            "properties": {
                "eripId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripContractNum": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepayBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "encumberBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "datePayment": {
                    "type": "string",
                    "format": "date-time"
                },
                "controlLvlId": {
                    "type": "integer",
                    "format": "int32"
                },
                "controlLvl": {
                    "type": "string"
                },
                "errorKindId": {
                    "type": "integer",
                    "format": "int32"
                },
                "errorKind": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNum": {
                    "type": "string"
                },
                "subscriberName": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "amountWoPenalty": {
                    "type": "number",
                    "format": "double"
                },
                "amountPenalty": {
                    "type": "number",
                    "format": "double"
                },
                "bankCode": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "processingStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "processingStatus": {
                    "type": "string"
                },
                "dateProcessing": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateWriteOff": {
                    "type": "string",
                    "format": "date-time"
                },
                "userName": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "is210wo206": {
                    "type": "boolean"
                }
            }
        },
        "EripPaymentSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "controlLvlIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "errorKindIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "processingStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractNumber": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "operatorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateProcessedFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateProcessedTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "systemOperatorSelected": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelEripPaymentSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/EripPaymentSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "EripPaymentOperData": {
            "type": "object",
            "properties": {
                "eripId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripOperActionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "datePayment": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripProcessingStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "EripProcessingSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "messageNumber204": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageNumber202": {
                    "type": "integer",
                    "format": "int64"
                },
                "errorText": {
                    "type": "string"
                },
                "messageDate202From": {
                    "type": "string",
                    "format": "date-time"
                },
                "messageDate202To": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelEripProcessingSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/EripProcessingSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelFrpGroupSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/FrpGroupSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "FrpGroupSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelFrpEmployeeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/FrpEmployeeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "FrpEmployeeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FrpGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GoodsGroup": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "isUsedNotification": {
                    "type": "boolean"
                },
                "statusId": {
                    "type": "string",
                    "format": "byte"
                },
                "statusName": {
                    "type": "string"
                }
            }
        },
        "GoodsGroupSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "string",
                    "format": "byte"
                },
                "isUsedNotification": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelGoodsGroupSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsGroupSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelGoodsManufacturerSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsManufacturerSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GoodsManufacturerSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GoodsManufacturer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelGoodsModelSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/GoodsModelSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GoodsModelSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "groupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "manufacturerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "depreciationPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "kitting": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "GoodsGroupModelKeyValSearchData": {
            "type": "object",
            "properties": {
                "manufacturerId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsModelIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsInvNums": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "GoodsModel": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "group": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "manufacturerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "depreciationPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "note": {
                    "type": "string"
                },
                "kitting": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusName": {
                    "type": "string"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GoodsModelKeyValSearchData": {
            "type": "object",
            "properties": {
                "groupIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "manufacturerId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsInvNums": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelMeasureSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MeasureSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MeasureSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "description": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "dateTimeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeFinish": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Measure": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "shortName": {
                    "type": "string"
                },
                "dateTimeAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NasSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "nasName": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Nas": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "nasName": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusName": {
                    "type": "string"
                }
            }
        },
        "ExportModelNasSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/NasSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelOneTimeOperationsNameSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OneTimeOperationsNameSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OneTimeOperationsNameSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OneTimeOperationsName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "relatedValue": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusName": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "readOnly": {
                    "type": "boolean"
                }
            }
        },
        "OperatorProp": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "addressLegal": {
                    "type": "string"
                },
                "addressPostal": {
                    "type": "string"
                },
                "unp": {
                    "type": "integer",
                    "format": "int32"
                },
                "okpo": {
                    "type": "string"
                },
                "bynBankAccount": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "faxNumber": {
                    "type": "string"
                },
                "firstSignPersonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "secondSignPersonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bynBankId": {
                    "type": "string"
                },
                "usdBankAccount": {
                    "type": "string"
                },
                "usdBankId": {
                    "type": "string"
                },
                "eurBankAccount": {
                    "type": "string"
                },
                "eurBankId": {
                    "type": "string"
                },
                "rubBankAccount": {
                    "type": "string"
                },
                "rubBankId": {
                    "type": "string"
                },
                "majorContributor": {
                    "type": "boolean"
                },
                "branchCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentNameByn": {
                    "type": "string"
                },
                "departmentNameUsd": {
                    "type": "string"
                },
                "departmentNameEur": {
                    "type": "string"
                },
                "departmentNameRub": {
                    "type": "string"
                }
            }
        },
        "OrderReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "laboriousness": {
                    "type": "number",
                    "format": "double"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "added": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OrderReasonSearchItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "laboriousness": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "added": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderReasonSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderTypes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelOrderReasonSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderReasonSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CustomOperationSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "kindIDs": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupIDs": {
                    "type": "integer",
                    "format": "int64"
                },
                "nameIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelCustomOperationSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/CustomOperationSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CustomOperationUpdateData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "kindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelPtSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PtSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PtSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAddFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "docCode": {
                    "type": "string"
                },
                "docNumber": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "docName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "docDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "docDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PtData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "docCode": {
                    "type": "string"
                },
                "docNumber": {
                    "type": "string"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "docName": {
                    "type": "string"
                },
                "dateAdd": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "OrderReasonCancelSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderReasonCancel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "rn": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelReasonsForAppealsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ReasonsForAppealsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ReasonsForAppealsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reason": {
                    "type": "string"
                },
                "addDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "addDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReasonsForAppeals": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "reason": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateTimeCreate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "SelectedObjectDataSubscriberSearchFormData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/SubscriberSearchFormData"
                }
            }
        },
        "SubscriberSearchFormData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscrSubgroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "passportData": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "subscrGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseMigrationCode": {
                    "type": "string"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int32"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int32"
                },
                "flatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "innerNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNumber": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "areaId": {
                    "type": "integer",
                    "format": "int32"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activitySubtypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscriberCategoryId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriberGroupSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelSubscriberGroupSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberGroupSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SubscriberGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelSupplySearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SupplySearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SupplySearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "nomenclature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTimeBegin": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeFinish": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Supply": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "revisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nomenclature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "measureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "netPrice": {
                    "type": "number",
                    "format": "double"
                },
                "currency": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employee": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "description": {
                    "type": "string"
                },
                "dateTimeActivate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeBegin": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeAdding": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RevisionInfoEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "dateChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RevisionSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "objectId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activeDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "activeDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryEntry": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "previousValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currentValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dataType": {
                    "type": "string",
                    "enum": [
                        "TEXT",
                        "DATE",
                        "BOOLEAN",
                        "ARRAY",
                        "DATETIME"
                    ]
                },
                "userName": {
                    "type": "string"
                },
                "previousValue": {
                    "type": "string"
                },
                "currentValue": {
                    "type": "string"
                }
            }
        },
        "SwitchAddressSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "LinkDhcpEntity": {
            "type": "object",
            "properties": {
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                },
                "linkIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unlinkIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "LinkedDhcpSearchData": {
            "type": "object",
            "properties": {
                "switchId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "poolTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelSwitchSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SwitchSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SwitchSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "vlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "flatId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "remoteId": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "switchTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "firmware": {
                    "type": "string"
                },
                "dateCreateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCreateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "docsis": {
                    "type": "boolean"
                }
            }
        },
        "Switch": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portQuantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "remoteId": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "switchTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "firmware": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "linkVlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unlinkVlanIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateCreate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isDocsis": {
                    "type": "boolean"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "switchTypeName": {
                    "type": "string"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TvChannel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "number",
                    "format": "double"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "activeFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "translationEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "TvChannelSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "number",
                    "format": "double"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "translationEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "additionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "additionDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelTvChannelSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TvChannelSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TvChannelPlannedChange": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "activeFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "translationEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ExportModelFailureChannelsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/FailureChannelsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "FailureChannelsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "durationFailureFrom": {
                    "type": "integer",
                    "format": "int32"
                },
                "durationFailureTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "classFaultIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "typeWorkIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "characteristicsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FailureChannelsDto": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "tvName": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "defectDuration": {
                    "type": "integer",
                    "format": "int64"
                },
                "classFaultId": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeWorkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "characteristicsId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AnalogTvStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "additionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "VatRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "isWithoutVat": {
                    "type": "boolean"
                },
                "dateAdding": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateArchive": {
                    "type": "string",
                    "format": "date-time"
                },
                "archiveReason": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelVatRateSearch": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/VatRateSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "VatRateSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateArchiveFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateArchiveTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "WorkKindVersionSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelWorkKindSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/WorkKindSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "WorkKindSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "workName": {
                    "type": "string"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "workTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cipher": {
                    "type": "string"
                },
                "currencyCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeFrom": {
                    "type": "number",
                    "format": "double"
                },
                "timeTo": {
                    "type": "number",
                    "format": "double"
                },
                "priceFrom": {
                    "type": "number",
                    "format": "double"
                },
                "priceTo": {
                    "type": "number",
                    "format": "double"
                },
                "dateAddFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateStartFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateStartTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "isPaidByBonus": {
                    "type": "boolean"
                }
            }
        },
        "WorkKindStatus": {
            "type": "object",
            "properties": {
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "WorkKind": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workName": {
                    "type": "string"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnit": {
                    "type": "string"
                },
                "time": {
                    "type": "number",
                    "format": "double"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderTypeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyCode": {
                    "type": "string"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workTypeName": {
                    "type": "string"
                },
                "cipher": {
                    "type": "string"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                },
                "vatSum": {
                    "type": "number",
                    "format": "double"
                },
                "priceWithVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatValue": {
                    "type": "string"
                }
            }
        },
        "MailingNotificationFilter": {
            "type": "object",
            "properties": {
                "goodsGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsGroupAdditionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsModelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsFirmwareId": {
                    "type": "string"
                },
                "goodsCardIdInclude": {
                    "type": "string"
                },
                "goodsCardIdIExclude": {
                    "type": "string"
                }
            }
        },
        "MailingNotificationsSearchInputData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activityTypesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "noticeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "noticeTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscrGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "servState": {
                    "type": "integer",
                    "format": "int32"
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "districtIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int32"
                },
                "houseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "includeDisableEmail": {
                    "type": "boolean"
                },
                "goodsFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MailingNotificationFilter"
                    }
                }
            }
        },
        "ExportModelMailingNotificationsSearchInputData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MailingNotificationsSearchInputData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "NoticeInputData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTimeSending": {
                    "type": "string",
                    "format": "date-time"
                },
                "templateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subject": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "fileIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "isAdvert": {
                    "type": "boolean"
                },
                "includeDisableEmail": {
                    "type": "boolean"
                },
                "selectedSubscribersInfo": {
                    "$ref": "#/definitions/SelectedObjectDataMailingNotificationsSearchInputData"
                },
                "noticePool": {
                    "type": "string"
                },
                "noticeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isCreate": {
                    "type": "boolean"
                }
            }
        },
        "SelectedObjectDataMailingNotificationsSearchInputData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/MailingNotificationsSearchInputData"
                }
            }
        },
        "TpListForSubscribersInputData": {
            "type": "object",
            "properties": {
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DeleteFileInputData": {
            "type": "object",
            "properties": {
                "deleteFileIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "RemoveNoticeData": {
            "type": "object",
            "properties": {
                "noticePoolId": {
                    "type": "integer",
                    "format": "int64"
                },
                "noticeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MailingSentNotificationsSearchInputData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateTimeFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "noticeTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "noticeTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "subscriberName": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelMailingSentNotificationsSearchInputData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MailingSentNotificationsSearchInputData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MaintenanceAndRepairOrderSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "creationDateForm": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelMaintenanceAndRepairOrderSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/MaintenanceAndRepairOrderSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MaintenanceAndRepairOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderReason": {
                    "type": "string"
                },
                "workKind": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "executionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentName": {
                    "type": "string"
                },
                "orderLinkName": {
                    "type": "string"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executorsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "executorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "houseName": {
                    "type": "string"
                },
                "streetName": {
                    "type": "string"
                },
                "streetType": {
                    "type": "string"
                },
                "buildingName": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "OrderJobSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderJob": {
            "type": "object",
            "properties": {
                "idDb": {
                    "type": "integer",
                    "format": "int64"
                },
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "jobTypesName": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "baseUnit": {
                    "type": "integer",
                    "format": "int32"
                },
                "unit": {
                    "type": "string"
                },
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workKindName": {
                    "type": "string"
                },
                "cipher": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyCode": {
                    "type": "string"
                },
                "priceNoVat": {
                    "type": "number",
                    "format": "double"
                },
                "costWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "plannedTime": {
                    "type": "number",
                    "format": "double"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersJobDiscount"
                    }
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountName": {
                    "type": "string"
                },
                "discountSum": {
                    "type": "number",
                    "format": "double"
                },
                "costNoVatDiscounts": {
                    "type": "number",
                    "format": "double"
                },
                "vatSum": {
                    "type": "number",
                    "format": "double"
                },
                "costVat": {
                    "type": "number",
                    "format": "double"
                },
                "tpNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "integer",
                    "format": "int64"
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualTime": {
                    "type": "number",
                    "format": "double"
                },
                "jobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPlannedTime": {
                    "type": "number",
                    "format": "double"
                },
                "sumNoVat": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrdersJobDiscount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "discountSum": {
                    "type": "number",
                    "format": "double"
                },
                "jobTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "isEncumbrance": {
                    "type": "boolean"
                },
                "tpDiscounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersJobDiscount"
                    }
                }
            }
        },
        "CheckOrdersClose": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "isClosed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OrdersEquipmentWork": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "goodsGroup": {
                    "type": "string"
                },
                "goodsManufacturer": {
                    "type": "string"
                },
                "goodsModel": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "inventoryNumber": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "cardId": {
                    "type": "integer",
                    "format": "int64"
                },
                "firmWareVersion": {
                    "type": "string"
                },
                "goodsStatus": {
                    "type": "string"
                },
                "dateCreation": {
                    "type": "string",
                    "format": "date-time"
                },
                "prsEmployee": {
                    "type": "string"
                },
                "depot": {
                    "type": "string"
                },
                "cogs": {
                    "type": "integer",
                    "format": "int64"
                },
                "depreciationAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "depreciationAmountMonth": {
                    "type": "integer",
                    "format": "int64"
                },
                "depreciatedAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "depreciationPeriod": {
                    "type": "integer",
                    "format": "int64"
                },
                "docNum": {
                    "type": "integer",
                    "format": "int64"
                },
                "docDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "integer",
                    "format": "int64"
                },
                "transferred": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersTransferredEquipment"
                    }
                },
                "returned": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersReturnedEquipment"
                    }
                }
            }
        },
        "OrdersKeyValueMol": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "OrdersMaterialWork": {
            "type": "object",
            "properties": {
                "idDb": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "nomenclature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "measureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "usedAmount": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "netPrice": {
                    "type": "number",
                    "format": "double"
                },
                "fullCost": {
                    "type": "number",
                    "format": "double"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "employeeName": {
                    "type": "string"
                },
                "mol": {
                    "$ref": "#/definitions/OrdersKeyValueMol"
                },
                "currency": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersReturnedEquipment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mol": {
                    "type": "integer",
                    "format": "int64"
                },
                "stockId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersTransferredEquipment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersUpdateDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "creatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentRoleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "handlingId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "enablePaperCopy": {
                    "type": "boolean"
                },
                "filterId": {
                    "type": "integer",
                    "format": "int64"
                },
                "channelsCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "phoneNumberF": {
                    "type": "string"
                },
                "phoneNumberS": {
                    "type": "string"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "floor": {
                    "type": "string"
                },
                "entrance": {
                    "type": "string"
                },
                "doorPhone": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "displayParam": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "noteWorker": {
                    "type": "string"
                },
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBeginWork": {
                    "type": "string"
                },
                "dateEndWork": {
                    "type": "string"
                },
                "dateTimeClose": {
                    "type": "string",
                    "format": "date-time"
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receiptSeries": {
                    "type": "string"
                },
                "receiptNumber": {
                    "type": "string"
                },
                "certificateNumber": {
                    "type": "string"
                },
                "certificateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "authorCloseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "authorCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancelReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCancel": {
                    "type": "string",
                    "format": "date-time"
                },
                "reflected": {
                    "type": "integer",
                    "format": "int64"
                },
                "needAddDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTimeSolve": {
                    "type": "string",
                    "format": "date-time"
                },
                "reasonCloseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receiptDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isExcel": {
                    "type": "integer",
                    "format": "int64"
                },
                "creatorDeptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersMaterialWork"
                    }
                },
                "jobsTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderJob"
                    }
                },
                "preliminaryJobsTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderJob"
                    }
                },
                "preliminaryDateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "ordersWorkerSetData": {
                    "$ref": "#/definitions/OrdersWorkerSetData"
                },
                "equipment": {
                    "$ref": "#/definitions/OrdersEquipmentWork"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "handlingNumber": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersWorkerSetData": {
            "type": "object",
            "properties": {
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersClose": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commentPerformer": {
                    "type": "string"
                },
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeBeginWork": {
                    "type": "string"
                },
                "timeEndWork": {
                    "type": "string"
                },
                "dateTimeClose": {
                    "type": "string",
                    "format": "date-time"
                },
                "materialId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderJobId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reasonCloseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTimeSolve": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersMaterial": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "matirialId": {
                    "type": "integer",
                    "format": "int64"
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersJobKind": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workCount": {
                    "type": "number",
                    "format": "double"
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "correctFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "actualFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                },
                "jobType": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OrderSingleCloseDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeBeginWork": {
                    "type": "string"
                },
                "timeEndWork": {
                    "type": "string"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "certificateNumber": {
                    "type": "string"
                },
                "certificateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "receivingTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "commentPerformer": {
                    "type": "string"
                },
                "receipSeries": {
                    "type": "string"
                },
                "receiptNumber": {
                    "type": "string"
                },
                "receiptDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersConfigDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "objectType": {
                    "type": "integer",
                    "format": "int32"
                },
                "visible": {
                    "type": "boolean"
                },
                "rw": {
                    "type": "boolean"
                },
                "obligation": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentRole": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersWorkType": {
            "type": "object",
            "properties": {
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMethod": {
                    "type": "integer",
                    "format": "int64"
                },
                "isEncumbrance": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dicountName": {
                    "type": "string"
                },
                "plannedTime": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnit": {
                    "type": "string"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrdersConnectTv": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "tvPacketType": {
                    "type": "string"
                }
            }
        },
        "EmployeeMaterialSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nomenclature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "OrdersMaterialWorkSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "materialId": {
                    "type": "integer",
                    "format": "int64"
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "fullCost": {
                    "type": "number",
                    "format": "double"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ConfirmPaymentSearchInputData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberName": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "chipherIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "documentNumActId": {
                    "type": "string"
                },
                "seriesBsoId": {
                    "type": "string"
                },
                "documentNumBsoId": {
                    "type": "string"
                },
                "paymentMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentWayId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderLinkIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "executorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "paymentStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "receiptMoneyDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "receiptMoneyDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "acceptMoneyDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "acceptMoneyDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "operatorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "employeeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelConfirmPaymentSearchInputData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ConfirmPaymentSearchInputData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ConfirmNonCash": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receivingTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "fullSum": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "CancelOrders": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "PayCodeKeyValue": {
            "type": "object",
            "properties": {
                "withArchive": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "idName": {
                    "type": "string"
                },
                "paycodeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationKindId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ReturnOrders": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "performerComment": {
                    "type": "string"
                }
            }
        },
        "PartKeyValue": {
            "type": "object",
            "properties": {
                "departmentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "WorkersKeyValue": {
            "type": "object",
            "properties": {
                "partIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ConfirmCash": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "docNumber": {
                    "type": "string"
                },
                "dateDoc": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receivingTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "dateReceiving": {
                    "type": "string",
                    "format": "date-time"
                },
                "paycodeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "sum": {
                    "type": "number",
                    "format": "double"
                },
                "operationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "fullSum": {
                    "type": "number",
                    "format": "double"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bankStatementId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractStatusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersContractDto": {
            "type": "object",
            "properties": {
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "paperCopy": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersConnectTPSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TscOrdersRegistryReflectionForm": {
            "type": "object",
            "properties": {
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reflectedId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TscOrdersRegistrySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reflectedId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderReasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "closeAuthorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "closeDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "closeDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancelDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "cancelDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apartmentId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersHistorySearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "roleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "typeOrderId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateBeginWork": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateEndWork": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeBeginWork": {
                    "type": "string"
                },
                "timeEndWork": {
                    "type": "string"
                },
                "deptartmentCreatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "authorCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateCancel": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersShortDataSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractNumber": {
                    "type": "string"
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "appealNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "appealId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "EmergencyOrdersSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastName": {
                    "type": "string"
                },
                "contractnumber": {
                    "type": "string"
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressRoomNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "entrance": {
                    "type": "string"
                },
                "orderDataFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "deptCreatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OrdersWorkTypeFullData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "idVer": {
                    "type": "integer",
                    "format": "int64"
                },
                "workTypeName": {
                    "type": "string"
                },
                "baseUnit": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnitName": {
                    "type": "string"
                },
                "leadTime": {
                    "type": "number"
                },
                "orderTypeIdsList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orderTypeNameList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workKindName": {
                    "type": "string"
                },
                "cipher": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyCode": {
                    "type": "string"
                },
                "priceWithoutVat": {
                    "type": "number"
                },
                "vat": {
                    "type": "number"
                },
                "vatSumm": {
                    "type": "number"
                },
                "priceWithVat": {
                    "type": "number"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAdd": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeChange": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderJobTypeFlag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersJobDiscount"
                    }
                },
                "index": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersJobDiscountFlagData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "jobsTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderJobTypeFlag"
                    }
                },
                "commonWorkTypeWithDiscountsp": {
                    "type": "string"
                },
                "workTypeWithFlag": {
                    "type": "string"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "flag": {
                    "type": "integer",
                    "format": "int32"
                },
                "index": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SumsRounded": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountsToRound": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "amountRounded": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrderStatusData": {
            "type": "object",
            "properties": {
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelEmergencyOrdersSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/EmergencyOrdersSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "JobCode": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Orders": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentName": {
                    "type": "string"
                },
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "partName": {
                    "type": "string"
                },
                "timeExecute": {
                    "type": "string"
                },
                "dateBeginWork": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateEndWork": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creatorDeptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeName": {
                    "type": "string"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonName": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationName": {
                    "type": "string"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "string"
                },
                "addressStreetsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetName": {
                    "type": "string"
                },
                "addressHousesName": {
                    "type": "string"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomNumber": {
                    "type": "string"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscribersName": {
                    "type": "string"
                },
                "contactNumber": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creator": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "deptNameUser": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "authorCancelId": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancelReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executeMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateCancel": {
                    "type": "string",
                    "format": "date-time"
                },
                "phoneNumberF": {
                    "type": "string"
                },
                "phoneNumberS": {
                    "type": "string"
                },
                "receiptSeries": {
                    "type": "string"
                },
                "receiptNumber": {
                    "type": "string"
                },
                "receiptDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "certificateNumber": {
                    "type": "string"
                },
                "certificateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusName": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "noteWorker": {
                    "type": "string"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "dateExecute": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTimeClose": {
                    "type": "string",
                    "format": "date-time"
                },
                "reflected": {
                    "type": "integer",
                    "format": "int32"
                },
                "creatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creatorDeptName": {
                    "type": "string"
                },
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customFieldId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customFieldText": {
                    "type": "string"
                },
                "ordersDataId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentMethodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "rn": {
                    "type": "integer",
                    "format": "int64"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "entrance": {
                    "type": "string"
                },
                "doorPhone": {
                    "type": "string"
                },
                "needAddDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "displayParam": {
                    "type": "integer",
                    "format": "int64"
                },
                "jobsTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderJob"
                    }
                },
                "jobsTypesPreliminary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderJob"
                    }
                },
                "materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersMaterialWork"
                    }
                },
                "orderLinkComplicatedId": {
                    "type": "string"
                },
                "departmentComplicatedId": {
                    "type": "string"
                },
                "authorCloseName": {
                    "type": "string"
                },
                "authorCancelName": {
                    "type": "string"
                },
                "sourceWay": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorCloseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperIdIssueGoods": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperIdReturnGoods": {
                    "type": "integer",
                    "format": "int64"
                },
                "contrOperReturnPrsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contrOperReturnDepotId": {
                    "type": "integer",
                    "format": "int64"
                },
                "handlingId": {
                    "type": "integer",
                    "format": "int64"
                },
                "handlingNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "handlingCategoryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "confirmPayStatus": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriberDataOrdersDto": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscribersName": {
                    "type": "string"
                },
                "enablePaperCopy": {
                    "type": "boolean"
                },
                "filterId": {
                    "type": "boolean"
                },
                "filterName": {
                    "type": "string"
                },
                "channelsCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "phoneNumberF": {
                    "type": "string"
                },
                "phoneNumberS": {
                    "type": "string"
                },
                "addressStreetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressStreetsName": {
                    "type": "string"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHousesName": {
                    "type": "string"
                },
                "addressRoomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomNumber": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "entrance": {
                    "type": "string"
                },
                "doorPhone": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stationName": {
                    "type": "string"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "connectNum": {
                    "type": "string"
                },
                "tpStatusName": {
                    "type": "string"
                },
                "listContractTpId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTscOrdersRegistrySearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TscOrdersRegistrySearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrdersCheck": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "check": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersTypeCallCenterDto": {
            "type": "object",
            "properties": {
                "departmentRoleId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersCheckExceptionsDto": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateCancel": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersCheckDiscountData": {
            "type": "object",
            "properties": {
                "incompatiblediscIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersJobDiscount"
                    }
                },
                "jobsTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersWorkTypeWithDiscount": {
            "type": "object",
            "properties": {
                "commonWorkTypeWithDiscountsp": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "workTypeWithDiscounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersCheckDiscountData"
                    }
                }
            }
        },
        "DiscountDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                },
                "isEncumbrance": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountSum": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrdersApproveDto": {
            "type": "object",
            "properties": {
                "ordersIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OrderReasonType": {
            "type": "object",
            "properties": {
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TpForEncumbranceDiscountSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrdersDiscountData": {
            "type": "object",
            "properties": {
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workCount": {
                    "type": "number",
                    "format": "double"
                },
                "discountId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "idDiscount": {
                    "type": "integer",
                    "format": "int64"
                },
                "unit": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "priceWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "costWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "costNoVatDiscounts": {
                    "type": "number",
                    "format": "double"
                },
                "vatSum": {
                    "type": "number",
                    "format": "double"
                },
                "costVat": {
                    "type": "number",
                    "format": "double"
                },
                "tooBigDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrdersRelatedDiscountData"
                    }
                }
            }
        },
        "OrdersRelatedDiscountData": {
            "type": "object",
            "properties": {
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountSum": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrdersJobTypesDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "ordersTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "planWorkTime": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "currency": {
                    "type": "string"
                },
                "rateWithoutVAT": {
                    "type": "number",
                    "format": "double"
                },
                "untitOfChange": {
                    "type": "string"
                }
            }
        },
        "OrdersDeptSearchData": {
            "type": "object",
            "properties": {
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TscOrdersExecutionSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apartmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "string"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderReasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "executionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionTimeFrom": {
                    "type": "string"
                },
                "executionTimeTo": {
                    "type": "string"
                },
                "orderRoleId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTscOrdersExecutionSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TscOrdersExecutionSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TscOrdersWorkResultSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "markId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apartmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "string"
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderReasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "executionDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "closeCancelDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "closeCancelDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderRoleId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTscOrdersWorkResultSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TscOrdersWorkResultSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelOrdersSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrdersSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrdersCanceledDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersDeptDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersSuitableDiscount": {
            "type": "object",
            "properties": {
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "ordersWorkType": {
                    "$ref": "#/definitions/OrdersWorkType"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "isEncumbrance": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountSum": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OrdersRelatedInfoDto": {
            "type": "object",
            "properties": {
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHousesId": {
                    "type": "integer",
                    "format": "int64"
                },
                "relatedInfoResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueType"
                    }
                },
                "deptId": {
                    "type": "integer",
                    "format": "int64"
                },
                "deptName": {
                    "type": "string"
                },
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "partName": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeName": {
                    "type": "string"
                }
            }
        },
        "OrdersTypeKeyVal": {
            "type": "object",
            "properties": {
                "ordersType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueType"
                    }
                },
                "roleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "defaultValue": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrdersWorkerSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "ordersId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusDelete": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "WorkLoad": {
            "type": "object",
            "properties": {
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateBeginWork": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "room": {
                    "type": "string"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "worksLoad": {
                    "type": "number",
                    "format": "double"
                },
                "commentCreator": {
                    "type": "string"
                }
            }
        },
        "PartsWorkLoadSearchData": {
            "type": "object",
            "properties": {
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDepartmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "addressHouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrderLinkVersionSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelOrderLinkSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderLinkSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderLinkSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkName": {
                    "type": "string"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrderLinkOrderTypeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeName": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderLinkDeleteForm": {
            "type": "object",
            "properties": {
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateDelete": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrderLinkEmployeeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeName": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelOrderLinkVersionSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderLinkVersionSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LinkPartForOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "idVersion": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "employeeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "employeeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrderLink": {
            "type": "object",
            "properties": {
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLinkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentName": {
                    "type": "string"
                },
                "orderLinkName": {
                    "type": "string"
                },
                "employeeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "employeeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orderTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderTypeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "note": {
                    "type": "string"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "addressHouseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelOrderLinkEmployeeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderLinkEmployeeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelOrderLinkOrderTypeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderLinkOrderTypeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderAddressTreeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDepId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelOrderAddressTreeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderAddressTreeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderPartHouse": {
            "type": "object",
            "properties": {
                "partId": {
                    "type": "integer",
                    "format": "int64"
                },
                "versionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "street": {
                    "type": "string"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "house": {
                    "type": "string"
                },
                "allIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelOrderTypeSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderTypeSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "OrderTypeSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "workKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkMarkId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateAddingFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAddingTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OrderTypeStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderTypeName": {
                    "type": "string"
                },
                "departmentNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusName": {
                    "type": "string"
                },
                "departmentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reasonIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "workKindIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "markIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OrderTypeKeyValueSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "orderTypePaid": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelOrderTypeKeyValueSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/OrderTypeKeyValueSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PromisedPaymentHistorySearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "operNameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "activ": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelPromisedPaymentHistorySearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PromisedPaymentHistorySearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PromisedPaymentCreation": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualTerm": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "AvailableAmountSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelAvailableAmountSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/AvailableAmountSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "AvailableAmountParams": {
            "type": "object",
            "properties": {
                "term": {
                    "type": "string"
                },
                "minInterval": {
                    "type": "string"
                }
            }
        },
        "AvailableAmount": {
            "type": "object",
            "properties": {
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "minAmount": {
                    "type": "number",
                    "format": "double"
                },
                "maxAmount": {
                    "type": "number",
                    "format": "double"
                },
                "minBalanceFact": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "SetAutoData": {
            "type": "object",
            "properties": {
                "isCheckedIds": {
                    "type": "boolean"
                },
                "idsArray": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "billingCycleDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "activityTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractorName": {
                    "type": "string"
                },
                "paymentStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractNumber": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "typeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amountFrom": {
                    "type": "number"
                },
                "amountTo": {
                    "type": "number"
                },
                "isAddingAccount": {
                    "type": "boolean"
                },
                "codeZact": {
                    "type": "string"
                },
                "codeOrg": {
                    "type": "string"
                },
                "unnOrg": {
                    "type": "string"
                },
                "nameOrg": {
                    "type": "string"
                }
            }
        },
        "PaymentRequirementsSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "billingCycleDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "activityTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractorName": {
                    "type": "string"
                },
                "paymentStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractNumber": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "typeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amountFrom": {
                    "type": "number"
                },
                "amountTo": {
                    "type": "number"
                }
            }
        },
        "ExportModelPaymentRequirementsSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PaymentRequirementsSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PaymentRequirement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "unn": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "paymentAmount": {
                    "type": "number"
                },
                "createDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationType": {
                    "type": "integer",
                    "format": "int32"
                },
                "operator": {
                    "type": "string"
                }
            }
        },
        "HistoryPeriodAccounting": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryPeriodActual": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryPeriodCreation": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryPeriodEstimated": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryPeriodSheet": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HistoryPersonalAccExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/HistoryPersonalAccOperSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extraFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "HistoryPersonalAccOperSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operationKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationNamesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "currenciesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                },
                "vatRaresIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "discountTo": {
                    "type": "number",
                    "format": "double"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operatorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operationAffect": {
                    "type": "integer",
                    "format": "int64"
                },
                "cipher": {
                    "type": "string"
                },
                "prepayBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalOperationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonCorrectionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "vatRatesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "counterpartyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "balanceType": {
                    "type": "integer",
                    "format": "int64"
                },
                "isBonusBalance": {
                    "type": "boolean"
                },
                "brokerBalanceKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "periodCreation": {
                    "$ref": "#/definitions/HistoryPeriodCreation"
                },
                "periodActual": {
                    "$ref": "#/definitions/HistoryPeriodActual"
                },
                "periodEstimated": {
                    "$ref": "#/definitions/HistoryPeriodEstimated"
                },
                "periodSheet": {
                    "$ref": "#/definitions/HistoryPeriodSheet"
                },
                "accountingDate": {
                    "$ref": "#/definitions/HistoryPeriodAccounting"
                },
                "isSystemOperatorSelected": {
                    "type": "boolean"
                },
                "isCorrection": {
                    "type": "boolean"
                }
            }
        },
        "EncumbranceKeyValueSearchData": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isTsc": {
                    "type": "boolean"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BonusKeyValueSearchData": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "bonusTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BonusTypeKeyValueSearchData": {
            "type": "object",
            "properties": {
                "withAuto": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelPersonalAccountDtoSearch": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountDtoSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountDtoSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "brokerAccs": {
                    "type": "boolean"
                },
                "contractStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "factBalance": {
                    "type": "boolean"
                },
                "calcBalance": {
                    "type": "boolean"
                },
                "accBalance": {
                    "type": "boolean"
                },
                "showContracts": {
                    "type": "boolean"
                },
                "withoutBrokerSubscr": {
                    "type": "boolean"
                },
                "withArchive": {
                    "type": "boolean"
                },
                "withBonusAccount": {
                    "type": "boolean"
                }
            }
        },
        "PersonalAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "number": {
                    "type": "string"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sysAccTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PersonalAccountContractSearchData": {
            "type": "object",
            "properties": {
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OperationGroupModel": {
            "type": "object",
            "properties": {
                "operNameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "withArchive": {
                    "type": "boolean"
                }
            }
        },
        "SubscrPersonalAccountsSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isArchive": {
                    "type": "boolean"
                }
            }
        },
        "PersonalAccountBonus": {
            "type": "object",
            "properties": {
                "bonusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "PersonalAccountBonusSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PersonalAccountBonusDisableData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/PersonalAccountBonusSearchData"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "PersonalAccountBonusEditData": {
            "type": "object",
            "properties": {
                "bonusOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accBonusesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "bonusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "ExportModelPersonalAccountBonusSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountBonusSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountBonusOperLinkedDocSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isArchive": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelSubscrPersonalAccountsSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscrPersonalAccountsSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelPersonalAccountBonusOperLinkedDocSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountBonusOperLinkedDocSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccOperBaseSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operationKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationNamesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "currenciesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                },
                "vatRaresIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "discountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "discountTo": {
                    "type": "number",
                    "format": "double"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operatorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operationAffect": {
                    "type": "integer",
                    "format": "int64"
                },
                "cipher": {
                    "type": "string"
                },
                "prepayBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "eripId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "originalOperationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonCorrectionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "vatRatesIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "counterpartyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "balanceType": {
                    "type": "integer",
                    "format": "int64"
                },
                "isBonusBalance": {
                    "type": "boolean"
                },
                "brokerBalanceKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "periodCreation": {
                    "$ref": "#/definitions/HistoryPeriodCreation"
                },
                "periodActual": {
                    "$ref": "#/definitions/HistoryPeriodActual"
                },
                "periodEstimated": {
                    "$ref": "#/definitions/HistoryPeriodEstimated"
                },
                "periodSheet": {
                    "$ref": "#/definitions/HistoryPeriodSheet"
                },
                "accountingDate": {
                    "$ref": "#/definitions/HistoryPeriodAccounting"
                },
                "isSystemOperatorSelected": {
                    "type": "boolean"
                },
                "isCorrection": {
                    "type": "boolean"
                }
            }
        },
        "PersonalAccOperationForCorrExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccOperBaseSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extraFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountChangeAccountData": {
            "type": "object",
            "properties": {
                "operationAction": {
                    "type": "integer",
                    "format": "int64"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operNameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "calculateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "accountingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "amountWithVatAndDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatAmount": {
                    "type": "number",
                    "format": "double"
                },
                "brokerOperationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "operGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discountRate": {
                    "type": "number",
                    "format": "double"
                },
                "sourceOperationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "requestNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "codeMaintenanceCenterSv": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "servicedTariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountRounded": {
                    "type": "number",
                    "format": "double"
                },
                "discountAmount": {
                    "type": "number",
                    "format": "double"
                },
                "prepayBillId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonCorrection": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountBroker": {
                    "type": "number",
                    "format": "double"
                },
                "amountBrokSubscrs": {
                    "type": "number",
                    "format": "double"
                },
                "amountCorrectionWithVatAndDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "operTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sourceAccountingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "sourceCorrectedAmount": {
                    "type": "number",
                    "format": "double"
                },
                "operationAffectId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractEncumbrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "actualizationCode": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PersonalAccExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountOperationSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extraFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountOperationSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "kindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "nameId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "balanceType": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerBalanceKindId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PersonalAccountExportModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PersonalAccountOperationSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extraFields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PersonalAccountOperUpdateData": {
            "type": "object",
            "properties": {
                "operId": {
                    "type": "integer",
                    "format": "int64"
                },
                "correctionReasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "AddingJobSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SelectedObjectDataAddingJobSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/AddingJobSearchData"
                }
            }
        },
        "PrepayBillUpdateData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscrBankAccId": {
                    "type": "integer",
                    "format": "int64"
                },
                "duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceUpdateData"
                    }
                }
            }
        },
        "ServiceUpdateData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderWorkTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountWithVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "amountVat": {
                    "type": "number",
                    "format": "double"
                },
                "serviceName": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "AddingServiceSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activityTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SelectedObjectDataAddingServiceSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/AddingServiceSearchData"
                }
            }
        },
        "PrepaymentInvoiceDetailsSearchData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PrepaymentInvoiceSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "operatorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "currencyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentMethodIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "paymentDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "formationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "formationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "validityFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "validityTo": {
                    "type": "integer",
                    "format": "int64"
                },
                "systemOperatorSelected": {
                    "type": "boolean"
                }
            }
        },
        "PrepaymentInvoiceStatusData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/ObjectSearchData"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepaymentAmount": {
                    "type": "number",
                    "format": "double"
                },
                "multiset": {
                    "type": "boolean"
                }
            }
        },
        "PrepaymentInvoiceStatusDataPrepaymentInvoiceSearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/PrepaymentInvoiceSearchForm"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "prepaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepaymentAmount": {
                    "type": "number",
                    "format": "double"
                },
                "multiset": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelPrepaymentInvoiceSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/PrepaymentInvoiceSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelRecalculationSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/RecalculationSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RecalculationSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "contractNumber": {
                    "type": "string"
                },
                "subscriberName": {
                    "type": "string"
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "brokerContractNumber": {
                    "type": "string"
                },
                "billingCycleDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "workWithBroker": {
                    "type": "boolean"
                },
                "brokerUnp": {
                    "type": "string"
                },
                "creationDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "isDbfParticipate": {
                    "type": "boolean"
                },
                "subscriberUnp": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "currencyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dateAccountAffectFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateAccountAffectTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDueFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDueTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "RecalculationSetData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isManualMode": {
                    "type": "boolean"
                },
                "errorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "infoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingCycleFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "billingCycleTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isRecalcInPastYears": {
                    "type": "boolean"
                },
                "recalcYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateAccountAffect": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDue": {
                    "type": "string",
                    "format": "date-time"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isRecalcWaiting": {
                    "type": "boolean"
                },
                "amountMain": {
                    "type": "number",
                    "format": "double"
                },
                "amountExt": {
                    "type": "number",
                    "format": "double"
                },
                "amountVat": {
                    "type": "number",
                    "format": "double"
                },
                "amountTotal": {
                    "type": "number",
                    "format": "double"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountDiscountMain": {
                    "type": "number",
                    "format": "double"
                },
                "amountDiscountExt": {
                    "type": "number",
                    "format": "double"
                },
                "amountDiscountTotal": {
                    "type": "number",
                    "format": "double"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "VatRateSearchData": {
            "type": "object",
            "properties": {
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Recalculation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNumber": {
                    "type": "string"
                },
                "subscrId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberName": {
                    "type": "string"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerName": {
                    "type": "string"
                },
                "billingCycle": {
                    "type": "string"
                },
                "dateAccountAffect": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateDue": {
                    "type": "string",
                    "format": "date-time"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "waitingForDbf": {
                    "type": "string"
                },
                "amountMain": {
                    "type": "number",
                    "format": "double"
                },
                "amountExt": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyName": {
                    "type": "string"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpName": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "RecalculationData": {
            "type": "object",
            "properties": {
                "isManualMode": {
                    "type": "boolean"
                },
                "errorId": {
                    "type": "integer",
                    "format": "int64"
                },
                "infoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkedContractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DebtDocumentSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sendDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "sendDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "receiveDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "receiveDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "daysAmountFrom": {
                    "type": "integer",
                    "format": "int32"
                },
                "daysAmountTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "additionalAmountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "additionalAmountTo": {
                    "type": "number",
                    "format": "double"
                },
                "docTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "formationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "docNum": {
                    "type": "string"
                },
                "emailStatusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "counterpartyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "SelectedObjectDataDebtDocumentSearchForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/DebtDocumentSearchForm"
                }
            }
        },
        "DebtDocumentDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "docNum": {
                    "type": "string"
                },
                "accId": {
                    "type": "integer",
                    "format": "int64"
                },
                "docTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "formationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sendDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "receiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "reasonId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "additionalAmount": {
                    "type": "number",
                    "format": "double"
                },
                "daysAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "counterpartyName": {
                    "type": "string"
                },
                "counterpartyTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractNum": {
                    "type": "string"
                },
                "dateDoc": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileSystemId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DebtEmails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "email": {
                    "type": "string"
                },
                "emailStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileId": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DebtSchedule": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DebtorSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "reportingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amountFrom": {
                    "type": "number",
                    "format": "double"
                },
                "amountTo": {
                    "type": "number",
                    "format": "double"
                },
                "daysAmountFrom": {
                    "type": "integer",
                    "format": "int32"
                },
                "daysAmountTo": {
                    "type": "integer",
                    "format": "int32"
                },
                "creditLimitFrom": {
                    "type": "number",
                    "format": "double"
                },
                "creditLimitTo": {
                    "type": "number",
                    "format": "double"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterpartyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "workWithBroker": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelDebtorSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DebtorSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelDebtDocumentSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/DebtDocumentSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RoundingConfigSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "methodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "precisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ruleId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelRoundingConfigSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/RoundingConfigSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RoundingConfig": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "rule": {
                    "type": "string"
                },
                "subscrType": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "precision": {
                    "type": "string"
                },
                "methodId": {
                    "type": "integer",
                    "format": "int64"
                },
                "precisionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "changeDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SubscriberShortData": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "contactPhone": {
                    "type": "string"
                },
                "room": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityType": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isContractNumberGeneration": {
                    "type": "boolean"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "billingDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SubscriberBonusSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isArchive": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelSubscriberBonusSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberBonusSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SubscriberDiscountSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isArchived": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelSubscriberDiscountSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberDiscountSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SubscriberEncumbrancesSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractOperId": {
                    "type": "integer",
                    "format": "int64"
                },
                "archived": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelSubscriberEncumbrancesSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberEncumbrancesSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SubscriberSearchTPData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "archivedId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelSubscriberSearchTPData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberSearchTPData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Subscriber": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/SubscriberCommon"
                },
                "additional": {
                    "$ref": "#/definitions/SubscriberAdditional"
                },
                "contact": {
                    "$ref": "#/definitions/SubscriberContact"
                },
                "doc": {
                    "$ref": "#/definitions/SubscriberDoc"
                }
            }
        },
        "SubscriberAdditional": {
            "type": "object",
            "properties": {
                "managerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "correspondenceDeliveryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "migrationBaseId": {
                    "type": "integer",
                    "format": "int32"
                },
                "login": {
                    "type": "string"
                },
                "subscrCodeInBase": {
                    "type": "string"
                },
                "codeWord": {
                    "type": "string"
                },
                "isMajorContributor": {
                    "type": "boolean"
                },
                "isInterdependent": {
                    "type": "boolean"
                },
                "isOffshoreResident": {
                    "type": "boolean"
                },
                "branchCode": {
                    "type": "string"
                },
                "emailNoticeDisableBySubscr": {
                    "type": "boolean"
                }
            }
        },
        "SubscriberCommon": {
            "type": "object",
            "properties": {
                "lastName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "residentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sexId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscrSubgroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "innerNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "fullName": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "okpo": {
                    "type": "string"
                }
            }
        },
        "SubscriberContact": {
            "type": "object",
            "properties": {
                "contactPhone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "responsiblePersonPosition": {
                    "type": "string"
                },
                "contactPersonPosition": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "legalAddress": {
                    "type": "string"
                },
                "realAddress": {
                    "type": "string"
                },
                "responsiblePersonPhone": {
                    "type": "string"
                },
                "contactPersonPhone": {
                    "type": "string"
                },
                "faxNumber": {
                    "type": "string"
                },
                "postAddress": {
                    "type": "string"
                },
                "responsiblePersonName": {
                    "type": "string"
                },
                "contactPersonName": {
                    "type": "string"
                },
                "otherPhones": {
                    "type": "string"
                },
                "additionalAddress": {
                    "type": "string"
                },
                "actionReason": {
                    "type": "string"
                }
            }
        },
        "SubscriberDoc": {
            "type": "object",
            "properties": {
                "docTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "docNumber": {
                    "type": "string"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "personalNumber": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "birthPlace": {
                    "type": "string"
                },
                "issuerName": {
                    "type": "string"
                },
                "residenceAddress": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "SubscriberContractSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractStateId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExportModelSubscriberContractSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberContractSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LinkSubscriberDataSubscriberSearchFormData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/SubscriberSearchFormData"
                },
                "subscrGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "drop": {
                    "type": "boolean"
                },
                "unlink": {
                    "type": "boolean"
                }
            }
        },
        "ExportModelSubscriberSearchFormData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/SubscriberSearchFormData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SubscriberMainTpSearchData": {
            "type": "object",
            "properties": {
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SubscriberSearchShortData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "subscriberTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "contractNum": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SubscriberCallCenterSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "name": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "houseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roomId": {
                    "type": "integer",
                    "format": "int64"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "docNum": {
                    "type": "string"
                },
                "unp": {
                    "type": "string"
                },
                "subscrSubgroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseMigrationCode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountNumber": {
                    "type": "string"
                },
                "stationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tariffPlanId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ElasticSearchForm": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "AdditionalServiceRow": {
            "type": "object",
            "properties": {
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Relation"
                    }
                }
            }
        },
        "Relation": {
            "type": "object",
            "properties": {
                "tpMainId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpAdditionalId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isPCActivation": {
                    "type": "integer",
                    "format": "int32"
                },
                "isPCDeactivation": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CostMatrixSearchForm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CostMatrix": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "hasFutureVersion": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "defCosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostMatrixDefaultCost"
                    }
                },
                "tpCosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostMatrixTariffPlanShort"
                    }
                },
                "current": {
                    "type": "boolean"
                }
            }
        },
        "CostMatrixDefaultCost": {
            "type": "object",
            "properties": {
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "costWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CostMatrixTariffPlanShort": {
            "type": "object",
            "properties": {
                "tpFromId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpToId": {
                    "type": "integer",
                    "format": "int64"
                },
                "changeCostWithoutVat": {
                    "type": "number",
                    "format": "double"
                },
                "isAutoChange": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCustomCost": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Matrix": {
            "type": "object",
            "properties": {
                "lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MatrixInteractionSetModel"
                    }
                }
            }
        },
        "MatrixInteractionSetModel": {
            "type": "object",
            "properties": {
                "tpLeftId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpUpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "interactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCustomData": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CostMatrixSearchTariffKeyValue": {
            "type": "object",
            "properties": {
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                },
                "canUseInComplex": {
                    "type": "boolean"
                }
            }
        },
        "TariffPlanSearchId": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TariffPlanSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "complexTpActivTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "onlyForComplex": {
                    "type": "boolean"
                }
            }
        },
        "UpdateStatusDataTariffPlanSearchData": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "selected": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/TariffPlanSearchData"
                },
                "dateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "note": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTariffPlanSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TariffPlanSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TariffPlanTvChannelSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "tvTypeId": {
                    "type": "string",
                    "format": "byte"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "number",
                    "format": "float"
                },
                "tvStatusId": {
                    "type": "string",
                    "format": "byte"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TariffPlanVerId": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TariffPlanForComplexSearchData": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "complexTpOnly": {
                    "type": "boolean"
                },
                "linkedTPId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTariffPlanSearchId": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TariffPlanSearchId"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TariffPlanId": {
            "type": "object",
            "properties": {
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExportModelTariffPlanForComplexSearchData": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TariffPlanForComplexSearchData"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "CreditLimitInterval": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number"
                },
                "subscrAgeFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscrAgeTo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TariffPlan": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tpId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "versionDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionDateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "versionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tpDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "tpDateActTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "activTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "activType": {
                    "type": "string"
                },
                "activSubTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tpStatus": {
                    "type": "string"
                },
                "tpStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "common": {
                    "$ref": "#/definitions/TariffPlanCommon"
                },
                "paymentProperties": {
                    "$ref": "#/definitions/TariffPlanPayment"
                },
                "creditLimit": {
                    "$ref": "#/definitions/TariffPlanCreditLimit"
                },
                "internetProperties": {
                    "$ref": "#/definitions/TariffPlanInternet"
                },
                "goodsProperties": {
                    "$ref": "#/definitions/TariffPlanGoods"
                },
                "additionalServicesProperties": {
                    "$ref": "#/definitions/TariffPlanAdditionalServices"
                },
                "tvProperties": {
                    "$ref": "#/definitions/TariffPlanTv"
                }
            }
        },
        "TariffPlanAdditionalServices": {
            "type": "object",
            "properties": {
                "isAdditionalParams": {
                    "type": "boolean"
                },
                "turboButtonPeriod": {
                    "type": "integer",
                    "format": "int64"
                },
                "speedInternalIn": {
                    "type": "integer",
                    "format": "int64"
                },
                "speedInternalOut": {
                    "type": "integer",
                    "format": "int64"
                },
                "speedExternalIn": {
                    "type": "integer",
                    "format": "int64"
                },
                "speedExternalOut": {
                    "type": "integer",
                    "format": "int64"
                },
                "speedInternalInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "speedInternalOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "speedExternalInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "speedExternalOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TariffPlanCommon": {
            "type": "object",
            "properties": {
                "subscrTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseUnitId": {
                    "type": "integer",
                    "format": "int64"
                },
                "isResidence": {
                    "type": "boolean"
                },
                "note": {
                    "type": "string"
                },
                "tarifficationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCreditLimit": {
                    "type": "boolean"
                },
                "complexTpOnly": {
                    "type": "boolean"
                },
                "isInComplexTP": {
                    "type": "boolean"
                },
                "isTpInDiscount": {
                    "type": "boolean"
                },
                "isTpInDiscountCalc": {
                    "type": "boolean"
                },
                "isTpInDiscountAdvPayment": {
                    "type": "boolean"
                },
                "isTpInDiscountTsc": {
                    "type": "boolean"
                },
                "complexTpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "complexTpDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscrSubgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "statusDateActFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleteNote": {
                    "type": "string"
                },
                "accessCriteriaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "TariffPlanCreditLimit": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "creditLimitTypeId": {
                    "type": "string",
                    "format": "byte"
                },
                "isArrearsLack": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "minAccrualAmount": {
                    "type": "number"
                },
                "intervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreditLimitInterval"
                    }
                }
            }
        },
        "TariffPlanGoods": {
            "type": "object",
            "properties": {
                "goodsModelIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "goodsBatchIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "installmentProperties": {
                    "$ref": "#/definitions/TariffPlanInstallment"
                }
            }
        },
        "TariffPlanInstallment": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number",
                    "format": "float"
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountDownPayment": {
                    "type": "number"
                },
                "saleTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TariffPlanInternet": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "connectionTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tarifficationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isTransferUnusedTraffic": {
                    "type": "boolean"
                },
                "trafficRecalcRuleId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalLimit": {
                    "type": "number",
                    "format": "double"
                },
                "internalLimitMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "externalLimit": {
                    "type": "number",
                    "format": "double"
                },
                "externalLimitMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "tpRestrictionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "extLimitSpeedIn": {
                    "type": "number",
                    "format": "double"
                },
                "extLimitSpeedInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "extLimitSpeedOut": {
                    "type": "number",
                    "format": "double"
                },
                "extLimitSpeedOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "peerLimitSpeedIn": {
                    "type": "number",
                    "format": "double"
                },
                "peerLimitSpeedInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "peerLimitSpeedOut": {
                    "type": "number",
                    "format": "double"
                },
                "peerLimitSpeedOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "costMbWithoutVat": {
                    "type": "number"
                },
                "costMb": {
                    "type": "number"
                },
                "intervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TariffPlanInterval"
                    }
                }
            }
        },
        "TariffPlanInterval": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "timeIntervalFrom": {
                    "type": "string",
                    "format": "byte"
                },
                "timeIntervalTo": {
                    "type": "string",
                    "format": "byte"
                },
                "internalSpeedIn": {
                    "type": "number",
                    "format": "double"
                },
                "internalSpeedInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalSpeedOut": {
                    "type": "number",
                    "format": "double"
                },
                "internalSpeedOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "externalSpeedIn": {
                    "type": "number",
                    "format": "double"
                },
                "externalSpeedInMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "externalSpeedOut": {
                    "type": "number",
                    "format": "double"
                },
                "externalSpeedOutMeasure": {
                    "type": "integer",
                    "format": "int32"
                },
                "costWithoutVat": {
                    "type": "number"
                },
                "cost": {
                    "type": "number"
                }
            }
        },
        "TariffPlanPayment": {
            "type": "object",
            "properties": {
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "feeModeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "withdrawalTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatRateId": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number"
                },
                "amountWithoutVat": {
                    "type": "number"
                },
                "paymentTermTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dayOfPayment": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "TariffPlanTv": {
            "type": "object",
            "properties": {
                "tvPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TariffPlanTvPackage"
                    }
                }
            }
        },
        "TariffPlanTvChannel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "frequency": {
                    "type": "number",
                    "format": "float"
                },
                "tvStatusId": {
                    "type": "string",
                    "format": "byte"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "TariffPlanTvPackage": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tvPacketTypeId": {
                    "type": "string",
                    "format": "byte"
                },
                "costChannelWithoutVat": {
                    "type": "number"
                },
                "costWithoutVat": {
                    "type": "number"
                },
                "cost": {
                    "type": "number"
                },
                "isAutoCalcCost": {
                    "type": "boolean"
                },
                "dateChannels": {
                    "type": "string",
                    "format": "date-time"
                },
                "tvIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tvChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TariffPlanTvChannel"
                    }
                }
            }
        },
        "TariffPlanLinkedTvSearchData": {
            "type": "object",
            "properties": {
                "tpVerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tvPacketTypeId": {
                    "type": "string",
                    "format": "byte"
                },
                "dateChannels": {
                    "type": "string",
                    "format": "date-time"
                },
                "refreshInput": {
                    "type": "boolean"
                },
                "tvIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ExportModelTariffPlanVerId": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TariffPlanVerId"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ExportModelTerritorialBindingSearchForm": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TerritorialBindingSearchForm"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TerritorialBindingSearchForm": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "activSubTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "stationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "departmentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "streetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "brokerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "houseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "TerritorialBindingLinkForm": {
            "type": "object",
            "properties": {
                "houseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tpIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "unLink": {
                    "type": "boolean"
                }
            }
        },
        "TerritorialBindingTpKeyValForm": {
            "type": "object",
            "properties": {
                "houseIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "forUnlink": {
                    "type": "boolean"
                },
                "activeTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Traffic": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "beginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "durationSession": {
                    "type": "string"
                },
                "statusSession": {
                    "type": "integer",
                    "format": "int64"
                },
                "pptpCaller": {
                    "type": "string"
                },
                "pptpCaled": {
                    "type": "string"
                },
                "ipoeCaller": {
                    "type": "string"
                },
                "ipoeCaled": {
                    "type": "string"
                },
                "externalIncomingTraffic": {
                    "type": "number",
                    "format": "double"
                },
                "externalOutcommingTraffic": {
                    "type": "number",
                    "format": "double"
                },
                "peerIncomingTraffic": {
                    "type": "number",
                    "format": "double"
                },
                "peerOutcommingTraffic": {
                    "type": "number",
                    "format": "double"
                },
                "rowNumber": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TrafficSearch": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sortParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "tarifPlanId": {
                    "type": "integer",
                    "format": "int64"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ExportModelTrafficSearch": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/TrafficSearch"
                },
                "fieldNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TrafficSearchTP": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "idAddress": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityType": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractTpId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TrafficContractSearch": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CredentialDto": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                }
            }
        },
        "ChangeLoginModel": {
            "type": "object",
            "properties": {
                "subscriberId": {
                    "type": "integer",
                    "format": "int64"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "PasswordChangeDataDto": {
            "type": "object",
            "properties": {
                "oldPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                }
            }
        }
    }
}